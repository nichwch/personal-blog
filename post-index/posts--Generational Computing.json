{"My dream is to enable something I term \"generational computing.\" I want my kids and my grandkids to someday be able to interface with the artifacts of my digital life. I want them to be able to read my notes and ask an LLM about what I've learned over my life. I want them to be able to chat with a replica of me trained on my writings. I want them to be able to look through the music I made and the music I listened to, and see the connections between the two. I want them to be able to upload their own musical ideas or writings, and see the connections between what they've made and what I've made. ": [{"content": "My dream is to enable something I term \"generational computing.\" I want my kids and my grandkids to someday be able to interface with the artifacts of my digital life. I want them to be able to read my notes and ask an LLM about what I've learned over my life. I want them to be able to chat with a replica of me trained on my writings. I want them to be able to look through the music I made and the music I listened to, and see the connections between the two. I want them to be able to upload their own musical ideas or writings, and see the connections between what they've made and what I've made. ", "parent": "Generational Computing.txt", "score": 3.9975981131577284e-06}, {"content": "I want digital technology to bridge divides between generations instead of widening them. I want it to foster remembrance instead of forgetting. I want it to reward thinking multiple generations into the future instead of until the end of the quarter.", "parent": "Generational Computing.txt", "score": 0.8014623578083332}, {"content": "I want to build a system that will enable someone to write about a problem that they have, then discover that their great aunt encountered the exact same problem in her life, and how she came to a solution.", "parent": "Generational Computing.txt", "score": 0.9047458790301731}, {"content": "I'm not really sure how to square this. One idea I've been obsessed with is how I can make the process of writing software more like the process of making music. ", "parent": "NOW PAGE.txt", "score": 0.9167151764676033}, {"content": "My goal in life right now is to focus more on programming, while keeping music as a hobby. I want to improve at both, and someday I'd like to unite these two interests - not in some surface level way like getting really into digital signal processing or generative music, but by making the process of writing software more like the process of making music (intuitive, embodied, modular, composable).", "parent": "NOW PAGE.txt", "score": 0.9214554334253632}, {"content": "Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?  ", "parent": "The AI-first operating system of the future.txt", "score": 0.9868792295455933}, {"content": "In general, computers have enabled the Promethean task of stealing creative abilities previously reserved for deities. Musicians have their electrically amplified instruments, their DAWs, the vast oceans of samples available on the internet; artists have been blessed with digital canvases, 3D modeling, and the ubiquity of screens that renders a possible canvas in every man's pocket. ", "parent": "Prometheus.txt", "score": 0.991788387298584}, {"content": "Many of my ideas are in service of a singular dream: having the ability to combine incoherent fragments of creative inspiration into a cohesive organized whole. exegesis is about enabling that with writing. I hope the design of this site will help me do that with interface ideas.", "parent": "Fragments.txt", "score": 1.0103546380996704}, {"content": "My hope is that local-first AI and CRDTs enable us to create decentralized, local first software that will stand the tests of time. This is why I'm so bullish on local first applications, plain text, file systems, and unix - they have already stood the tests of time, and will likely continue to. They are deeply lindy in a way that mobile and cloud computing are not. ", "parent": "Generational Computing.txt", "score": 1.0653174779979102}, {"content": "As I looked further into these tools, I found that some had taken to calling them [Second Brains](https://fortelabs.co/blog/basboverview/). I thought this was incredibly exciting. The term sounds cyberpunk; building a \"second brain\" sounds way cooler than building a \"note taking app.\" At the same time, something about it unsettled me. ", "parent": "Second Brains.txt", "score": 1.0699541568756104}], "": [{"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 1.2026228078123622}, {"content": "~", "parent": "Fragments.txt", "score": 1.202622890472412}, {"content": "~", "parent": "The making of Nomad Hypertext.txt", "score": 1.202627182006836}, {"content": "~", "parent": "The making of Nomad Hypertext.txt", "score": 1.2026363611221313}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 1.2026889059926669}, {"content": "~", "parent": "NOW PAGE.txt", "score": 1.2026889059926669}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 1.2026889059926669}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 1.2026889059926669}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 1.2026889059926669}, {"content": "~", "parent": "NOW PAGE.txt", "score": 1.2026889059926669}], "I want to build a system that will enable someone to write about a problem that they have, then discover that their great aunt encountered the exact same problem in her life, and how she came to a solution.": [{"content": "I want to build a system that will enable someone to write about a problem that they have, then discover that their great aunt encountered the exact same problem in her life, and how she came to a solution.", "parent": "Generational Computing.txt", "score": 0.0}, {"content": "My dream is to enable something I term \"generational computing.\" I want my kids and my grandkids to someday be able to interface with the artifacts of my digital life. I want them to be able to read my notes and ask an LLM about what I've learned over my life. I want them to be able to chat with a replica of me trained on my writings. I want them to be able to look through the music I made and the music I listened to, and see the connections between the two. I want them to be able to upload their own musical ideas or writings, and see the connections between what they've made and what I've made. ", "parent": "Generational Computing.txt", "score": 0.9047077820479407}, {"content": "I'm not really sure how to square this. One idea I've been obsessed with is how I can make the process of writing software more like the process of making music. ", "parent": "NOW PAGE.txt", "score": 1.079824664623124}, {"content": "Fortunately, it looks like there's progress being made here, with projects like [https://github.com/blocks/blocks.](https://github.com/blocks/blocks.) I want to build my own solutions, maybe borrowing from current projects.[[code]] [[ideas]] [[tools for thought]] ", "parent": "untitled-9-24-2021.txt", "score": 1.135624647140503}, {"content": "The usual way to think about technology, software, and startups is that they solve problems, and so it follows then that the best way to create a new technology is to find a problem people have and solve it. This is not a bad approach to take, and it's been successful for many people. Still, I think it's too narrow.", "parent": "Creating new kinds of people.txt", "score": 1.139035940170288}, {"content": "On the other hand, creative tools for thought are by definition focused on something you could never find on Google - your ideas and experiences. If you want to link your life experiences to your ideas and other content, you're going to have to write it down. For this reason, I think the future of backlink focused writing apps should be focused on creative output, not Personal Knowledge Management. It's the direction I'll be taking [[exegesis]] in the future. ", "parent": "On tools for thought: knowledge management vs creativity.txt", "score": 1.149014949798584}, {"content": "I want to write more. I don't really care about writing \"better\" or more \"professionally\", because I don't write for a living, and I'm not really interested in selling people on my opinions. Instead, I want to write to broadcast my interests, so I can attract others who have similar interests. Hopefully, [[exegesis]] will be an able and capable platform for me to do this. ", "parent": "Reflections for the New Year.txt", "score": 1.154576301574707}, {"content": "I want to try something: just posting a mind dump on [[exegesis]] every morning. I've had a theory for a while now that the best use case for exegesis is journaling, and this would be a good way to put it to the test. It will also be a good way for me to share my ideas with the world. ", "parent": "untitled-9-20-2021.txt", "score": 1.158522129058838}, {"content": "I think eventually, I might want to deploy a blog with a full fledged backend, so users can query anything they'd like to my blog. ", "parent": "What is Yurt.txt", "score": 1.1793391704559326}, {"content": "Many of my ideas are in service of a singular dream: having the ability to combine incoherent fragments of creative inspiration into a cohesive organized whole. exegesis is about enabling that with writing. I hope the design of this site will help me do that with interface ideas.", "parent": "Fragments.txt", "score": 1.1926851272583008}], "I want digital technology to bridge divides between generations instead of widening them. I want it to foster remembrance instead of forgetting. I want it to reward thinking multiple generations into the future instead of until the end of the quarter.": [{"content": "I want digital technology to bridge divides between generations instead of widening them. I want it to foster remembrance instead of forgetting. I want it to reward thinking multiple generations into the future instead of until the end of the quarter.", "parent": "Generational Computing.txt", "score": 7.620691524108895e-07}, {"content": "My dream is to enable something I term \"generational computing.\" I want my kids and my grandkids to someday be able to interface with the artifacts of my digital life. I want them to be able to read my notes and ask an LLM about what I've learned over my life. I want them to be able to chat with a replica of me trained on my writings. I want them to be able to look through the music I made and the music I listened to, and see the connections between the two. I want them to be able to upload their own musical ideas or writings, and see the connections between what they've made and what I've made. ", "parent": "Generational Computing.txt", "score": 0.8014769193372646}, {"content": "The internet raised an entire generation to think nonlinearly, and it is only recently that tools for thinking have caught up. ", "parent": "Why I made exegesis.txt", "score": 1.0918313264846802}, {"content": "In my view, the whole movement of [[tools for thought]] (Roam, personal knowledge management systems, etc, etc.) is to make computers help us think better. That was the point from the very start, it was what Steve Jobs meant when he called the computer \"a bicycle for the mind.\" In the last decade, we've seen the very opposite - the use of the computer as an extractive tool, a weapon to siphon attention and harvest data. ", "parent": "Controlling what you see.txt", "score": 1.1557304859161377}, {"content": "We shape technology, but technology shapes us as well. Our thought processes have come to resemble the disorganized, amorphous, nonlinear streams that we consume information with. When was the last time you really felt focused? [[exegesis]] is a tool designed for the brave new world we find ourselves living in. Instead of resisting the increasingly disorganized information ecosystem of the modern world, it embraces it. It is designed to help you make sense of chaos.", "parent": "Manifesto.txt", "score": 1.172637701034546}, {"content": "This quote reflects a common strain of thinking in Silicon Valley, that our biological selves are hopeless broken, that we need to hack into our brains dopamine-systems and rewire them for maximal productivity, that everything natural is ripe for disruption. This thinking is especially prevalent with the recent rise of PKMs (personal knowledge management systems) like Roam and Notion. Here, an electronic notetaking app is the \"blessed machine\", and your natural memory is the \"flesh that will decay and fail you.\"", "parent": "Second Brains.txt", "score": 1.1822788715362549}, {"content": "I have long distance friendships that are sustained almost entirely by exchanging tweets or instagram reels over DMs. I think this is a habit my generation has developed since the days of tagging friends in the comments of memes on Facebook meme pages. On some level this seems really dumb, but it's also helped me stay in touch with some of my closest friends who live across the continent. Substack seems like another avenue to do this, and that seems pretty nice. ", "parent": "Substack.txt", "score": 1.1852635275932748}, {"content": "\"One of my perennial complaints about the current crop of \u201ctools for thought\u201d has been that most of them aren\u2019t really about thinking per se, just about improving memory. We can take down information into apps like Roam Research or Notion and recall them easily later, but it\u2019s an overstatement to call them tools for thought. Recollection is such a small, basic part of thinking! There is so much more to thinking than simply remembering something accurately. I think we can acknowledge the benefits these apps bring while also admitting that better tools for thought should help us do more with ideas than just remember and recall.\" [[quotes]] [[Linus Lee]] [[tools for thought]] ", "parent": "On tools for thought: knowledge management vs creativity.txt", "score": 1.2076510190963745}, {"content": "My theory is that the current wave rational tools for thought (PKMs, note-taking apps, [[roam]], etc.) will be disrupted by AI-powered tools and search engines. Note taking has always felt futile to me, because the information age has made remembering/memorizing information useless - why memorize when you can look it up? 1", "parent": "On tools for thought: knowledge management vs creativity.txt", "score": 1.2092499732971191}, {"content": "Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?  ", "parent": "The AI-first operating system of the future.txt", "score": 1.2096943855285645}], "Cloud software lacks the longetivity to enable this dream. Modern day cloud applications take huge amounts of manpower and capital to maintain, which means they are subject to the whims of markets. Established products like Google Docs are unlikely to shut down, but they are still subject to market pressures, and you will inevitably log in one day to find the entire interface revamped, or worse, your favorite feature nerfed. Over a century or two, how confident are you that your data and applications will still be usable?": [{"content": "Cloud software lacks the longetivity to enable this dream. Modern day cloud applications take huge amounts of manpower and capital to maintain, which means they are subject to the whims of markets. Established products like Google Docs are unlikely to shut down, but they are still subject to market pressures, and you will inevitably log in one day to find the entire interface revamped, or worse, your favorite feature nerfed. Over a century or two, how confident are you that your data and applications will still be usable?", "parent": "Generational Computing.txt", "score": 1.4992510160161082e-06}, {"content": "With cloud software, our digital lives lack this permanence. Startups shut down left and right, products get split into multiple products or merged together, interfaces get redesigned and their redesigns get redesigned, all at the whims of the markets or feuding product managers. This is not a stable foundation to build anything lasting on top of.", "parent": "Generational Computing.txt", "score": 0.5790062722011284}, {"content": "My hope is that local-first AI and CRDTs enable us to create decentralized, local first software that will stand the tests of time. This is why I'm so bullish on local first applications, plain text, file systems, and unix - they have already stood the tests of time, and will likely continue to. They are deeply lindy in a way that mobile and cloud computing are not. ", "parent": "Generational Computing.txt", "score": 1.0114003472582125}, {"content": "Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.", "parent": "The AI-first operating system of the future.txt", "score": 1.0149874687194824}, {"content": "The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.", "parent": "The AI-first operating system of the future.txt", "score": 1.0955020189285278}, {"content": "My theory is that the current wave rational tools for thought (PKMs, note-taking apps, [[roam]], etc.) will be disrupted by AI-powered tools and search engines. Note taking has always felt futile to me, because the information age has made remembering/memorizing information useless - why memorize when you can look it up? 1", "parent": "On tools for thought: knowledge management vs creativity.txt", "score": 1.1195652484893799}, {"content": "Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?  ", "parent": "The AI-first operating system of the future.txt", "score": 1.136183738708496}, {"content": "This is not groundbreaking news, but it's groundbreaking for me. I started my software engineering career writing code with cloud applications in mind, and the idea that you can ship cool projects without running database migrations or doing extensive backtesting against your monolith *is* groundbreaking to me. In college I wanted my own blog and instead of getting a static site generator I built out a cloud application with NextJS, PostgreSQL and Heroku. I did learn a lot and it helped me land my first internship, but now it strikes me as an incredibly wrong minded approach. ", "parent": "NOW PAGE.txt", "score": 1.1364424174892882}, {"content": "The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people. ", "parent": "The AI-first operating system of the future.txt", "score": 1.1533021926879883}, {"content": "Why are so many tools for thought note taking apps? How could the space move beyond note taking apps?", "parent": "On tools for thought: knowledge management vs creativity.txt", "score": 1.186021327972412}], "In the physical world, you can pass things down through the generations - a leather jacket your father owned, a relic couch from your grandparents, your uncle's vintage 1960s Stratocaster, etc. etc. These objects carry their history with them; they are imbued with the spirit of their past owners and their experiences. ": [{"content": "In the physical world, you can pass things down through the generations - a leather jacket your father owned, a relic couch from your grandparents, your uncle's vintage 1960s Stratocaster, etc. etc. These objects carry their history with them; they are imbued with the spirit of their past owners and their experiences. ", "parent": "Generational Computing.txt", "score": 7.415828188209634e-07}, {"content": "My dream is to enable something I term \"generational computing.\" I want my kids and my grandkids to someday be able to interface with the artifacts of my digital life. I want them to be able to read my notes and ask an LLM about what I've learned over my life. I want them to be able to chat with a replica of me trained on my writings. I want them to be able to look through the music I made and the music I listened to, and see the connections between the two. I want them to be able to upload their own musical ideas or writings, and see the connections between what they've made and what I've made. ", "parent": "Generational Computing.txt", "score": 1.1878264937591476}, {"content": "I love how physical playing the guitar is. I love the tactile sensation of steel strings digging into my fingers. I love how it requires me to coordinate all of my senses together. I love being able to experiment with small, self contained ideas with looper pedal. I love how it lets you map musical ideas into your head into concrete muscle memory, and I love that this muscle memory is *portable* between different keys and different songs.  ", "parent": "NOW PAGE.txt", "score": 1.2590664208269997}, {"content": "Here's another difference between the way we experience music and the way our ancestors did: it used to be the case that music was almost always a social experience. Before technology, if you wanted to listen to music, someone had to play music. It was a special, ceremonious event. The modern experience of listening to music alone, all the time would have been incomprehensible to our ancestors. ", "parent": "Context and community makes music more enjoyable, and it's missing from modern streaming services.txt", "score": 1.2938475608825684}, {"content": "Music is about context. A song is never just a song, it contains all the circumstances that it was listened to under - whether you heard it live, the street you were walking down when you heard it, the mood you were in when you heard it, the people it made you think of, etc. ", "parent": "Context and community makes music more enjoyable, and it's missing from modern streaming services.txt", "score": 1.3359313011169434}, {"content": "I want digital technology to bridge divides between generations instead of widening them. I want it to foster remembrance instead of forgetting. I want it to reward thinking multiple generations into the future instead of until the end of the quarter.", "parent": "Generational Computing.txt", "score": 1.336975291901151}, {"content": "Here's an anecdote to illustrate my point: I picked up guitar at the start of quarantine. What inspired this? Was it a childhood dream of mine? Maybe I wanted to be like my favorite rock stars? Or was it just the boredom?", "parent": "Giant Robots.txt", "score": 1.3384209871292114}, {"content": "In the real world, it looks like the aesthetic frame of mind matters more. How much conviction someone has in their values affects their motivations for truths, with the result that we're functionally much smarter when working on things we care about, and probe unfathomable depths of stupidity when doing things we don't care about. ", "parent": "untitled-9-30-2021.txt", "score": 1.3517495393753052}, {"content": "In general, computers have enabled the Promethean task of stealing creative abilities previously reserved for deities. Musicians have their electrically amplified instruments, their DAWs, the vast oceans of samples available on the internet; artists have been blessed with digital canvases, 3D modeling, and the ubiquity of screens that renders a possible canvas in every man's pocket. ", "parent": "Prometheus.txt", "score": 1.377366542816162}, {"content": "I fell in love with playing the guitar because it rewards this lack of an attention span. You can copy a riff in minutes. You can create a new riff in minutes. Picking up a guitar puts me in an instant flow state, because I can just screw around and play with ideas instantly. It feels like a REPL for musical ideas.", "parent": "Fragments.txt", "score": 1.4081827402114868}], "With cloud software, our digital lives lack this permanence. Startups shut down left and right, products get split into multiple products or merged together, interfaces get redesigned and their redesigns get redesigned, all at the whims of the markets or feuding product managers. This is not a stable foundation to build anything lasting on top of.": [{"content": "With cloud software, our digital lives lack this permanence. Startups shut down left and right, products get split into multiple products or merged together, interfaces get redesigned and their redesigns get redesigned, all at the whims of the markets or feuding product managers. This is not a stable foundation to build anything lasting on top of.", "parent": "Generational Computing.txt", "score": 0.0}, {"content": "Cloud software lacks the longetivity to enable this dream. Modern day cloud applications take huge amounts of manpower and capital to maintain, which means they are subject to the whims of markets. Established products like Google Docs are unlikely to shut down, but they are still subject to market pressures, and you will inevitably log in one day to find the entire interface revamped, or worse, your favorite feature nerfed. Over a century or two, how confident are you that your data and applications will still be usable?", "parent": "Generational Computing.txt", "score": 0.5791598832300973}, {"content": "Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.", "parent": "The AI-first operating system of the future.txt", "score": 0.9720227718353271}, {"content": "This is not groundbreaking news, but it's groundbreaking for me. I started my software engineering career writing code with cloud applications in mind, and the idea that you can ship cool projects without running database migrations or doing extensive backtesting against your monolith *is* groundbreaking to me. In college I wanted my own blog and instead of getting a static site generator I built out a cloud application with NextJS, PostgreSQL and Heroku. I did learn a lot and it helped me land my first internship, but now it strikes me as an incredibly wrong minded approach. ", "parent": "NOW PAGE.txt", "score": 0.9976655542850175}, {"content": "This quote reflects a common strain of thinking in Silicon Valley, that our biological selves are hopeless broken, that we need to hack into our brains dopamine-systems and rewire them for maximal productivity, that everything natural is ripe for disruption. This thinking is especially prevalent with the recent rise of PKMs (personal knowledge management systems) like Roam and Notion. Here, an electronic notetaking app is the \"blessed machine\", and your natural memory is the \"flesh that will decay and fail you.\"", "parent": "Second Brains.txt", "score": 1.053339958190918}, {"content": "The usual way to think about technology, software, and startups is that they solve problems, and so it follows then that the best way to create a new technology is to find a problem people have and solve it. This is not a bad approach to take, and it's been successful for many people. Still, I think it's too narrow.", "parent": "Creating new kinds of people.txt", "score": 1.0794782638549805}, {"content": "My hope is that local-first AI and CRDTs enable us to create decentralized, local first software that will stand the tests of time. This is why I'm so bullish on local first applications, plain text, file systems, and unix - they have already stood the tests of time, and will likely continue to. They are deeply lindy in a way that mobile and cloud computing are not. ", "parent": "Generational Computing.txt", "score": 1.087200830829459}, {"content": "The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.", "parent": "The AI-first operating system of the future.txt", "score": 1.091282844543457}, {"content": "We shape technology, but technology shapes us as well. Our thought processes have come to resemble the disorganized, amorphous, nonlinear streams that we consume information with. When was the last time you really felt focused? [[exegesis]] is a tool designed for the brave new world we find ourselves living in. Instead of resisting the increasingly disorganized information ecosystem of the modern world, it embraces it. It is designed to help you make sense of chaos.", "parent": "Manifesto.txt", "score": 1.09212327003479}, {"content": "Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?  ", "parent": "The AI-first operating system of the future.txt", "score": 1.1276568174362183}], "My hope is that local-first AI and CRDTs enable us to create decentralized, local first software that will stand the tests of time. This is why I'm so bullish on local first applications, plain text, file systems, and unix - they have already stood the tests of time, and will likely continue to. They are deeply lindy in a way that mobile and cloud computing are not. ": [{"content": "My hope is that local-first AI and CRDTs enable us to create decentralized, local first software that will stand the tests of time. This is why I'm so bullish on local first applications, plain text, file systems, and unix - they have already stood the tests of time, and will likely continue to. They are deeply lindy in a way that mobile and cloud computing are not. ", "parent": "Generational Computing.txt", "score": 4.365141899991933e-06}, {"content": "Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?  ", "parent": "The AI-first operating system of the future.txt", "score": 0.5429858565330505}, {"content": "Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.", "parent": "The AI-first operating system of the future.txt", "score": 0.9552159905433655}, {"content": "This is not groundbreaking news, but it's groundbreaking for me. I started my software engineering career writing code with cloud applications in mind, and the idea that you can ship cool projects without running database migrations or doing extensive backtesting against your monolith *is* groundbreaking to me. In college I wanted my own blog and instead of getting a static site generator I built out a cloud application with NextJS, PostgreSQL and Heroku. I did learn a lot and it helped me land my first internship, but now it strikes me as an incredibly wrong minded approach. ", "parent": "NOW PAGE.txt", "score": 0.9748524824104718}, {"content": "The AI first operating system of the future already exists - it's called unix. I think the unix philosophy lends itself exceptionally well to the use of AI.", "parent": "The AI-first operating system of the future.txt", "score": 0.9861124753952026}, {"content": "Cloud software lacks the longetivity to enable this dream. Modern day cloud applications take huge amounts of manpower and capital to maintain, which means they are subject to the whims of markets. Established products like Google Docs are unlikely to shut down, but they are still subject to market pressures, and you will inevitably log in one day to find the entire interface revamped, or worse, your favorite feature nerfed. Over a century or two, how confident are you that your data and applications will still be usable?", "parent": "Generational Computing.txt", "score": 1.011976996265354}, {"content": "My dream is to enable something I term \"generational computing.\" I want my kids and my grandkids to someday be able to interface with the artifacts of my digital life. I want them to be able to read my notes and ask an LLM about what I've learned over my life. I want them to be able to chat with a replica of me trained on my writings. I want them to be able to look through the music I made and the music I listened to, and see the connections between the two. I want them to be able to upload their own musical ideas or writings, and see the connections between what they've made and what I've made. ", "parent": "Generational Computing.txt", "score": 1.0653631412293911}, {"content": "With cloud software, our digital lives lack this permanence. Startups shut down left and right, products get split into multiple products or merged together, interfaces get redesigned and their redesigns get redesigned, all at the whims of the markets or feuding product managers. This is not a stable foundation to build anything lasting on top of.", "parent": "Generational Computing.txt", "score": 1.0873921415945542}, {"content": "The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.", "parent": "The AI-first operating system of the future.txt", "score": 1.100609540939331}, {"content": "The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people. ", "parent": "The AI-first operating system of the future.txt", "score": 1.1120915412902832}]}