{"The AI first operating system of the future already exists - it's called unix. I think the unix philosophy lends itself exceptionally well to the use of AI.": [{"content": "The AI first operating system of the future already exists - it's called unix. I think the unix philosophy lends itself exceptionally well to the use of AI.", "parent": "The AI-first operating system of the future.txt", "score": 2.384185791015625e-07}, {"content": "My hope is that local-first AI and CRDTs enable us to create decentralized, local first software that will stand the tests of time. This is why I'm so bullish on local first applications, plain text, file systems, and unix - they have already stood the tests of time, and will likely continue to. They are deeply lindy in a way that mobile and cloud computing are not. ", "parent": "Generational Computing.txt", "score": 0.4930565357208252}, {"content": "Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?  ", "parent": "The AI-first operating system of the future.txt", "score": 0.4944271445274353}, {"content": "Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.", "parent": "The AI-first operating system of the future.txt", "score": 0.5498141050338745}, {"content": "Thinking about offline first software, and how offline, open source AI models combined with CRDTs might offer the opportunity to create offline-first software that is not only more private than cloud software, but also *better.*", "parent": "NOW-Jan-05-2024.txt", "score": 0.5776517391204834}, {"content": "As I looked further into these tools, I found that some had taken to calling them [Second Brains](https://fortelabs.co/blog/basboverview/). I thought this was incredibly exciting. The term sounds cyberpunk; building a \"second brain\" sounds way cooler than building a \"note taking app.\" At the same time, something about it unsettled me. ", "parent": "Second Brains.txt", "score": 0.5957246422767639}, {"content": "My theory is that the current wave rational tools for thought (PKMs, note-taking apps, [[roam]], etc.) will be disrupted by AI-powered tools and search engines. Note taking has always felt futile to me, because the information age has made remembering/memorizing information useless - why memorize when you can look it up? 1", "parent": "On tools for thought: knowledge management vs creativity.txt", "score": 0.5963149070739746}, {"content": "The future of rational tools for thought and PKMs probably look a lot less like [[roam]], and [more like projects that use AI to automatically link subjects for you](https://thesephist.com/posts/browser/). 2", "parent": "On tools for thought: knowledge management vs creativity.txt", "score": 0.5966262221336365}, {"content": "The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people. ", "parent": "The AI-first operating system of the future.txt", "score": 0.6098599433898926}, {"content": "Some thoughts on my Operating Systems course.", "parent": "untitled-10-11-2021.txt", "score": 0.61909019947052}], "": [{"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 0.6012972593307495}, {"content": "~", "parent": "The making of Nomad Hypertext.txt", "score": 0.6013116240501404}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 0.6013116240501404}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 0.6013116240501404}, {"content": "~", "parent": "Fragments.txt", "score": 0.6013129949569702}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 0.6013135506879113}, {"content": "~", "parent": "Second Brains.txt", "score": 0.6013180017471313}, {"content": "~", "parent": "Fragments.txt", "score": 0.6013447046279907}, {"content": "~", "parent": "untitled-1-4-2022.txt", "score": 0.6013447046279907}, {"content": "~", "parent": "The making of Nomad Hypertext.txt", "score": 0.6013447046279907}], "Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.": [{"content": "Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.", "parent": "The AI-first operating system of the future.txt", "score": 0.0}, {"content": "The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.", "parent": "The AI-first operating system of the future.txt", "score": 0.33797258138656616}, {"content": "Thinking about filesystems and how they have been unfairly maligned. If we put more effort into designing novel interfaces for filesystems, it would allow more people to exercise agency over their own data. Cloud software and mobile computing have killed an important part of computing literacy. ", "parent": "NOW-Jan-05-2024.txt", "score": 0.40554219484329224}, {"content": "Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?  ", "parent": "The AI-first operating system of the future.txt", "score": 0.460130512714386}, {"content": "My hope is that local-first AI and CRDTs enable us to create decentralized, local first software that will stand the tests of time. This is why I'm so bullish on local first applications, plain text, file systems, and unix - they have already stood the tests of time, and will likely continue to. They are deeply lindy in a way that mobile and cloud computing are not. ", "parent": "Generational Computing.txt", "score": 0.47760772705078125}, {"content": "With cloud software, our digital lives lack this permanence. Startups shut down left and right, products get split into multiple products or merged together, interfaces get redesigned and their redesigns get redesigned, all at the whims of the markets or feuding product managers. This is not a stable foundation to build anything lasting on top of.", "parent": "Generational Computing.txt", "score": 0.4859927296638489}, {"content": "I hate how flat computer interfaces are. I hate how disembodied sitting in front of a screen makes me feel. I hate straining my eyes to dig through a mountain of text, while my other senses lay unused and completely idle. I hate gigantic codebases with massive piles of dependencies and hour long build processes, where you must test every little idea you have against a mountain of assumptions to make sure it doesn't break anything.", "parent": "NOW PAGE.txt", "score": 0.5032911896705627}, {"content": "Cloud software lacks the longetivity to enable this dream. Modern day cloud applications take huge amounts of manpower and capital to maintain, which means they are subject to the whims of markets. Established products like Google Docs are unlikely to shut down, but they are still subject to market pressures, and you will inevitably log in one day to find the entire interface revamped, or worse, your favorite feature nerfed. Over a century or two, how confident are you that your data and applications will still be usable?", "parent": "Generational Computing.txt", "score": 0.5075403451919556}, {"content": "The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people. ", "parent": "The AI-first operating system of the future.txt", "score": 0.5093076229095459}, {"content": "This is not groundbreaking news, but it's groundbreaking for me. I started my software engineering career writing code with cloud applications in mind, and the idea that you can ship cool projects without running database migrations or doing extensive backtesting against your monolith *is* groundbreaking to me. In college I wanted my own blog and instead of getting a static site generator I built out a cloud application with NextJS, PostgreSQL and Heroku. I did learn a lot and it helped me land my first internship, but now it strikes me as an incredibly wrong minded approach. ", "parent": "NOW PAGE.txt", "score": 0.5290199518203735}], "The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people. ": [{"content": "The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people. ", "parent": "The AI-first operating system of the future.txt", "score": 0.0}, {"content": "Thinking about filesystems and how they have been unfairly maligned. If we put more effort into designing novel interfaces for filesystems, it would allow more people to exercise agency over their own data. Cloud software and mobile computing have killed an important part of computing literacy. ", "parent": "NOW-Jan-05-2024.txt", "score": 0.3833954930305481}, {"content": "The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.", "parent": "The AI-first operating system of the future.txt", "score": 0.4347934126853943}, {"content": "Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?  ", "parent": "The AI-first operating system of the future.txt", "score": 0.43582016229629517}, {"content": "Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.", "parent": "The AI-first operating system of the future.txt", "score": 0.5093076229095459}, {"content": "In my view, the whole movement of [[tools for thought]] (Roam, personal knowledge management systems, etc, etc.) is to make computers help us think better. That was the point from the very start, it was what Steve Jobs meant when he called the computer \"a bicycle for the mind.\" In the last decade, we've seen the very opposite - the use of the computer as an extractive tool, a weapon to siphon attention and harvest data. ", "parent": "Controlling what you see.txt", "score": 0.5146716833114624}, {"content": "My theory is that the current wave rational tools for thought (PKMs, note-taking apps, [[roam]], etc.) will be disrupted by AI-powered tools and search engines. Note taking has always felt futile to me, because the information age has made remembering/memorizing information useless - why memorize when you can look it up? 1", "parent": "On tools for thought: knowledge management vs creativity.txt", "score": 0.5190812349319458}, {"content": "Users should have complete control over what they see. I'm not saying algorithmic feeds don't have their place, but they should be something users opt in to. Andy [[Matuschak]] coined the idea of \"[programmable attention](https://notes.andymatuschak.org/zJrfPCbY7GcpV9asEc8NTVzXTAV4TvRFMuY6)\" as something [[tools for thought]] could enable. I will say that this already exists, only in the opposite, sinister sense - right now it's the platform programming your attention, not you. ", "parent": "Controlling what you see.txt", "score": 0.5220516324043274}, {"content": "I hate how flat computer interfaces are. I hate how disembodied sitting in front of a screen makes me feel. I hate straining my eyes to dig through a mountain of text, while my other senses lay unused and completely idle. I hate gigantic codebases with massive piles of dependencies and hour long build processes, where you must test every little idea you have against a mountain of assumptions to make sure it doesn't break anything.", "parent": "NOW PAGE.txt", "score": 0.531074583530426}, {"content": "I want to clarify that I'm not bullish at all on no-code. I think \"no-code\" and \"low-code\" are the wrong way to frame things. There is a place for tools like this, but it's more productive to think of them as \"visual developer tools.\"[[code]] [[ideas]] [[tools for thought]] ", "parent": "untitled-9-24-2021.txt", "score": 0.5513395071029663}], "The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.": [{"content": "The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.", "parent": "The AI-first operating system of the future.txt", "score": 5.960464477539063e-08}, {"content": "Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.", "parent": "The AI-first operating system of the future.txt", "score": 0.33797258138656616}, {"content": "Thinking about filesystems and how they have been unfairly maligned. If we put more effort into designing novel interfaces for filesystems, it would allow more people to exercise agency over their own data. Cloud software and mobile computing have killed an important part of computing literacy. ", "parent": "NOW-Jan-05-2024.txt", "score": 0.40338897705078125}, {"content": "Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?  ", "parent": "The AI-first operating system of the future.txt", "score": 0.43459540605545044}, {"content": "The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people. ", "parent": "The AI-first operating system of the future.txt", "score": 0.4347934126853943}, {"content": "In my view, the whole movement of [[tools for thought]] (Roam, personal knowledge management systems, etc, etc.) is to make computers help us think better. That was the point from the very start, it was what Steve Jobs meant when he called the computer \"a bicycle for the mind.\" In the last decade, we've seen the very opposite - the use of the computer as an extractive tool, a weapon to siphon attention and harvest data. ", "parent": "Controlling what you see.txt", "score": 0.47705358266830444}, {"content": "In general, computers have enabled the Promethean task of stealing creative abilities previously reserved for deities. Musicians have their electrically amplified instruments, their DAWs, the vast oceans of samples available on the internet; artists have been blessed with digital canvases, 3D modeling, and the ubiquity of screens that renders a possible canvas in every man's pocket. ", "parent": "Prometheus.txt", "score": 0.5124020576477051}, {"content": "The internet raised an entire generation to think nonlinearly, and it is only recently that tools for thinking have caught up. ", "parent": "Why I made exegesis.txt", "score": 0.5211395025253296}, {"content": "This is not groundbreaking news, but it's groundbreaking for me. I started my software engineering career writing code with cloud applications in mind, and the idea that you can ship cool projects without running database migrations or doing extensive backtesting against your monolith *is* groundbreaking to me. In college I wanted my own blog and instead of getting a static site generator I built out a cloud application with NextJS, PostgreSQL and Heroku. I did learn a lot and it helped me land my first internship, but now it strikes me as an incredibly wrong minded approach. ", "parent": "NOW PAGE.txt", "score": 0.5407687425613403}, {"content": "With cloud software, our digital lives lack this permanence. Startups shut down left and right, products get split into multiple products or merged together, interfaces get redesigned and their redesigns get redesigned, all at the whims of the markets or feuding product managers. This is not a stable foundation to build anything lasting on top of.", "parent": "Generational Computing.txt", "score": 0.5456149578094482}], "Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?  ": [{"content": "Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?  ", "parent": "The AI-first operating system of the future.txt", "score": 1.0132789611816406e-06}, {"content": "My hope is that local-first AI and CRDTs enable us to create decentralized, local first software that will stand the tests of time. This is why I'm so bullish on local first applications, plain text, file systems, and unix - they have already stood the tests of time, and will likely continue to. They are deeply lindy in a way that mobile and cloud computing are not. ", "parent": "Generational Computing.txt", "score": 0.27147573232650757}, {"content": "Thinking about filesystems and how they have been unfairly maligned. If we put more effort into designing novel interfaces for filesystems, it would allow more people to exercise agency over their own data. Cloud software and mobile computing have killed an important part of computing literacy. ", "parent": "NOW-Jan-05-2024.txt", "score": 0.38424766063690186}, {"content": "Thinking about offline first software, and how offline, open source AI models combined with CRDTs might offer the opportunity to create offline-first software that is not only more private than cloud software, but also *better.*", "parent": "NOW-Jan-05-2024.txt", "score": 0.40356045961380005}, {"content": "The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.", "parent": "The AI-first operating system of the future.txt", "score": 0.4345528483390808}, {"content": "The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people. ", "parent": "The AI-first operating system of the future.txt", "score": 0.4358264207839966}, {"content": "Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.", "parent": "The AI-first operating system of the future.txt", "score": 0.4601079225540161}, {"content": "This is not groundbreaking news, but it's groundbreaking for me. I started my software engineering career writing code with cloud applications in mind, and the idea that you can ship cool projects without running database migrations or doing extensive backtesting against your monolith *is* groundbreaking to me. In college I wanted my own blog and instead of getting a static site generator I built out a cloud application with NextJS, PostgreSQL and Heroku. I did learn a lot and it helped me land my first internship, but now it strikes me as an incredibly wrong minded approach. ", "parent": "NOW PAGE.txt", "score": 0.47293537855148315}, {"content": "Users should have complete control over what they see. I'm not saying algorithmic feeds don't have their place, but they should be something users opt in to. Andy [[Matuschak]] coined the idea of \"[programmable attention](https://notes.andymatuschak.org/zJrfPCbY7GcpV9asEc8NTVzXTAV4TvRFMuY6)\" as something [[tools for thought]] could enable. I will say that this already exists, only in the opposite, sinister sense - right now it's the platform programming your attention, not you. ", "parent": "Controlling what you see.txt", "score": 0.48259592056274414}, {"content": "My dream is to enable something I term \"generational computing.\" I want my kids and my grandkids to someday be able to interface with the artifacts of my digital life. I want them to be able to read my notes and ask an LLM about what I've learned over my life. I want them to be able to chat with a replica of me trained on my writings. I want them to be able to look through the music I made and the music I listened to, and see the connections between the two. I want them to be able to upload their own musical ideas or writings, and see the connections between what they've made and what I've made. ", "parent": "Generational Computing.txt", "score": 0.49328070878982544}]}