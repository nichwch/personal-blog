{"The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people. ":[{"content":"The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people.","parent":"posts/The AI-first operating system of the future.txt","score":0.9999999999999999},{"content":"The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.","parent":"posts/The AI-first operating system of the future.txt","score":0.8905730047152742},{"content":"Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?","parent":"posts/The AI-first operating system of the future.txt","score":0.881327270767709},{"content":"Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.","parent":"posts/The AI-first operating system of the future.txt","score":0.871843723430467},{"content":"The usual way to think about technology, software, and startups is that they solve problems, and so it follows then that the best way to create a new technology is to find a problem people have and solve it. This is not a bad approach to take, and it's been successful for many people. Still, I think it's too narrow.","parent":"posts/Creating new kinds of people.txt","score":0.8640268210428883},{"content":"The AI first operating system of the future already exists - it's called unix. I think the unix philosophy lends itself exceptionally well to the use of AI.","parent":"posts/The AI-first operating system of the future.txt","score":0.8566618300905771},{"content":"In my view, the whole movement of [[tools for thought]] (Roam, personal knowledge management systems, etc, etc.) is to make computers help us think better. That was the point from the very start, it was what Steve Jobs meant when he called the computer \"a bicycle for the mind.\" In the last decade, we've seen the very opposite - the use of the computer as an extractive tool, a weapon to siphon attention and harvest data.","parent":"posts/Controlling what you see.txt","score":0.8557296421796196},{"content":"The old maxim that \"information is power\" no longer holds. Exabytes of information are generated each day, most of it completely worthless; by the simple dictates of supply and demand it cannot be true that information is intrinsically valuable. In a time when information was trapped within the leather bindings of encyclopedia volumes or the manilla enclosures of government files, its scarcity commanded power and gave it value. But information, liberated from its paper prison, now runs free and abundant everywhere.","parent":"posts/Manifesto.txt","score":0.8527512813670416},{"content":"My hope is that local-first AI and CRDTs enable us to create decentralized, local first software that will stand the tests of time. This is why I'm so bullish on local first applications, plain text, file systems, and unix - they have already stood the tests of time, and will likely continue to. They are deeply lindy in a way that mobile and cloud computing are not.","parent":"posts/Generational Computing.txt","score":0.8500666075780854},{"content":"If you think about that a bit, it's a very quaint idea. Can you imagine a world where technology has developed to the point where we have giant robots, but technology is not somehow advanced enough to autopilot them? The idea seems strange to us, because in many respects, we live in a world diametrically opposed to the one portrayed in mecha science fiction. In their world, human beings control towering 50-foot humanoid war mechs. In ours, we are ruled by 5 inch screens in our pockets.","parent":"posts/Giant Robots.txt","score":0.8491782673823681},{"content":"I don't think it's possible to fix our information ecosystem. In fact, I don't even know if it'd be desirable to fix it - as perverse as it is, there is also a chaotically beautiful side to the internet.","parent":"posts/Giant Robots.txt","score":0.8466057132222898},{"content":"The problem with the view that technology is meant to solve problems is that technology always ends up doing so much more than that. Take any technology and its original intended purpose (fire, automobiles, airplanes, etc.) and you will find it has created a cascade of second order effects far beyond what it was originally intended to do. Sometimes these impacts are good, sometimes they're bad, sometimes they're just strange.","parent":"posts/Creating new kinds of people.txt","score":0.8452901994730729},{"content":"With cloud software, our digital lives lack this permanence. Startups shut down left and right, products get split into multiple products or merged together, interfaces get redesigned and their redesigns get redesigned, all at the whims of the markets or feuding product managers. This is not a stable foundation to build anything lasting on top of.","parent":"posts/Generational Computing.txt","score":0.8443192308249594},{"content":"Some thoughts on my Operating Systems course.","parent":"posts/untitled-10-11-2021.txt","score":0.8435341585293604},{"content":"In general, computers have enabled the Promethean task of stealing creative abilities previously reserved for deities. Musicians have their electrically amplified instruments, their DAWs, the vast oceans of samples available on the internet; artists have been blessed with digital canvases, 3D modeling, and the ubiquity of screens that renders a possible canvas in every man's pocket.","parent":"posts/Prometheus.txt","score":0.8432139924090147},{"content":"Ultimately it is these drives that make an ontology desirable, not just its simplicity.","parent":"posts/untitled-1-4-2022.txt","score":0.8413088791278853},{"content":"My dream is to enable something I term \"generational computing.\" I want my kids and my grandkids to someday be able to interface with the artifacts of my digital life. I want them to be able to read my notes and ask an LLM about what I've learned over my life. I want them to be able to chat with a replica of me trained on my writings. I want them to be able to look through the music I made and the music I listened to, and see the connections between the two. I want them to be able to upload their own musical ideas or writings, and see the connections between what they've made and what I've made.","parent":"posts/Generational Computing.txt","score":0.8403109372010645},{"content":"I want digital technology to bridge divides between generations instead of widening them. I want it to foster remembrance instead of forgetting. I want it to reward thinking multiple generations into the future instead of until the end of the quarter.","parent":"posts/Generational Computing.txt","score":0.8401433329120672},{"content":"My theory is that the current wave rational tools for thought (PKMs, note-taking apps, [[roam]], etc.) will be disrupted by AI-powered tools and search engines. Note taking has always felt futile to me, because the information age has made remembering/memorizing information useless - why memorize when you can look it up? 1","parent":"posts/On tools for thought: knowledge management vs creativity.txt","score":0.838838404972823},{"content":"Here's a radical statement: All applications should be tools for thought. Facebook should be a tool for keeping up with friends, Instagram should be a tool for browsing and sharing photographs. [[tools for thought]] [[Manifesto]]","parent":"posts/Controlling what you see.txt","score":0.8387950778817258}],"The AI first operating system of the future already exists - it's called unix. I think the unix philosophy lends itself exceptionally well to the use of AI.":[{"content":"The AI first operating system of the future already exists - it's called unix. I think the unix philosophy lends itself exceptionally well to the use of AI.","parent":"posts/The AI-first operating system of the future.txt","score":1.0000000000000002},{"content":"My hope is that local-first AI and CRDTs enable us to create decentralized, local first software that will stand the tests of time. This is why I'm so bullish on local first applications, plain text, file systems, and unix - they have already stood the tests of time, and will likely continue to. They are deeply lindy in a way that mobile and cloud computing are not.","parent":"posts/Generational Computing.txt","score":0.8925519120852404},{"content":"Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?","parent":"posts/The AI-first operating system of the future.txt","score":0.8906493001103041},{"content":"The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people.","parent":"posts/The AI-first operating system of the future.txt","score":0.8566618300905771},{"content":"In my view, the whole movement of [[tools for thought]] (Roam, personal knowledge management systems, etc, etc.) is to make computers help us think better. That was the point from the very start, it was what Steve Jobs meant when he called the computer \"a bicycle for the mind.\" In the last decade, we've seen the very opposite - the use of the computer as an extractive tool, a weapon to siphon attention and harvest data.","parent":"posts/Controlling what you see.txt","score":0.8432067057289894},{"content":"Some thoughts on my Operating Systems course.","parent":"posts/untitled-10-11-2021.txt","score":0.8409299980437521},{"content":"Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.","parent":"posts/The AI-first operating system of the future.txt","score":0.8379014650430155},{"content":"My dream is to enable something I term \"generational computing.\" I want my kids and my grandkids to someday be able to interface with the artifacts of my digital life. I want them to be able to read my notes and ask an LLM about what I've learned over my life. I want them to be able to chat with a replica of me trained on my writings. I want them to be able to look through the music I made and the music I listened to, and see the connections between the two. I want them to be able to upload their own musical ideas or writings, and see the connections between what they've made and what I've made.","parent":"posts/Generational Computing.txt","score":0.8354350907312479},{"content":"My theory is that the current wave rational tools for thought (PKMs, note-taking apps, [[roam]], etc.) will be disrupted by AI-powered tools and search engines. Note taking has always felt futile to me, because the information age has made remembering/memorizing information useless - why memorize when you can look it up? 1","parent":"posts/On tools for thought: knowledge management vs creativity.txt","score":0.8342206099104651},{"content":"The future of rational tools for thought and PKMs probably look a lot less like [[roam]], and [more like projects that use AI to automatically link subjects for you](https://thesephist.com/posts/browser/). 2","parent":"posts/On tools for thought: knowledge management vs creativity.txt","score":0.8339368258939206},{"content":"The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.","parent":"posts/The AI-first operating system of the future.txt","score":0.8326488992650931},{"content":"If you think about that a bit, it's a very quaint idea. Can you imagine a world where technology has developed to the point where we have giant robots, but technology is not somehow advanced enough to autopilot them? The idea seems strange to us, because in many respects, we live in a world diametrically opposed to the one portrayed in mecha science fiction. In their world, human beings control towering 50-foot humanoid war mechs. In ours, we are ruled by 5 inch screens in our pockets.","parent":"posts/Giant Robots.txt","score":0.8320871963011655},{"content":"This quote reflects a common strain of thinking in Silicon Valley, that our biological selves are hopeless broken, that we need to hack into our brains dopamine-systems and rewire them for maximal productivity, that everything natural is ripe for disruption. This thinking is especially prevalent with the recent rise of PKMs (personal knowledge management systems) like Roam and Notion. Here, an electronic notetaking app is the \"blessed machine\", and your natural memory is the \"flesh that will decay and fail you.\"","parent":"posts/Second Brains.txt","score":0.8305612768285016},{"content":"I think Computer Science is also subject to this double hermeneutic. The best example of this is computer security. Best practices are researched by computer scientists, and strategies against them are developed by security researchers and malicious actors. Conclusions are reached about how to best design computer systems, but these conclusions never last very long, because hostile actors have incentives to disrupt these conclusions. In the same way that social theories can be invalidated by people's awareness of those social theories, conclusions on computer system can as well.","parent":"posts/untitled-10-11-2021.txt","score":0.8303122183588045},{"content":"Then again, the subject of Computer Science's empirical inquiries isn't a natural thing - it's manmade. Everything about a computer is manmade, from the processor to the operating system to the programs that run on it, and as such are subject to human conventions. I'm only half joking when I say this: Isn't computer science actually a social science?","parent":"posts/untitled-10-11-2021.txt","score":0.8299166451614236},{"content":"The usual way to think about technology, software, and startups is that they solve problems, and so it follows then that the best way to create a new technology is to find a problem people have and solve it. This is not a bad approach to take, and it's been successful for many people. Still, I think it's too narrow.","parent":"posts/Creating new kinds of people.txt","score":0.8283218178868827},{"content":"As I looked further into these tools, I found that some had taken to calling them [Second Brains](https://fortelabs.co/blog/basboverview/). I thought this was incredibly exciting. The term sounds cyberpunk; building a \"second brain\" sounds way cooler than building a \"note taking app.\" At the same time, something about it unsettled me.","parent":"posts/Second Brains.txt","score":0.8282518973182091},{"content":"I'm convinced that algorithmic feeds are poisonous. Algorithmic feeds in apps are like cocaine in old medicines or asbestos in buildings, and someday they'll be seen to be just as barbaric.","parent":"posts/Controlling what you see.txt","score":0.8281637149917278},{"content":"Turns out, Computer Science is actually a science","parent":"posts/untitled-10-11-2021.txt","score":0.8279629483419176},{"content":"Maybe Computer Science is a social science","parent":"posts/untitled-10-11-2021.txt","score":0.8265421609105814}],"Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.":[{"content":"Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.","parent":"posts/The AI-first operating system of the future.txt","score":1},{"content":"The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.","parent":"posts/The AI-first operating system of the future.txt","score":0.9064695804529235},{"content":"The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people.","parent":"posts/The AI-first operating system of the future.txt","score":0.871843723430467},{"content":"My dream is to enable something I term \"generational computing.\" I want my kids and my grandkids to someday be able to interface with the artifacts of my digital life. I want them to be able to read my notes and ask an LLM about what I've learned over my life. I want them to be able to chat with a replica of me trained on my writings. I want them to be able to look through the music I made and the music I listened to, and see the connections between the two. I want them to be able to upload their own musical ideas or writings, and see the connections between what they've made and what I've made.","parent":"posts/Generational Computing.txt","score":0.8481490235542347},{"content":"Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?","parent":"posts/The AI-first operating system of the future.txt","score":0.8481134857602634},{"content":"My hope is that local-first AI and CRDTs enable us to create decentralized, local first software that will stand the tests of time. This is why I'm so bullish on local first applications, plain text, file systems, and unix - they have already stood the tests of time, and will likely continue to. They are deeply lindy in a way that mobile and cloud computing are not.","parent":"posts/Generational Computing.txt","score":0.8468582046451048},{"content":"In my teen years, I found programming and videogame development, and that became my creative outlet for a while. I found a way to scan my drawings into digital files, and for a while that was my way of combining art and programming.","parent":"posts/Fragments.txt","score":0.8388228614172037},{"content":"The AI first operating system of the future already exists - it's called unix. I think the unix philosophy lends itself exceptionally well to the use of AI.","parent":"posts/The AI-first operating system of the future.txt","score":0.8379014650430155},{"content":"This is not the case for programming. Making better tools for programming (new languages, new frameworks, new libraries) itself requires programming, and while making programming tools is different in important respects from writing regular programs, it is still programming. Making guitars is not playing guitars, making paints is not painting, but making better programming tools is programming. Programming, then, is an, intrinsically recursive creative medium.","parent":"posts/Prometheus.txt","score":0.8378928437481663},{"content":"In my view, the whole movement of [[tools for thought]] (Roam, personal knowledge management systems, etc, etc.) is to make computers help us think better. That was the point from the very start, it was what Steve Jobs meant when he called the computer \"a bicycle for the mind.\" In the last decade, we've seen the very opposite - the use of the computer as an extractive tool, a weapon to siphon attention and harvest data.","parent":"posts/Controlling what you see.txt","score":0.8378127259082864},{"content":"Here's a radical statement: All applications should be tools for thought. Facebook should be a tool for keeping up with friends, Instagram should be a tool for browsing and sharing photographs. [[tools for thought]] [[Manifesto]]","parent":"posts/Controlling what you see.txt","score":0.8360242903147098},{"content":"There is at least one creative medium for which this is not true, however, and that is programming. Here is a unique and strange property of programming: Making tools to program better itself involves programming. This is not true for music or art - the process of making a guitar is not the art of playing the guitar, the process of making paints is not the art of painting, and while luthiers and paint-makers are certainly artists in their own right (and are often good at playing the guitar and painting, respectively), they practice an art that is distinct from the art that they enable.","parent":"posts/Prometheus.txt","score":0.8352173023014009},{"content":"I've been working on notetaking apps for years now. I starting working on the first one on the bus back from my internship. I had an idea for a simple interaction - users should be able to highlight a piece of text, then add tags to that text. I distinctly remember thinking to myself, \"That should be a piece of cake! I should be able to finish it during the 45 minute bus  ride.\"\n\n\nIt ended up taking the rest of the summer. I was 19, naive, and had no idea what a nightmare the contenteditable HTML standard was.","parent":"posts/Plaintext is your best friend.txt","score":0.8348295622170981},{"content":"I want to learn more code. Working on [[exegesis]] over the course of a year, I saw my coding ability improve substantially. Towards the last 2 months, while rewriting a part of the codebase, I found myself dumbfounded by some of the decisions and patterns I had used a year earlier. The code I wrote towards the end was noticeably cleaner and more maintainable, mostly because I had familiarized myself with [[React]] hooks. Learning NextJS and GraphQL was also very rewarding, and both technologies were used extensively in the final version of exegesis. Looking forwards, I am thinking about learning Go, Clojure and maybe Rust. Go is the most practical one of all these for my purposes, and could open up a lot of job offers. Clojure is the most interesting from a theoretical standpoint, since I've never used a lisp or functional language. Rust is interesting because I hate systems/low-level programming, but I suspect that might only be because I hate C, and maybe Rust's more modern features will sell me on it.","parent":"posts/Reflections for the New Year.txt","score":0.8338769624652861},{"content":"Some thoughts on my Operating Systems course.","parent":"posts/untitled-10-11-2021.txt","score":0.8334998489067328},{"content":"The internet raised an entire generation to think nonlinearly, and it is only recently that tools for thinking have caught up.","parent":"posts/Why I made exegesis.txt","score":0.8330156196213835},{"content":"I want digital technology to bridge divides between generations instead of widening them. I want it to foster remembrance instead of forgetting. I want it to reward thinking multiple generations into the future instead of until the end of the quarter.","parent":"posts/Generational Computing.txt","score":0.8327703683635694},{"content":"We shape technology, but technology shapes us as well. Our thought processes have come to resemble the disorganized, amorphous, nonlinear streams that we consume information with. When was the last time you really felt focused? [[exegesis]] is a tool designed for the brave new world we find ourselves living in. Instead of resisting the increasingly disorganized information ecosystem of the modern world, it embraces it. It is designed to help you make sense of chaos.","parent":"posts/Manifesto.txt","score":0.8319454008071157},{"content":"The usual way to think about technology, software, and startups is that they solve problems, and so it follows then that the best way to create a new technology is to find a problem people have and solve it. This is not a bad approach to take, and it's been successful for many people. Still, I think it's too narrow.","parent":"posts/Creating new kinds of people.txt","score":0.8313749288172136},{"content":"In general, computers have enabled the Promethean task of stealing creative abilities previously reserved for deities. Musicians have their electrically amplified instruments, their DAWs, the vast oceans of samples available on the internet; artists have been blessed with digital canvases, 3D modeling, and the ubiquity of screens that renders a possible canvas in every man's pocket.","parent":"posts/Prometheus.txt","score":0.8297125845890463}],"":[{"content":"Building tools","parent":"posts/untitled-9-20-2021.txt","score":0.8593290080388},{"content":"The club does 2 things.","parent":"posts/untitled-9-24-2021.txt","score":0.8589669169415844},{"content":"Induction","parent":"posts/untitled-9-22-2021.txt","score":0.8577220980911441},{"content":"Code:","parent":"posts/Goals for Spring Quarter.txt","score":0.856649564390397},{"content":"Executing","parent":"posts/Goals for Spring Quarter.txt","score":0.8556654491388678},{"content":"Priority 1: Code-related creative work (continue work on exegesis, other personal projects, learn more code, write more)","parent":"posts/Goals for Spring Quarter.txt","score":0.8537043599402795},{"content":"we live in a society","parent":"posts/untitled-9-30-2021.txt","score":0.8499151373626692},{"content":"Priority 2: Activities that are a break from code-related creative work (piano, guitar, fiction/nonfiction reading, drawing, fitness)","parent":"posts/Goals for Spring Quarter.txt","score":0.8497861585687644},{"content":"Learn a grappling art (because of quarantine, this will just be maintaining general fitness levels for now)","parent":"posts/Goals for Spring Quarter.txt","score":0.8496945903933114},{"content":"For drawing, I'd like to practice drawing reference images in my own style 3 times a week, with a focus on drawing more three dimensionally, drawing people/poses, and using color.","parent":"posts/Goals for Spring Quarter.txt","score":0.8478182318510581},{"content":"Afternoon","parent":"posts/untitled-9-21-2021.txt","score":0.8472546071060495},{"content":"Hobbies:","parent":"posts/Goals for Spring Quarter.txt","score":0.8467379006001533},{"content":"Focus[[focus]] [[focus-machine]] [[ideas]]","parent":"posts/untitled-9-24-2021.txt","score":0.8456538970968254},{"content":"Higher-order creativity","parent":"posts/Prometheus.txt","score":0.8455300536527719},{"content":"I'm taking a gap quarter this Spring to work on some personal projects. It is always better to have a plan than to have no plan, even if things don't work out your way, so here are some tentative goals for my gap quarter.","parent":"posts/Goals for Spring Quarter.txt","score":0.8451682294721505},{"content":"Writing cascades","parent":"posts/untitled-10-1-2021.txt","score":0.8444322593169847},{"content":"Plaintext is your best friend.","parent":"posts/Plaintext is your best friend.txt","score":0.8437967333727141},{"content":"Here's a radical statement: All applications should be tools for thought. Facebook should be a tool for keeping up with friends, Instagram should be a tool for browsing and sharing photographs. [[tools for thought]] [[Manifesto]]","parent":"posts/Controlling what you see.txt","score":0.8436725970663741},{"content":"Sitting in the MU again, this time with a view of the quad. Listening to \"The Time of the Season\" by the Zombies.","parent":"posts/untitled-9-24-2021.txt","score":0.8434310607466774},{"content":"Visual developer tools","parent":"posts/untitled-9-24-2021.txt","score":0.8428686770659811}],"The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.":[{"content":"The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.","parent":"posts/The AI-first operating system of the future.txt","score":0.9999999999999999},{"content":"Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.","parent":"posts/The AI-first operating system of the future.txt","score":0.9064695804529235},{"content":"The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people.","parent":"posts/The AI-first operating system of the future.txt","score":0.8905730047152742},{"content":"Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?","parent":"posts/The AI-first operating system of the future.txt","score":0.877307140447799},{"content":"In general, computers have enabled the Promethean task of stealing creative abilities previously reserved for deities. Musicians have their electrically amplified instruments, their DAWs, the vast oceans of samples available on the internet; artists have been blessed with digital canvases, 3D modeling, and the ubiquity of screens that renders a possible canvas in every man's pocket.","parent":"posts/Prometheus.txt","score":0.8526152725106991},{"content":"My hope is that local-first AI and CRDTs enable us to create decentralized, local first software that will stand the tests of time. This is why I'm so bullish on local first applications, plain text, file systems, and unix - they have already stood the tests of time, and will likely continue to. They are deeply lindy in a way that mobile and cloud computing are not.","parent":"posts/Generational Computing.txt","score":0.848765726086299},{"content":"My dream is to enable something I term \"generational computing.\" I want my kids and my grandkids to someday be able to interface with the artifacts of my digital life. I want them to be able to read my notes and ask an LLM about what I've learned over my life. I want them to be able to chat with a replica of me trained on my writings. I want them to be able to look through the music I made and the music I listened to, and see the connections between the two. I want them to be able to upload their own musical ideas or writings, and see the connections between what they've made and what I've made.","parent":"posts/Generational Computing.txt","score":0.8470629559203736},{"content":"In my view, the whole movement of [[tools for thought]] (Roam, personal knowledge management systems, etc, etc.) is to make computers help us think better. That was the point from the very start, it was what Steve Jobs meant when he called the computer \"a bicycle for the mind.\" In the last decade, we've seen the very opposite - the use of the computer as an extractive tool, a weapon to siphon attention and harvest data.","parent":"posts/Controlling what you see.txt","score":0.8469822984518974},{"content":"The internet raised an entire generation to think nonlinearly, and it is only recently that tools for thinking have caught up.","parent":"posts/Why I made exegesis.txt","score":0.8458138935104612},{"content":"I don't think it's possible to fix our information ecosystem. In fact, I don't even know if it'd be desirable to fix it - as perverse as it is, there is also a chaotically beautiful side to the internet.","parent":"posts/Giant Robots.txt","score":0.840924021410591},{"content":"None of it worked. Why? It's not that these tools don't work in general - plenty of people swear by them. The problem was either with the tools, or with me. Technology exists for the utility of the user, not the other way around, so I rejected the latter answer.","parent":"posts/Why I made exegesis.txt","score":0.8408890948437698},{"content":"Then again, the subject of Computer Science's empirical inquiries isn't a natural thing - it's manmade. Everything about a computer is manmade, from the processor to the operating system to the programs that run on it, and as such are subject to human conventions. I'm only half joking when I say this: Isn't computer science actually a social science?","parent":"posts/untitled-10-11-2021.txt","score":0.8360837576272055},{"content":"It is current year. Armed with fleets of server racks and neural nets trained upon eons of GPU compute time, social media conglomerates have razed and pillaged your attention span with a steady drip feed of content algorithmically optimized to deliver maximal doses of dopamine. Half the time you open your phone, you forget what you opened it for in the first place (checking the weather? for an important email?) and somehow end up on one of the many like farms installed on your phone, your thumbs scrolling like runners on a treadmill.","parent":"posts/Manifesto.txt","score":0.8336664243563638},{"content":"The AI first operating system of the future already exists - it's called unix. I think the unix philosophy lends itself exceptionally well to the use of AI.","parent":"posts/The AI-first operating system of the future.txt","score":0.8326488992650931},{"content":"The old maxim that \"information is power\" no longer holds. Exabytes of information are generated each day, most of it completely worthless; by the simple dictates of supply and demand it cannot be true that information is intrinsically valuable. In a time when information was trapped within the leather bindings of encyclopedia volumes or the manilla enclosures of government files, its scarcity commanded power and gave it value. But information, liberated from its paper prison, now runs free and abundant everywhere.","parent":"posts/Manifesto.txt","score":0.8324243570913288},{"content":"Did the internet ruin my brain? No, I don't think either style of thinking is superior. Both have their place, and besides it's not like I'm incapable of linear thinking (I hope this essay is flowing in a somewhat logical manner!","parent":"posts/Why I made exegesis.txt","score":0.8314619683821083},{"content":"I want digital technology to bridge divides between generations instead of widening them. I want it to foster remembrance instead of forgetting. I want it to reward thinking multiple generations into the future instead of until the end of the quarter.","parent":"posts/Generational Computing.txt","score":0.8311533885916298},{"content":"Some thoughts on my Operating Systems course.","parent":"posts/untitled-10-11-2021.txt","score":0.8305686095650727},{"content":"The usual way to think about technology, software, and startups is that they solve problems, and so it follows then that the best way to create a new technology is to find a problem people have and solve it. This is not a bad approach to take, and it's been successful for many people. Still, I think it's too narrow.","parent":"posts/Creating new kinds of people.txt","score":0.8293914406533277},{"content":"If the internet is a hurricane of information, let us build steely exoskeletons to weather the storm.","parent":"posts/Giant Robots.txt","score":0.829151047161334}],"Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?  ":[{"content":"Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?","parent":"posts/The AI-first operating system of the future.txt","score":0.9999999999999999},{"content":"My hope is that local-first AI and CRDTs enable us to create decentralized, local first software that will stand the tests of time. This is why I'm so bullish on local first applications, plain text, file systems, and unix - they have already stood the tests of time, and will likely continue to. They are deeply lindy in a way that mobile and cloud computing are not.","parent":"posts/Generational Computing.txt","score":0.9193433908129105},{"content":"The AI first operating system of the future already exists - it's called unix. I think the unix philosophy lends itself exceptionally well to the use of AI.","parent":"posts/The AI-first operating system of the future.txt","score":0.8906493001103041},{"content":"The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people.","parent":"posts/The AI-first operating system of the future.txt","score":0.881327270767709},{"content":"The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.","parent":"posts/The AI-first operating system of the future.txt","score":0.877307140447799},{"content":"My dream is to enable something I term \"generational computing.\" I want my kids and my grandkids to someday be able to interface with the artifacts of my digital life. I want them to be able to read my notes and ask an LLM about what I've learned over my life. I want them to be able to chat with a replica of me trained on my writings. I want them to be able to look through the music I made and the music I listened to, and see the connections between the two. I want them to be able to upload their own musical ideas or writings, and see the connections between what they've made and what I've made.","parent":"posts/Generational Computing.txt","score":0.8508858071374115},{"content":"Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.","parent":"posts/The AI-first operating system of the future.txt","score":0.8481134857602634},{"content":"If you think about that a bit, it's a very quaint idea. Can you imagine a world where technology has developed to the point where we have giant robots, but technology is not somehow advanced enough to autopilot them? The idea seems strange to us, because in many respects, we live in a world diametrically opposed to the one portrayed in mecha science fiction. In their world, human beings control towering 50-foot humanoid war mechs. In ours, we are ruled by 5 inch screens in our pockets.","parent":"posts/Giant Robots.txt","score":0.8462901668076662},{"content":"Users should have complete control over what they see. I'm not saying algorithmic feeds don't have their place, but they should be something users opt in to. Andy [[Matuschak]] coined the idea of \"[programmable attention](https://notes.andymatuschak.org/zJrfPCbY7GcpV9asEc8NTVzXTAV4TvRFMuY6)\" as something [[tools for thought]] could enable. I will say that this already exists, only in the opposite, sinister sense - right now it's the platform programming your attention, not you.","parent":"posts/Controlling what you see.txt","score":0.844163295931802},{"content":"My theory is that the current wave rational tools for thought (PKMs, note-taking apps, [[roam]], etc.) will be disrupted by AI-powered tools and search engines. Note taking has always felt futile to me, because the information age has made remembering/memorizing information useless - why memorize when you can look it up? 1","parent":"posts/On tools for thought: knowledge management vs creativity.txt","score":0.8431069851131313},{"content":"In my view, the whole movement of [[tools for thought]] (Roam, personal knowledge management systems, etc, etc.) is to make computers help us think better. That was the point from the very start, it was what Steve Jobs meant when he called the computer \"a bicycle for the mind.\" In the last decade, we've seen the very opposite - the use of the computer as an extractive tool, a weapon to siphon attention and harvest data.","parent":"posts/Controlling what you see.txt","score":0.8428921404662846},{"content":"The future of rational tools for thought and PKMs probably look a lot less like [[roam]], and [more like projects that use AI to automatically link subjects for you](https://thesephist.com/posts/browser/). 2","parent":"posts/On tools for thought: knowledge management vs creativity.txt","score":0.8421834079923223},{"content":"I don't think it's possible to fix our information ecosystem. In fact, I don't even know if it'd be desirable to fix it - as perverse as it is, there is also a chaotically beautiful side to the internet.","parent":"posts/Giant Robots.txt","score":0.8397983187598865},{"content":"But the user has chosen to open Facebook, and chosen to sign up for the service. Isn't this a philosophical question about choice? Isn't free will real?","parent":"posts/Giant Robots.txt","score":0.8358564457812431},{"content":"The usual way to think about technology, software, and startups is that they solve problems, and so it follows then that the best way to create a new technology is to find a problem people have and solve it. This is not a bad approach to take, and it's been successful for many people. Still, I think it's too narrow.","parent":"posts/Creating new kinds of people.txt","score":0.8353590930161973},{"content":"Here's a radical statement: All applications should be tools for thought. Facebook should be a tool for keeping up with friends, Instagram should be a tool for browsing and sharing photographs. [[tools for thought]] [[Manifesto]]","parent":"posts/Controlling what you see.txt","score":0.835029708555071},{"content":"I'm convinced that algorithmic feeds are poisonous. Algorithmic feeds in apps are like cocaine in old medicines or asbestos in buildings, and someday they'll be seen to be just as barbaric.","parent":"posts/Controlling what you see.txt","score":0.8326636159888667},{"content":"As I looked further into these tools, I found that some had taken to calling them [Second Brains](https://fortelabs.co/blog/basboverview/). I thought this was incredibly exciting. The term sounds cyberpunk; building a \"second brain\" sounds way cooler than building a \"note taking app.\" At the same time, something about it unsettled me.","parent":"posts/Second Brains.txt","score":0.8316804324324025},{"content":"If the internet is a hurricane of information, let us build steely exoskeletons to weather the storm.","parent":"posts/Giant Robots.txt","score":0.8306993065185586},{"content":"I want digital technology to bridge divides between generations instead of widening them. I want it to foster remembrance instead of forgetting. I want it to reward thinking multiple generations into the future instead of until the end of the quarter.","parent":"posts/Generational Computing.txt","score":0.8302404073600462}]}