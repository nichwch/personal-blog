{"":[{"content":"Images","parent":"posts/Roadmap to exegesis' beta release-1-3-2021.txt","score":0.8755930010386553},{"content":"Edit: 1/6/2021","parent":"posts/Roadmap to exegesis' beta release-1-3-2021.txt","score":0.8686066054110362},{"content":"Conclusion","parent":"posts/exegesis pitch-2-4-2021.txt","score":0.8627111729312937},{"content":"Key Features","parent":"posts/Roadmap to exegesis' beta release-1-3-2021.txt","score":0.8621480151447609},{"content":"Building tools","parent":"posts/untitled-9-20-2021.txt","score":0.8593290080388},{"content":"Yes.","parent":"posts/exegesis pitch-2-4-2021.txt","score":0.859011141952105},{"content":"The club does 2 things.","parent":"posts/untitled-9-24-2021.txt","score":0.8589669169415844},{"content":"|___Practice Routine","parent":"posts/Roadmap to exegesis' beta release-1-3-2021.txt","score":0.8583546625772834},{"content":"Induction","parent":"posts/untitled-9-22-2021.txt","score":0.8577220980911441},{"content":"Code:","parent":"posts/Goals for Spring Quarter-3-17-2021.txt","score":0.856649564390397}],"Yesterday I had an idea for a club, and I've decided to start it. It will be called the [[Davis Hypertext Society]].":[{"content":"Yesterday I had an idea for a club, and I've decided to start it. It will be called the [[Davis Hypertext Society]].","parent":"posts/untitled-9-24-2021.txt","score":0.9999999999999998},{"content":"This site will be that infrastructure for me. It will be a place for me to play with ideas quickly.","parent":"posts/Fragments.txt","score":0.8852604914350015},{"content":"I want this new site to be a space for that.","parent":"posts/Fragments.txt","score":0.8789482691517161},{"content":"The club does 2 things.","parent":"posts/untitled-9-24-2021.txt","score":0.8728590657653322},{"content":"The idea will be for members to create their own pages on the site, to experiment with one-off ideas inspired by the website critiques.","parent":"posts/untitled-9-24-2021.txt","score":0.8727450436012826},{"content":"One, it meets up every week to critique a website chosen by members. The website might be one with exceptional design/animations/content/functionality. As a group, we'll discuss what we like about it, what we don't like, and then ideas for using the website's concepts in our own work. We'll also take guesses at how the website works technically, and take a look under the hood to see if our guesses are correct.","parent":"posts/untitled-9-24-2021.txt","score":0.8519036647536538}],"rhizome.world":[{"content":"rhizome.world","parent":"posts/untitled-9-24-2021.txt","score":1.0000000000000002},{"content":"Two, we will maintain a collective website at [https://rhizome.world/.](https://rhizome.world/.) The site is open source, you can find the repo here: [https://github.com/nichwch/rhizome-club.](https://github.com/nichwch/rhizome-club.)","parent":"posts/untitled-9-24-2021.txt","score":0.8964727543947246}],"The idea will be for members to create their own pages on the site, to experiment with one-off ideas inspired by the website critiques.":[{"content":"The idea will be for members to create their own pages on the site, to experiment with one-off ideas inspired by the website critiques.","parent":"posts/untitled-9-24-2021.txt","score":1},{"content":"One, it meets up every week to critique a website chosen by members. The website might be one with exceptional design/animations/content/functionality. As a group, we'll discuss what we like about it, what we don't like, and then ideas for using the website's concepts in our own work. We'll also take guesses at how the website works technically, and take a look under the hood to see if our guesses are correct.","parent":"posts/untitled-9-24-2021.txt","score":0.9117764462219802},{"content":"Yesterday I had an idea for a club, and I've decided to start it. It will be called the [[Davis Hypertext Society]].","parent":"posts/untitled-9-24-2021.txt","score":0.8727450436012826},{"content":"This site will be that infrastructure for me. It will be a place for me to play with ideas quickly.","parent":"posts/Fragments.txt","score":0.871456263742991},{"content":"I want this new site to be a space for that.","parent":"posts/Fragments.txt","score":0.8710032803507891},{"content":"The goal is to recreate the feeling of a musical jam session, but in a website.","parent":"posts/untitled-9-24-2021.txt","score":0.8693304219118781},{"content":"Instead of allowing users to write bios for the public pages, I would like to let them mark one page as their \"bio page.\" That page would be published, and would be shown directly on their profile. Basically, instead of a simple plaintext bio, their bios could be an entire exegesis note. That way, they could include links to their favorite pages, their favorite tags, and explain them to anyone visiting their page.","parent":"posts/Roadmap to exegesis' beta release-1-3-2021.txt","score":0.8622746778587772},{"content":"I could instead create all these pages, and tag them with their parents. Then, from the parent note, you would able to see the linked notes (like the sub directories, in a file system).","parent":"posts/Roadmap to exegesis' beta release-1-3-2021.txt","score":0.85749405417352}],"I did not do a braindump yesterday, the words did not flow easily. Best not to force these things. [[journal]] ":[{"content":"I did not do a braindump yesterday, the words did not flow easily. Best not to force these things. [[journal]]","parent":"posts/untitled-9-24-2021.txt","score":0.9999999999999998},{"content":"Having done this daily exegesis braindump [[journal]] thing for a bit, I think there's something of value to her response. I get down my thoughts *easier* in my journal posts than I do in my private exegesis posts.","parent":"posts/untitled-9-24-2021.txt","score":0.8769104930359373},{"content":"I fell into this kind of thinking while building exegesis, and it put an enormous amount of pressure on me, because it made me feel as if it wasn't just a notetaking app I was building, but a shrine for the mind. I would look at other notetaking systems like Roam Research and feel threatened - my notetaking app wasn't as powerful as theirs, therefore my mind would be weaker than theirs. Every little imperfection, every unimplemented feature, every bug felt sacrilegious - this was my second brain I was building after all. Needless to say, this led to a lot of feature creep, because my second brain had to be perfect.","parent":"posts/Second Brains-2-13-2021.txt","score":0.870488529509403},{"content":"If I start an exegesis brain dump (what I call my [[journal]] entries when I post them to twitter) and post it, it makes me more likely to continue writing in it throughout the day. Once I start writing, more thoughts and ideas come to me. It's as if my brain suddenly realizes there's an outlet for thoughts, and so it generates more of them. Having good conversations has a similar effect. [[writing]] [[personal-reflection]]","parent":"posts/untitled-10-1-2021.txt","score":0.868612348433696},{"content":"As I looked further into these tools, I found that some had taken to calling them [Second Brains](https://fortelabs.co/blog/basboverview/). I thought this was incredibly exciting. The term sounds cyberpunk; building a \"second brain\" sounds way cooler than building a \"note taking app.\" At the same time, something about it unsettled me.","parent":"posts/Second Brains-2-13-2021.txt","score":0.8574755070860673},{"content":"[[Second Brains]]","parent":"posts/Reflections on exegesis-10-7-2020.txt","score":0.8542118022786337},{"content":"\"I do not want to hamper myself with anything in preparing my notes. I will not introduce any order or system. Whatever I recall, I will write down\"","parent":"posts/Second Brains-2-13-2021.txt","score":0.8538109841198317},{"content":"Growing up, my main creative outlet was drawing. As soon as a pencil or pen touched my hand I would have to draw something - it was almost involuntary. Many school notebooks were ruined this way, many concerned teachers advised me to keep my homework free of doodles.","parent":"posts/Fragments.txt","score":0.850595954444615}]," The goal is to recreate the feeling of a musical jam session, but in a website. ":[{"content":"The goal is to recreate the feeling of a musical jam session, but in a website.","parent":"posts/untitled-9-24-2021.txt","score":0.9999999999999998},{"content":"The idea will be for members to create their own pages on the site, to experiment with one-off ideas inspired by the website critiques.","parent":"posts/untitled-9-24-2021.txt","score":0.8693304219118781},{"content":"Here, there is context (the theming of the video/playlist), and community (the commenters playing along with the theme). Taken together, they create something that can only be described as a vibe. I don't think you could even come close to doing something this cool with a Spotify playlist.","parent":"posts/Context and community makes music more enjoyable, and it's missing from modern streaming services-3-16-2021.txt","score":0.8685004947448393},{"content":"One, it meets up every week to critique a website chosen by members. The website might be one with exceptional design/animations/content/functionality. As a group, we'll discuss what we like about it, what we don't like, and then ideas for using the website's concepts in our own work. We'll also take guesses at how the website works technically, and take a look under the hood to see if our guesses are correct.","parent":"posts/untitled-9-24-2021.txt","score":0.8629226039112026},{"content":"Consider two things I think to be missing from modern music: context and community. While its nothing compared to live music, I think certain Youtube videos capture these elements in a novel and exciting way.","parent":"posts/Context and community makes music more enjoyable, and it's missing from modern streaming services-3-16-2021.txt","score":0.8558892766453439},{"content":"I want this new site to be a space for that.","parent":"posts/Fragments.txt","score":0.8556609128176669},{"content":"You could easily strip the audio from the video, touch it up a bit, and upload it as Spotify track. However, you'd miss out on so many precious details - how thrilled the old violinist is with the bassist's playing, the chatter from the onlookers praising their playing, the moment the camera pans to show the picturesque Italian street they're playing on, how they stop for a bit and the audience starts clapping prematurely, only to be pleasantly surprised when they start playing again with a faster rhythm.","parent":"posts/Context and community makes music more enjoyable, and it's missing from modern streaming services-3-16-2021.txt","score":0.8532489131945081},{"content":"TikTok has normalized tying music to everything - political messages, dances, jokes, short videos, etc. etc. Aiming to help do something similar with [[synesthesia]], but focused more on explicitly creative output.","parent":"posts/untitled-9-20-2021.txt","score":0.8531225902808665},{"content":"None of the above. I got a targeted Facebook ad for Fender's free online guitar course. I remember this very distinctly as the moment I decided to learn guitar; I had never really thought much about it at all before that. Deep within the entrails of Facebook's recommendation engine, some algorithm made an educated guess that I'd enjoy picking up the guitar - and it was right. For all the horrible things Facebook has done, this was a real positive-sum, Pareto optimal moment. Zuck got his advertising check, and I got a new hobby. And for all that has been blamed on the internet, I owe it everything. Everything that I love doing, I have learned to some extent from the internet, whether it be the web development skills that I built exegesis with, my amateur interest in philosophy, my childhood love for art, or my newfound interest in guitar. I believe it is mankind's most beautiful invention.","parent":"posts/Giant Robots-2-28-2021.txt","score":0.8530115011097105},{"content":"I want my computer to feel like my guitar. I want it to feel like I can noodle here.","parent":"posts/Fragments.txt","score":0.8523734291248732}],"Sitting in the MU again, this time with a view of the quad. Listening to \"The Time of the Season\" by the Zombies.":[{"content":"Sitting in the MU again, this time with a view of the quad. Listening to \"The Time of the Season\" by the Zombies.","parent":"posts/untitled-9-24-2021.txt","score":1},{"content":"Felt good to be back at university, surrounded by other students. Just enjoying the feeling of walking across the quad, enjoying the morning sun, avoiding eye contact with people marketing their clubs, spotting a familiar face in a crowd, etc. etc.","parent":"posts/untitled-9-22-2021.txt","score":0.8543512723961014}],"One, it meets up every week to critique a website chosen by members. The website might be one with exceptional design/animations/content/functionality. As a group, we'll discuss what we like about it, what we don't like, and then ideas for using the website's concepts in our own work. We'll also take guesses at how the website works technically, and take a look under the hood to see if our guesses are correct.":[{"content":"One, it meets up every week to critique a website chosen by members. The website might be one with exceptional design/animations/content/functionality. As a group, we'll discuss what we like about it, what we don't like, and then ideas for using the website's concepts in our own work. We'll also take guesses at how the website works technically, and take a look under the hood to see if our guesses are correct.","parent":"posts/untitled-9-24-2021.txt","score":1},{"content":"The idea will be for members to create their own pages on the site, to experiment with one-off ideas inspired by the website critiques.","parent":"posts/untitled-9-24-2021.txt","score":0.9117764462219802},{"content":"The goal is to recreate the feeling of a musical jam session, but in a website.","parent":"posts/untitled-9-24-2021.txt","score":0.8629226039112026},{"content":"Yesterday I had an idea for a club, and I've decided to start it. It will be called the [[Davis Hypertext Society]].","parent":"posts/untitled-9-24-2021.txt","score":0.8519036647536538}],"Two, we will maintain a collective website at [https://rhizome.world/.](https://rhizome.world/.) The site is open source, you can find the repo here: [https://github.com/nichwch/rhizome-club.](https://github.com/nichwch/rhizome-club.) ":[{"content":"Two, we will maintain a collective website at [https://rhizome.world/.](https://rhizome.world/.) The site is open source, you can find the repo here: [https://github.com/nichwch/rhizome-club.](https://github.com/nichwch/rhizome-club.)","parent":"posts/untitled-9-24-2021.txt","score":1},{"content":"rhizome.world","parent":"posts/untitled-9-24-2021.txt","score":0.8964727543947246}],"Fast Jazz":[{"content":"Fast Jazz","parent":"posts/untitled-9-24-2021.txt","score":1.0000000000000002},{"content":"I looked up \"fast jazz\" on Spotify and it's not nearly fast enough. Maybe it's the red bull I had this morning.","parent":"posts/untitled-9-24-2021.txt","score":0.9362616799739808}],"The goal is to keep things creative and lighthearted, to mess around with as many ideas as possible.":[{"content":"The goal is to keep things creative and lighthearted, to mess around with as many ideas as possible.","parent":"posts/untitled-9-24-2021.txt","score":1},{"content":"Higher-order creativity","parent":"posts/Prometheus-2-13-2021.txt","score":0.8641235572981797},{"content":"I want to return to my roots. I want to get excited by little ideas and not worry about scaling them, or fitting them into a huge vision, or turning them into legible accomplishments. I still want to be ambitious, but I don't want to let my ambition choke my creativity.","parent":"posts/Fragments.txt","score":0.8634927242741456},{"content":"Most importantly, I've been a creative my whole life. I understand how satisfying it is to make ideas a reality, and how frustrating it is when our tools fall short of our vision (a bad artist blames his tool, a great artist crafts his own).","parent":"posts/exegesis pitch-2-4-2021.txt","score":0.8594608788134461},{"content":"Creative tools vs rational tools","parent":"posts/On tools for thought: knowledge management vs creativity-8-27-2021.txt","score":0.8587666179709275},{"content":"I think it's important to have free time to just mess around and be bored, and explore dumb things that might turn out to be not so dumb - after all, \"boredom is that disagreeable 'windless calm' of the soul that precedes a happy voyage and cheerful winds.\" Every activity I eventually took seriously - Model UN in high school, programming in college - started out as an casual hobby I never planned to take seriously. So, I'd rather have slow progress towards my goals and a sizeable chunk of time to mess around, than to fill my days to the point where I have no time to explore at all.","parent":"posts/Goals for Spring Quarter-3-17-2021.txt","score":0.858301648048427},{"content":"Anyone doing creative work must carefully toe the line between two extremes: the collaborative extreme of butchering ideas by putting them into words, the auteur's extreme of refusing to communicate anything about an idea at all.","parent":"posts/On auteurs and language-10-9-2021.txt","score":0.858046389868799},{"content":"Tools for creative thought","parent":"posts/On tools for thought: knowledge management vs creativity-8-27-2021.txt","score":0.8573206208830857},{"content":"The assumption behind every collaborative creative endeavor is that language can capture ideas, and that language can mediate between ideas. Those who believe creative collaboration is possible believe that multiple creatives can enter the same room, use language to successfully communicate their ideas, use language to successfully mediate between their ideas, and use language to combine their ideas into a worthwhile final product.","parent":"posts/On auteurs and language-10-9-2021.txt","score":0.8552965368529221},{"content":"These are my hobbies that I use to take a break from code related creative-work.","parent":"posts/Goals for Spring Quarter-3-17-2021.txt","score":0.8512434126498125}],"Focus[[focus]] [[focus-machine]] [[ideas]] ":[{"content":"Focus[[focus]] [[focus-machine]] [[ideas]]","parent":"posts/untitled-9-24-2021.txt","score":1.0000000000000002},{"content":"I've found writing down tasks and decomposing them into smaller ones helps. Right now, I do this in [[exegesis]], which honestly feels somewhat suboptimal. I also have another side project called [https://focusmachine.app/](https://focusmachine.app/) to remind me of what I'm currently supposed to be focusing - it's really stupid, it just asks you what you want to work on and then spams you with a reminder to focus on that at user-inputted interval. [[focus]] [[focus-machine]] [[ideas]] [[exegesis]]","parent":"posts/untitled-9-24-2021.txt","score":0.8995008611584507},{"content":"The two of these combined could be a powerful tool for focus - something to help you decompose a larger goal into smaller tasks, and something to remind you which particular little task you're working on so you don't get distracted. The less powerful it is the better, because at a certain point having enough features in your todo list means figuring out how to input todos become another todo item. [[focus]] [[focus-machine]] [[ideas]]","parent":"posts/untitled-9-24-2021.txt","score":0.8939377252380971},{"content":"I've noticed a huge productivity problem for me is not being able to decompose tasks effectively. If I'm in a focused state of mind, this is easy and I can get work done. If I'm not, then something as simple as getting out of bed becomes difficult, because even getting out of bed constitutes a number of distinct tasks that need to be separated and ordered and then executed - physically getting out of bed, brushing my teeth, putting in my contacts, making breakfast, etc. etc. [[focus]] [[focus-machine]] [[ideas]]","parent":"posts/untitled-9-24-2021.txt","score":0.8725715368877864},{"content":"Listening to [[music]] can either be a great aid to [[focus]], or a huge impediment. Sometimes it helps me get in the zone. When it happens, usually the music fades into the background and I'm not even noticing it - this is the sweet spot for focus. Music that I like too much actually distracts me, and music that I don't like enough bores me and I end up wasting time switching what music I listen to. Working without music doesn't seem to be an option at all. I hope maybe [[synesthesia]] will help change my music listening habits? [[personal-reflection]]","parent":"posts/untitled-9-21-2021.txt","score":0.8585452332998598},{"content":"The main focus here is personal projects - learning more code and writing more are auxiliary activities that help this end. First among these personal projects is [[exegesis]], but I have a number of other personal projects that I want to work on as well.","parent":"posts/Goals for Spring Quarter-3-17-2021.txt","score":0.8539609029808932},{"content":"We shape technology, but technology shapes us as well. Our thought processes have come to resemble the disorganized, amorphous, nonlinear streams that we consume information with. When was the last time you really felt focused? [[exegesis]] is a tool designed for the brave new world we find ourselves living in. Instead of resisting the increasingly disorganized information ecosystem of the modern world, it embraces it. It is designed to help you make sense of chaos.","parent":"posts/Manifesto-4-23-2020.txt","score":0.8521675614102029},{"content":"Could expand this into an [[essay]] eventually.","parent":"posts/untitled-1-4-2022.txt","score":0.850963769971814}],"I looked up \"fast jazz\" on Spotify and it's not nearly fast enough. Maybe it's the red bull I had this morning.":[{"content":"I looked up \"fast jazz\" on Spotify and it's not nearly fast enough. Maybe it's the red bull I had this morning.","parent":"posts/untitled-9-24-2021.txt","score":0.9999999999999999},{"content":"Fast Jazz","parent":"posts/untitled-9-24-2021.txt","score":0.9362616799739808}],"I've noticed a strange tradeoff, where the more things I pile into my morning routine (getting in a run, doing hw, etc. etc.) the freer I feel for the rest of the day, but the harder it makes it to actually get out of bed and face these mundane tasks. If I just do what I want in the morning - code side projects - I jump out of bed easily, but then I feel the weight of obligations over me. If I handle obligations in the morning, then the thought of doing boring things makes it hard to get out of bed [[focus]] [[focus-machine]] [[ideas]] ":[{"content":"I've noticed a strange tradeoff, where the more things I pile into my morning routine (getting in a run, doing hw, etc. etc.) the freer I feel for the rest of the day, but the harder it makes it to actually get out of bed and face these mundane tasks. If I just do what I want in the morning - code side projects - I jump out of bed easily, but then I feel the weight of obligations over me. If I handle obligations in the morning, then the thought of doing boring things makes it hard to get out of bed [[focus]] [[focus-machine]] [[ideas]]","parent":"posts/untitled-9-24-2021.txt","score":1},{"content":"I've noticed a huge productivity problem for me is not being able to decompose tasks effectively. If I'm in a focused state of mind, this is easy and I can get work done. If I'm not, then something as simple as getting out of bed becomes difficult, because even getting out of bed constitutes a number of distinct tasks that need to be separated and ordered and then executed - physically getting out of bed, brushing my teeth, putting in my contacts, making breakfast, etc. etc. [[focus]] [[focus-machine]] [[ideas]]","parent":"posts/untitled-9-24-2021.txt","score":0.889879847562428},{"content":"I think it's important to have free time to just mess around and be bored, and explore dumb things that might turn out to be not so dumb - after all, \"boredom is that disagreeable 'windless calm' of the soul that precedes a happy voyage and cheerful winds.\" Every activity I eventually took seriously - Model UN in high school, programming in college - started out as an casual hobby I never planned to take seriously. So, I'd rather have slow progress towards my goals and a sizeable chunk of time to mess around, than to fill my days to the point where I have no time to explore at all.","parent":"posts/Goals for Spring Quarter-3-17-2021.txt","score":0.870672796611703},{"content":"The steady rhythm of school and myriad 30-minute break periods it produces throughout the day have a good effect on my productivity, which is surprising. There's that famous [Paul Graham essay](http://www.paulgraham.com/makersschedule.html) where he talks about hacker schedules, or how programmers/creators prefer long periods of focused time over short fragmented work periods (that managers tend to prefer) because there's an overhead cost to loading a project into your head. [[focus]] [[personal-reflection]]","parent":"posts/untitled-10-1-2021.txt","score":0.8595989033098326},{"content":"Actually, I'm not sure which I prefer yet. I have noticed, however, that sometimes I'll sit down to work for 2 hours, and proceed to waste it all, until the last 20 minutes or so, when I become desperate to get something done so the entire period wasn't a waste of time. That 20 minutes is often incredibly productive. When I only have pockets of 30 minute breaks throughout the day to work on a project, it's like every break is that last 20 minutes of a 2 hour work period. Or not, sometimes I end up getting nothing done, wishing I had 2 hours to do deep, focused work. [[focus]] [[personal-reflection]]","parent":"posts/untitled-10-1-2021.txt","score":0.856673323420143}],"I've noticed a huge productivity problem for me is not being able to decompose tasks effectively. If I'm in a focused state of mind, this is easy and I can get work done. If I'm not, then something as simple as getting out of bed becomes difficult, because even getting out of bed constitutes a number of distinct tasks that need to be separated and ordered and then executed - physically getting out of bed, brushing my teeth, putting in my contacts, making breakfast, etc. etc. [[focus]] [[focus-machine]] [[ideas]] ":[{"content":"I've noticed a huge productivity problem for me is not being able to decompose tasks effectively. If I'm in a focused state of mind, this is easy and I can get work done. If I'm not, then something as simple as getting out of bed becomes difficult, because even getting out of bed constitutes a number of distinct tasks that need to be separated and ordered and then executed - physically getting out of bed, brushing my teeth, putting in my contacts, making breakfast, etc. etc. [[focus]] [[focus-machine]] [[ideas]]","parent":"posts/untitled-9-24-2021.txt","score":1.0000000000000002},{"content":"I've found writing down tasks and decomposing them into smaller ones helps. Right now, I do this in [[exegesis]], which honestly feels somewhat suboptimal. I also have another side project called [https://focusmachine.app/](https://focusmachine.app/) to remind me of what I'm currently supposed to be focusing - it's really stupid, it just asks you what you want to work on and then spams you with a reminder to focus on that at user-inputted interval. [[focus]] [[focus-machine]] [[ideas]] [[exegesis]]","parent":"posts/untitled-9-24-2021.txt","score":0.8990237458420504},{"content":"I've noticed a strange tradeoff, where the more things I pile into my morning routine (getting in a run, doing hw, etc. etc.) the freer I feel for the rest of the day, but the harder it makes it to actually get out of bed and face these mundane tasks. If I just do what I want in the morning - code side projects - I jump out of bed easily, but then I feel the weight of obligations over me. If I handle obligations in the morning, then the thought of doing boring things makes it hard to get out of bed [[focus]] [[focus-machine]] [[ideas]]","parent":"posts/untitled-9-24-2021.txt","score":0.889879847562428},{"content":"Focus[[focus]] [[focus-machine]] [[ideas]]","parent":"posts/untitled-9-24-2021.txt","score":0.8725715368877864},{"content":"The two of these combined could be a powerful tool for focus - something to help you decompose a larger goal into smaller tasks, and something to remind you which particular little task you're working on so you don't get distracted. The less powerful it is the better, because at a certain point having enough features in your todo list means figuring out how to input todos become another todo item. [[focus]] [[focus-machine]] [[ideas]]","parent":"posts/untitled-9-24-2021.txt","score":0.8712028028499534},{"content":"Actually, I'm not sure which I prefer yet. I have noticed, however, that sometimes I'll sit down to work for 2 hours, and proceed to waste it all, until the last 20 minutes or so, when I become desperate to get something done so the entire period wasn't a waste of time. That 20 minutes is often incredibly productive. When I only have pockets of 30 minute breaks throughout the day to work on a project, it's like every break is that last 20 minutes of a 2 hour work period. Or not, sometimes I end up getting nothing done, wishing I had 2 hours to do deep, focused work. [[focus]] [[personal-reflection]]","parent":"posts/untitled-10-1-2021.txt","score":0.8684897647707557},{"content":"The steady rhythm of school and myriad 30-minute break periods it produces throughout the day have a good effect on my productivity, which is surprising. There's that famous [Paul Graham essay](http://www.paulgraham.com/makersschedule.html) where he talks about hacker schedules, or how programmers/creators prefer long periods of focused time over short fragmented work periods (that managers tend to prefer) because there's an overhead cost to loading a project into your head. [[focus]] [[personal-reflection]]","parent":"posts/untitled-10-1-2021.txt","score":0.8636027316404389},{"content":"Working on a refactor for [[exegesis]] and [[synesthesia]], thinking about how to budget time. Working strategy is to take estimate for each feature, and double the time for each to account for stupid roadblocks (wifi not working, interrupted by something, bad documentation, etc. etc.) [[code]] [[devlog]]","parent":"posts/untitled-9-21-2021.txt","score":0.8598650700612213},{"content":"I do think, however, that it's important to have priorities. In the first draft of this, I ordered each of those goals in a list of priorities from top to bottom, but I don't think that was a good way of looking at it. For one, a lot of them are highly related - for example, working on personal projects and learning to code.","parent":"posts/Goals for Spring Quarter-3-17-2021.txt","score":0.851827022490836},{"content":"The main focus here is personal projects - learning more code and writing more are auxiliary activities that help this end. First among these personal projects is [[exegesis]], but I have a number of other personal projects that I want to work on as well.","parent":"posts/Goals for Spring Quarter-3-17-2021.txt","score":0.8515903501583671}],"I've found writing down tasks and decomposing them into smaller ones helps. Right now, I do this in [[exegesis]], which honestly feels somewhat suboptimal. I also have another side project called [https://focusmachine.app/](https://focusmachine.app/) to remind me of what I'm currently supposed to be focusing - it's really stupid, it just asks you what you want to work on and then spams you with a reminder to focus on that at user-inputted interval. [[focus]] [[focus-machine]] [[ideas]] [[exegesis]] ":[{"content":"I've found writing down tasks and decomposing them into smaller ones helps. Right now, I do this in [[exegesis]], which honestly feels somewhat suboptimal. I also have another side project called [https://focusmachine.app/](https://focusmachine.app/) to remind me of what I'm currently supposed to be focusing - it's really stupid, it just asks you what you want to work on and then spams you with a reminder to focus on that at user-inputted interval. [[focus]] [[focus-machine]] [[ideas]] [[exegesis]]","parent":"posts/untitled-9-24-2021.txt","score":1},{"content":"The main focus here is personal projects - learning more code and writing more are auxiliary activities that help this end. First among these personal projects is [[exegesis]], but I have a number of other personal projects that I want to work on as well.","parent":"posts/Goals for Spring Quarter-3-17-2021.txt","score":0.9073256535585652},{"content":"Focus[[focus]] [[focus-machine]] [[ideas]]","parent":"posts/untitled-9-24-2021.txt","score":0.8995008611584507},{"content":"I've noticed a huge productivity problem for me is not being able to decompose tasks effectively. If I'm in a focused state of mind, this is easy and I can get work done. If I'm not, then something as simple as getting out of bed becomes difficult, because even getting out of bed constitutes a number of distinct tasks that need to be separated and ordered and then executed - physically getting out of bed, brushing my teeth, putting in my contacts, making breakfast, etc. etc. [[focus]] [[focus-machine]] [[ideas]]","parent":"posts/untitled-9-24-2021.txt","score":0.8990237458420504},{"content":"Working on a refactor for [[exegesis]] and [[synesthesia]], thinking about how to budget time. Working strategy is to take estimate for each feature, and double the time for each to account for stupid roadblocks (wifi not working, interrupted by something, bad documentation, etc. etc.) [[code]] [[devlog]]","parent":"posts/untitled-9-21-2021.txt","score":0.8921696368099488},{"content":"The two of these combined could be a powerful tool for focus - something to help you decompose a larger goal into smaller tasks, and something to remind you which particular little task you're working on so you don't get distracted. The less powerful it is the better, because at a certain point having enough features in your todo list means figuring out how to input todos become another todo item. [[focus]] [[focus-machine]] [[ideas]]","parent":"posts/untitled-9-24-2021.txt","score":0.8888478420575988},{"content":"I originally thought of [[exegesis]] as a tool for rational thought as well - I wanted to use it to organize my notes, and hoped it would make me better at retaining information at school. After more than a year of using it, it turns out I almost never use it for either of those things.","parent":"posts/On tools for thought: knowledge management vs creativity-8-27-2021.txt","score":0.8880772873579507},{"content":"My favorite use of [[exegesis]] is to write down ideas that I have. I write about exegesis in exegesis, and a lot of features that I've added to exegesis started as sudden thoughts that were captured in exegesis. In my experience, ideas are like seeds, and writing them down helps them grow. I might think nothing of a simple idea I capture one day, but a week later it might have renewed significance, and it could even spark new ideas.","parent":"posts/On tools for thought: knowledge management vs creativity-8-27-2021.txt","score":0.8868879476085676},{"content":"I want to try something: just posting a mind dump on [[exegesis]] every morning. I've had a theory for a while now that the best use case for exegesis is journaling, and this would be a good way to put it to the test. It will also be a good way for me to share my ideas with the world.","parent":"posts/untitled-9-20-2021.txt","score":0.8857291440704544},{"content":"What do I use [[exegesis]] for? I use it like a journal. I write down thoughts about my life, ideas that I have, things that I'd like to do, reflections on my day, etc. etc. None of these things could be called knowledge, none of them could be called rational.","parent":"posts/On tools for thought: knowledge management vs creativity-8-27-2021.txt","score":0.8760768616090095}],"The two of these combined could be a powerful tool for focus - something to help you decompose a larger goal into smaller tasks, and something to remind you which particular little task you're working on so you don't get distracted. The less powerful it is the better, because at a certain point having enough features in your todo list means figuring out how to input todos become another todo item. [[focus]] [[focus-machine]] [[ideas]] ":[{"content":"The two of these combined could be a powerful tool for focus - something to help you decompose a larger goal into smaller tasks, and something to remind you which particular little task you're working on so you don't get distracted. The less powerful it is the better, because at a certain point having enough features in your todo list means figuring out how to input todos become another todo item. [[focus]] [[focus-machine]] [[ideas]]","parent":"posts/untitled-9-24-2021.txt","score":1},{"content":"Focus[[focus]] [[focus-machine]] [[ideas]]","parent":"posts/untitled-9-24-2021.txt","score":0.8939377252380971},{"content":"I've found writing down tasks and decomposing them into smaller ones helps. Right now, I do this in [[exegesis]], which honestly feels somewhat suboptimal. I also have another side project called [https://focusmachine.app/](https://focusmachine.app/) to remind me of what I'm currently supposed to be focusing - it's really stupid, it just asks you what you want to work on and then spams you with a reminder to focus on that at user-inputted interval. [[focus]] [[focus-machine]] [[ideas]] [[exegesis]]","parent":"posts/untitled-9-24-2021.txt","score":0.8888478420575988},{"content":"I've noticed a huge productivity problem for me is not being able to decompose tasks effectively. If I'm in a focused state of mind, this is easy and I can get work done. If I'm not, then something as simple as getting out of bed becomes difficult, because even getting out of bed constitutes a number of distinct tasks that need to be separated and ordered and then executed - physically getting out of bed, brushing my teeth, putting in my contacts, making breakfast, etc. etc. [[focus]] [[focus-machine]] [[ideas]]","parent":"posts/untitled-9-24-2021.txt","score":0.8712028028499534},{"content":"The main focus here is personal projects - learning more code and writing more are auxiliary activities that help this end. First among these personal projects is [[exegesis]], but I have a number of other personal projects that I want to work on as well.","parent":"posts/Goals for Spring Quarter-3-17-2021.txt","score":0.8587603692232648},{"content":"I do think, however, that it's important to have priorities. In the first draft of this, I ordered each of those goals in a list of priorities from top to bottom, but I don't think that was a good way of looking at it. For one, a lot of them are highly related - for example, working on personal projects and learning to code.","parent":"posts/Goals for Spring Quarter-3-17-2021.txt","score":0.8537185512879438}],"The club does 2 things. ":[{"content":"The club does 2 things.","parent":"posts/untitled-9-24-2021.txt","score":1},{"content":"Yesterday I had an idea for a club, and I've decided to start it. It will be called the [[Davis Hypertext Society]].","parent":"posts/untitled-9-24-2021.txt","score":0.8728590657653322}],"Visual developer tools":[{"content":"Visual developer tools","parent":"posts/untitled-9-24-2021.txt","score":1},{"content":"[[ideas]]: As I've matured as a [[React]] developer, I've found certain standard methods of handling things like state management, routing, styling, and data fetching. Because I've standardized on this approach, I've been writing higher order functions that abstract away a lot of the boilerplate. This has me thinking - it would almost certainly be possible to build some kind of visual tool to help scaffold a react app. Something in between no-code and a developer tool - like the [Nx.dev extension for VSCode](https://marketplace.visualstudio.com/items?itemName=nrwl.angular-console). [[code]]","parent":"posts/untitled-9-20-2021.txt","score":0.9037255078496476},{"content":"Front end development should be way more visual. A great deal of front-end development pain points cannot be fixed with fancier libraries and languages, because the fundamental mismatch is trying to create something visual with a text-based tool.[[code]] [[ideas]] [[tools for thought]]","parent":"posts/untitled-9-24-2021.txt","score":0.8931578405000704},{"content":"Building tools","parent":"posts/untitled-9-20-2021.txt","score":0.8865635223977756},{"content":"[[ideas]]: A tool that analyzes a react project and shows your component structure for you in a nice and visual way. Probably already exists, idk","parent":"posts/untitled-9-20-2021.txt","score":0.8766852372015386},{"content":"I want to clarify that I'm not bullish at all on no-code. I think \"no-code\" and \"low-code\" are the wrong way to frame things. There is a place for tools like this, but it's more productive to think of them as \"visual developer tools.\"[[code]] [[ideas]] [[tools for thought]]","parent":"posts/untitled-9-24-2021.txt","score":0.8741265271757559},{"content":"The vision is to have a tool that provides a visual interface for creating layouts, and maybe even rigging up basic stateful logic, or data fetching logic. I've more or less nailed down a preferred personal stack for creating projects with React, Express and Postgres, so it shouldn't be terribly difficult to even integrate database logic/fetching logic into such a tool (so long as some flexibility is lost on technology choice).[[code]] [[ideas]] [[tools for thought]]","parent":"posts/untitled-9-24-2021.txt","score":0.8716671001112808},{"content":"Visionaries, artists, and creatives do not want to live in a spreadsheet. They have no interest in writing emacs macros or writing custom JS plugins for Roam Research. They want something like the Macbook of tools for thought - something beautiful and well crafted that gets out of the way and lets you do your best work.","parent":"posts/exegesis pitch-2-4-2021.txt","score":0.8522791623898457}],"For example, I'm starting to suspect that no styling library is going to provide a good experience, because the fundamental pain point is trying to express a visual idea with a text-based set of rules. A styling library can provide some affordances that make things easier - easy theming, dark mode, conditional styles, etc. etc - but the fundamental painful experience of trying to express a visual idea in code cannot be ameliorated with better code tools.[[code]] [[ideas]] [[tools for thought]] ":[{"content":"For example, I'm starting to suspect that no styling library is going to provide a good experience, because the fundamental pain point is trying to express a visual idea with a text-based set of rules. A styling library can provide some affordances that make things easier - easy theming, dark mode, conditional styles, etc. etc - but the fundamental painful experience of trying to express a visual idea in code cannot be ameliorated with better code tools.[[code]] [[ideas]] [[tools for thought]]","parent":"posts/untitled-9-24-2021.txt","score":1.0000000000000002},{"content":"I want to clarify that I'm not bullish at all on no-code. I think \"no-code\" and \"low-code\" are the wrong way to frame things. There is a place for tools like this, but it's more productive to think of them as \"visual developer tools.\"[[code]] [[ideas]] [[tools for thought]]","parent":"posts/untitled-9-24-2021.txt","score":0.9025933926198102},{"content":"Front end development should be way more visual. A great deal of front-end development pain points cannot be fixed with fancier libraries and languages, because the fundamental mismatch is trying to create something visual with a text-based tool.[[code]] [[ideas]] [[tools for thought]]","parent":"posts/untitled-9-24-2021.txt","score":0.9019328757392722},{"content":"This is not the case for programming. Making better tools for programming (new languages, new frameworks, new libraries) itself requires programming, and while making programming tools is different in important respects from writing regular programs, it is still programming. Making guitars is not playing guitars, making paints is not painting, but making better programming tools is programming. Programming, then, is an, intrinsically recursive creative medium.","parent":"posts/Prometheus-2-13-2021.txt","score":0.8700236956831952},{"content":"Visionaries, artists, and creatives do not want to live in a spreadsheet. They have no interest in writing emacs macros or writing custom JS plugins for Roam Research. They want something like the Macbook of tools for thought - something beautiful and well crafted that gets out of the way and lets you do your best work.","parent":"posts/exegesis pitch-2-4-2021.txt","score":0.8578600965932991},{"content":"I may take a typography class this quarter. It's not required for graduation, but I figure it could help me design better products, and maybe make [[exegesis]] look prettier.","parent":"posts/untitled-9-22-2021.txt","score":0.8552072122881141},{"content":"My philosophy here is this: it is better to try and make something authentic, beautiful, and expressive and have it turn out bad than it is to hide behind the safeness of minimalism. If you're writing, go ahead and try to sound clever. You might fail and sound incredibly immature, but a fear of failure is disastrous for any creative endeavor. If you're designing something, go all out. Make it bold and loud, and if it turns out gaudy, you can fix it on the next iteration. This was what I tried to do [[exegesis]]' redesign, and so far I'm very happy with it.","parent":"posts/Minimalism-6-8-2021.txt","score":0.8542041674763816},{"content":"There is at least one creative medium for which this is not true, however, and that is programming. Here is a unique and strange property of programming: Making tools to program better itself involves programming. This is not true for music or art - the process of making a guitar is not the art of playing the guitar, the process of making paints is not the art of painting, and while luthiers and paint-makers are certainly artists in their own right (and are often good at playing the guitar and painting, respectively), they practice an art that is distinct from the art that they enable.","parent":"posts/Prometheus-2-13-2021.txt","score":0.8532406062762756},{"content":"There was a problem with both of these outlets, however: my short attention span. I struggled to work on larger drawings, because I'd give up on them and start new doodles. The same happened with code projects.","parent":"posts/Fragments.txt","score":0.8532147864601038},{"content":"I want to learn more code. Working on [[exegesis]] over the course of a year, I saw my coding ability improve substantially. Towards the last 2 months, while rewriting a part of the codebase, I found myself dumbfounded by some of the decisions and patterns I had used a year earlier. The code I wrote towards the end was noticeably cleaner and more maintainable, mostly because I had familiarized myself with [[React]] hooks. Learning NextJS and GraphQL was also very rewarding, and both technologies were used extensively in the final version of exegesis. Looking forwards, I am thinking about learning Go, Clojure and maybe Rust. Go is the most practical one of all these for my purposes, and could open up a lot of job offers. Clojure is the most interesting from a theoretical standpoint, since I've never used a lisp or functional language. Rust is interesting because I hate systems/low-level programming, but I suspect that might only be because I hate C, and maybe Rust's more modern features will sell me on it.","parent":"posts/Reflections for the New Year-1-2-2021.txt","score":0.8508197191296287}],"Front end development should be way more visual. A great deal of front-end development pain points cannot be fixed with fancier libraries and languages, because the fundamental mismatch is trying to create something visual with a text-based tool.[[code]] [[ideas]] [[tools for thought]] ":[{"content":"Front end development should be way more visual. A great deal of front-end development pain points cannot be fixed with fancier libraries and languages, because the fundamental mismatch is trying to create something visual with a text-based tool.[[code]] [[ideas]] [[tools for thought]]","parent":"posts/untitled-9-24-2021.txt","score":1},{"content":"For example, I'm starting to suspect that no styling library is going to provide a good experience, because the fundamental pain point is trying to express a visual idea with a text-based set of rules. A styling library can provide some affordances that make things easier - easy theming, dark mode, conditional styles, etc. etc - but the fundamental painful experience of trying to express a visual idea in code cannot be ameliorated with better code tools.[[code]] [[ideas]] [[tools for thought]]","parent":"posts/untitled-9-24-2021.txt","score":0.9019328757392722},{"content":"I want to clarify that I'm not bullish at all on no-code. I think \"no-code\" and \"low-code\" are the wrong way to frame things. There is a place for tools like this, but it's more productive to think of them as \"visual developer tools.\"[[code]] [[ideas]] [[tools for thought]]","parent":"posts/untitled-9-24-2021.txt","score":0.9011255687701164},{"content":"Visual developer tools","parent":"posts/untitled-9-24-2021.txt","score":0.8931578405000704},{"content":"The vision is to have a tool that provides a visual interface for creating layouts, and maybe even rigging up basic stateful logic, or data fetching logic. I've more or less nailed down a preferred personal stack for creating projects with React, Express and Postgres, so it shouldn't be terribly difficult to even integrate database logic/fetching logic into such a tool (so long as some flexibility is lost on technology choice).[[code]] [[ideas]] [[tools for thought]]","parent":"posts/untitled-9-24-2021.txt","score":0.8671689032325065},{"content":"[[ideas]]: As I've matured as a [[React]] developer, I've found certain standard methods of handling things like state management, routing, styling, and data fetching. Because I've standardized on this approach, I've been writing higher order functions that abstract away a lot of the boilerplate. This has me thinking - it would almost certainly be possible to build some kind of visual tool to help scaffold a react app. Something in between no-code and a developer tool - like the [Nx.dev extension for VSCode](https://marketplace.visualstudio.com/items?itemName=nrwl.angular-console). [[code]]","parent":"posts/untitled-9-20-2021.txt","score":0.8668880110375661},{"content":"This is not the case for programming. Making better tools for programming (new languages, new frameworks, new libraries) itself requires programming, and while making programming tools is different in important respects from writing regular programs, it is still programming. Making guitars is not playing guitars, making paints is not painting, but making better programming tools is programming. Programming, then, is an, intrinsically recursive creative medium.","parent":"posts/Prometheus-2-13-2021.txt","score":0.8661586663782865},{"content":"If you share some infrastructure that lets you play around with ideas quickly and also share them quickly, that solves the problem. Stuff like Repl.it does this, but I feel less of a sense of ownership over it.","parent":"posts/Fragments.txt","score":0.8572682040996187},{"content":"Visionaries, artists, and creatives do not want to live in a spreadsheet. They have no interest in writing emacs macros or writing custom JS plugins for Roam Research. They want something like the Macbook of tools for thought - something beautiful and well crafted that gets out of the way and lets you do your best work.","parent":"posts/exegesis pitch-2-4-2021.txt","score":0.8557155284847706},{"content":"[[ideas]]: A tool that analyzes a react project and shows your component structure for you in a nice and visual way. Probably already exists, idk","parent":"posts/untitled-9-20-2021.txt","score":0.8540709779811363}],"I want to clarify that I'm not bullish at all on no-code. I think \"no-code\" and \"low-code\" are the wrong way to frame things. There is a place for tools like this, but it's more productive to think of them as \"visual developer tools.\"[[code]] [[ideas]] [[tools for thought]] ":[{"content":"I want to clarify that I'm not bullish at all on no-code. I think \"no-code\" and \"low-code\" are the wrong way to frame things. There is a place for tools like this, but it's more productive to think of them as \"visual developer tools.\"[[code]] [[ideas]] [[tools for thought]]","parent":"posts/untitled-9-24-2021.txt","score":1.0000000000000002},{"content":"For example, I'm starting to suspect that no styling library is going to provide a good experience, because the fundamental pain point is trying to express a visual idea with a text-based set of rules. A styling library can provide some affordances that make things easier - easy theming, dark mode, conditional styles, etc. etc - but the fundamental painful experience of trying to express a visual idea in code cannot be ameliorated with better code tools.[[code]] [[ideas]] [[tools for thought]]","parent":"posts/untitled-9-24-2021.txt","score":0.9025933926198102},{"content":"Front end development should be way more visual. A great deal of front-end development pain points cannot be fixed with fancier libraries and languages, because the fundamental mismatch is trying to create something visual with a text-based tool.[[code]] [[ideas]] [[tools for thought]]","parent":"posts/untitled-9-24-2021.txt","score":0.9011255687701164},{"content":"Visual developer tools","parent":"posts/untitled-9-24-2021.txt","score":0.8741265271757559},{"content":"[[ideas]]: As I've matured as a [[React]] developer, I've found certain standard methods of handling things like state management, routing, styling, and data fetching. Because I've standardized on this approach, I've been writing higher order functions that abstract away a lot of the boilerplate. This has me thinking - it would almost certainly be possible to build some kind of visual tool to help scaffold a react app. Something in between no-code and a developer tool - like the [Nx.dev extension for VSCode](https://marketplace.visualstudio.com/items?itemName=nrwl.angular-console). [[code]]","parent":"posts/untitled-9-20-2021.txt","score":0.873872203813178},{"content":"Visionaries, artists, and creatives do not want to live in a spreadsheet. They have no interest in writing emacs macros or writing custom JS plugins for Roam Research. They want something like the Macbook of tools for thought - something beautiful and well crafted that gets out of the way and lets you do your best work.","parent":"posts/exegesis pitch-2-4-2021.txt","score":0.8647276872888942},{"content":"I want to learn more code. Working on [[exegesis]] over the course of a year, I saw my coding ability improve substantially. Towards the last 2 months, while rewriting a part of the codebase, I found myself dumbfounded by some of the decisions and patterns I had used a year earlier. The code I wrote towards the end was noticeably cleaner and more maintainable, mostly because I had familiarized myself with [[React]] hooks. Learning NextJS and GraphQL was also very rewarding, and both technologies were used extensively in the final version of exegesis. Looking forwards, I am thinking about learning Go, Clojure and maybe Rust. Go is the most practical one of all these for my purposes, and could open up a lot of job offers. Clojure is the most interesting from a theoretical standpoint, since I've never used a lisp or functional language. Rust is interesting because I hate systems/low-level programming, but I suspect that might only be because I hate C, and maybe Rust's more modern features will sell me on it.","parent":"posts/Reflections for the New Year-1-2-2021.txt","score":0.8606351314275258},{"content":"This is not the case for programming. Making better tools for programming (new languages, new frameworks, new libraries) itself requires programming, and while making programming tools is different in important respects from writing regular programs, it is still programming. Making guitars is not playing guitars, making paints is not painting, but making better programming tools is programming. Programming, then, is an, intrinsically recursive creative medium.","parent":"posts/Prometheus-2-13-2021.txt","score":0.8605394682047259},{"content":"The vision is to have a tool that provides a visual interface for creating layouts, and maybe even rigging up basic stateful logic, or data fetching logic. I've more or less nailed down a preferred personal stack for creating projects with React, Express and Postgres, so it shouldn't be terribly difficult to even integrate database logic/fetching logic into such a tool (so long as some flexibility is lost on technology choice).[[code]] [[ideas]] [[tools for thought]]","parent":"posts/untitled-9-24-2021.txt","score":0.8598769356065596},{"content":"Learn more code (new languages, new frameworks, new databases, fancy tech like blockchain and ML, etc. etc.)","parent":"posts/Goals for Spring Quarter-3-17-2021.txt","score":0.85982323700726}],"Fortunately, it looks like there's progress being made here, with projects like [https://github.com/blocks/blocks.](https://github.com/blocks/blocks.) I want to build my own solutions, maybe borrowing from current projects.[[code]] [[ideas]] [[tools for thought]] ":[{"content":"Fortunately, it looks like there's progress being made here, with projects like [https://github.com/blocks/blocks.](https://github.com/blocks/blocks.) I want to build my own solutions, maybe borrowing from current projects.[[code]] [[ideas]] [[tools for thought]]","parent":"posts/untitled-9-24-2021.txt","score":1.0000000000000002},{"content":"To make regular progress towards personal projects, I'll be writing more on my development progress with [[exegesis]], under the tag [[devlog]]. I'll also be publishing another post soon on my plans for future features, and when I expect to release them by. I will do something similar with my other projects.","parent":"posts/Goals for Spring Quarter-3-17-2021.txt","score":0.8785845442939427},{"content":"The idea is to just make a ton of side projects and put them all here. I have some preliminary ideas on how I can organize this but I'm not particularly set on anything right now. I don't feel particularly limited by framework choice either - with the liberal use of iFrames, I can simply embed other projects using different frameworks here. I've already done that with a project I've created with Svelte.","parent":"posts/Fragments.txt","score":0.8692650255036606},{"content":"If you share some infrastructure that lets you play around with ideas quickly and also share them quickly, that solves the problem. Stuff like Repl.it does this, but I feel less of a sense of ownership over it.","parent":"posts/Fragments.txt","score":0.8517771271206854}],"The vision is to have a tool that provides a visual interface for creating layouts, and maybe even rigging up basic stateful logic, or data fetching logic. I've more or less nailed down a preferred personal stack for creating projects with React, Express and Postgres, so it shouldn't be terribly difficult to even integrate database logic/fetching logic into such a tool (so long as some flexibility is lost on technology choice).[[code]] [[ideas]] [[tools for thought]] ":[{"content":"The vision is to have a tool that provides a visual interface for creating layouts, and maybe even rigging up basic stateful logic, or data fetching logic. I've more or less nailed down a preferred personal stack for creating projects with React, Express and Postgres, so it shouldn't be terribly difficult to even integrate database logic/fetching logic into such a tool (so long as some flexibility is lost on technology choice).[[code]] [[ideas]] [[tools for thought]]","parent":"posts/untitled-9-24-2021.txt","score":1},{"content":"[[ideas]]: As I've matured as a [[React]] developer, I've found certain standard methods of handling things like state management, routing, styling, and data fetching. Because I've standardized on this approach, I've been writing higher order functions that abstract away a lot of the boilerplate. This has me thinking - it would almost certainly be possible to build some kind of visual tool to help scaffold a react app. Something in between no-code and a developer tool - like the [Nx.dev extension for VSCode](https://marketplace.visualstudio.com/items?itemName=nrwl.angular-console). [[code]]","parent":"posts/untitled-9-20-2021.txt","score":0.9012512074341783},{"content":"[[ideas]]: A tool that analyzes a react project and shows your component structure for you in a nice and visual way. Probably already exists, idk","parent":"posts/untitled-9-20-2021.txt","score":0.8978186156687243},{"content":"Visual developer tools","parent":"posts/untitled-9-24-2021.txt","score":0.8716671001112808},{"content":"Front end development should be way more visual. A great deal of front-end development pain points cannot be fixed with fancier libraries and languages, because the fundamental mismatch is trying to create something visual with a text-based tool.[[code]] [[ideas]] [[tools for thought]]","parent":"posts/untitled-9-24-2021.txt","score":0.8671689032325065},{"content":"I want to clarify that I'm not bullish at all on no-code. I think \"no-code\" and \"low-code\" are the wrong way to frame things. There is a place for tools like this, but it's more productive to think of them as \"visual developer tools.\"[[code]] [[ideas]] [[tools for thought]]","parent":"posts/untitled-9-24-2021.txt","score":0.8598769356065596},{"content":"The idea is to just make a ton of side projects and put them all here. I have some preliminary ideas on how I can organize this but I'm not particularly set on anything right now. I don't feel particularly limited by framework choice either - with the liberal use of iFrames, I can simply embed other projects using different frameworks here. I've already done that with a project I've created with Svelte.","parent":"posts/Fragments.txt","score":0.8579084747236769}],"Talking to Emma Salinas, I tried convincing her that exegesis was a useful tool for personal reflection. She wasn't convinced, so I asked her what she thought a good way for personal reflection was, and she responded \"talking to people.\" ":[{"content":"Talking to Emma Salinas, I tried convincing her that exegesis was a useful tool for personal reflection. She wasn't convinced, so I asked her what she thought a good way for personal reflection was, and she responded \"talking to people.\"","parent":"posts/untitled-9-24-2021.txt","score":0.9999999999999998},{"content":"[[Why I made exegesis]]","parent":"posts/Reflections on exegesis-10-7-2020.txt","score":0.8955709373911598},{"content":"Continue working on exegesis (and maybe some other personal projects)","parent":"posts/Goals for Spring Quarter-3-17-2021.txt","score":0.8917830224483575},{"content":"Having done this daily exegesis braindump [[journal]] thing for a bit, I think there's something of value to her response. I get down my thoughts *easier* in my journal posts than I do in my private exegesis posts.","parent":"posts/untitled-9-24-2021.txt","score":0.8898915304563182},{"content":"In writing this essay, I checked everything tagged \"exegesis\" and \"personal-reflection\" in exegesis. I didn't tag those thoughts for the purpose of writing this essay, they were written down spontaneously. That they have helped me write this essay is serendipitous.","parent":"posts/Second Brains-2-13-2021.txt","score":0.8866805146703689},{"content":"I want to try something: just posting a mind dump on [[exegesis]] every morning. I've had a theory for a while now that the best use case for exegesis is journaling, and this would be a good way to put it to the test. It will also be a good way for me to share my ideas with the world.","parent":"posts/untitled-9-20-2021.txt","score":0.8834254402813035},{"content":"This is a pitch on why investing in exegesis is a good idea.","parent":"posts/exegesis pitch-2-4-2021.txt","score":0.875844932669008},{"content":"Directly relevant to exegesis, I was just speaking earlier about making social [[tools for thought]]. An interesting question to consider while creating this new social [[exegesis]]: How do I avoid making an echo-chamber platform susceptible to Curtis' critique, while fulfilling Fischer's vision for a web that can \"generate new discourse networks that have no correlate in the social field outside cyberspace?\" [[exegesis]] [[questions]] [[quotes]] [[Capitalist-Realism]] [[tools for thought]]","parent":"posts/untitled-9-20-2021.txt","score":0.8757592312480974},{"content":"I started building exegesis because I've struggled my entire life to organize my thoughts - see [[Why I made exegesis]] for more information.","parent":"posts/exegesis pitch-2-4-2021.txt","score":0.8754567469557919},{"content":"What is the point of exegesis then? The point is serendipity - it's a place for me to capture little scraps of thought - ideas, feelings, anything that comes to you at the moment.","parent":"posts/Second Brains-2-13-2021.txt","score":0.8753874068979317}],"That was an interesting reply, and it really got me thinking. She said something along the lines of [[twitter]] being her favorite [[tools for thought]]. ":[{"content":"That was an interesting reply, and it really got me thinking. She said something along the lines of [[twitter]] being her favorite [[tools for thought]].","parent":"posts/untitled-9-24-2021.txt","score":1.0000000000000002},{"content":"\"One of my perennial complaints about the current crop of “tools for thought” has been that most of them aren’t really about thinking per se, just about improving memory. We can take down information into apps like Roam Research or Notion and recall them easily later, but it’s an overstatement to call them tools for thought. Recollection is such a small, basic part of thinking! There is so much more to thinking than simply remembering something accurately. I think we can acknowledge the benefits these apps bring while also admitting that better tools for thought should help us do more with ideas than just remember and recall.\" [[quotes]] [[Linus Lee]] [[tools for thought]]","parent":"posts/On tools for thought: knowledge management vs creativity-8-27-2021.txt","score":0.8918057922023904},{"content":"Having done this daily exegesis braindump [[journal]] thing for a bit, I think there's something of value to her response. I get down my thoughts *easier* in my journal posts than I do in my private exegesis posts.","parent":"posts/untitled-9-24-2021.txt","score":0.887572736775918},{"content":"Talking to Emma Salinas, I tried convincing her that exegesis was a useful tool for personal reflection. She wasn't convinced, so I asked her what she thought a good way for personal reflection was, and she responded \"talking to people.\"","parent":"posts/untitled-9-24-2021.txt","score":0.870804247213313},{"content":"In [[On tools for thought: knowledge management vs creativity]], I argue that the main value add of [[tools for thought]] is that they enable [[personal-reflection]] and creativity, not that they help us manage knowledge. However, I think to actually capture this potential, [[tools for thought]] have to be social. This will be a big focus for [[exegesis]] moving forwards. [[devlog]]","parent":"posts/untitled-9-24-2021.txt","score":0.8697608683020355},{"content":"The internet raised an entire generation to think nonlinearly, and it is only recently that tools for thinking have caught up.","parent":"posts/Why I made exegesis-2-28-2021.txt","score":0.8597114937694239},{"content":"[[Quine]] believes many different ontologies are worth exploring, and that multiple can be fundamental in their own ways. [[metaphysics]]","parent":"posts/untitled-1-4-2022.txt","score":0.8570686892934142},{"content":"Directly relevant to exegesis, I was just speaking earlier about making social [[tools for thought]]. An interesting question to consider while creating this new social [[exegesis]]: How do I avoid making an echo-chamber platform susceptible to Curtis' critique, while fulfilling Fischer's vision for a web that can \"generate new discourse networks that have no correlate in the social field outside cyberspace?\" [[exegesis]] [[questions]] [[quotes]] [[Capitalist-Realism]] [[tools for thought]]","parent":"posts/untitled-9-20-2021.txt","score":0.8549840950357834},{"content":"Tools for creative thought","parent":"posts/On tools for thought: knowledge management vs creativity-8-27-2021.txt","score":0.853687650246633},{"content":"If I start an exegesis brain dump (what I call my [[journal]] entries when I post them to twitter) and post it, it makes me more likely to continue writing in it throughout the day. Once I start writing, more thoughts and ideas come to me. It's as if my brain suddenly realizes there's an outlet for thoughts, and so it generates more of them. Having good conversations has a similar effect. [[writing]] [[personal-reflection]]","parent":"posts/untitled-10-1-2021.txt","score":0.8508089116533191}],"Thinking as social":[{"content":"Thinking as social","parent":"posts/untitled-9-24-2021.txt","score":1},{"content":"In [[On tools for thought: knowledge management vs creativity]], I argue that the main value add of [[tools for thought]] is that they enable [[personal-reflection]] and creativity, not that they help us manage knowledge. However, I think to actually capture this potential, [[tools for thought]] have to be social. This will be a big focus for [[exegesis]] moving forwards. [[devlog]]","parent":"posts/untitled-9-24-2021.txt","score":0.8825129425033845},{"content":"Directly relevant to exegesis, I was just speaking earlier about making social [[tools for thought]]. An interesting question to consider while creating this new social [[exegesis]]: How do I avoid making an echo-chamber platform susceptible to Curtis' critique, while fulfilling Fischer's vision for a web that can \"generate new discourse networks that have no correlate in the social field outside cyberspace?\" [[exegesis]] [[questions]] [[quotes]] [[Capitalist-Realism]] [[tools for thought]]","parent":"posts/untitled-9-20-2021.txt","score":0.8683746707267578},{"content":"However, the world has been designed for the first kind of thinking. So far,  our institutions and our tools have been designed for linear thought, not non-linear thought - not necessarily out of malice, but because our tools for organizing information (books) were stuck being linear for so long. As a result of this, non-linear thinkers have developed a kind of bad conscience - we view disorganized thinking as a problem to remedy. We build tools to rid ourselves of nonlinear thinking, never to embrace it.","parent":"posts/Why I made exegesis-2-28-2021.txt","score":0.868262738973883},{"content":"Here's a radical statement: All applications should be tools for thought. Facebook should be a tool for keeping up with friends, Instagram should be a tool for browsing and sharing photographs. [[tools for thought]] [[Manifesto]]","parent":"posts/Controlling what you see-6-23-2021.txt","score":0.8667718454054663},{"content":"The internet raised an entire generation to think nonlinearly, and it is only recently that tools for thinking have caught up.","parent":"posts/Why I made exegesis-2-28-2021.txt","score":0.8651758799741247},{"content":"\"One of my perennial complaints about the current crop of “tools for thought” has been that most of them aren’t really about thinking per se, just about improving memory. We can take down information into apps like Roam Research or Notion and recall them easily later, but it’s an overstatement to call them tools for thought. Recollection is such a small, basic part of thinking! There is so much more to thinking than simply remembering something accurately. I think we can acknowledge the benefits these apps bring while also admitting that better tools for thought should help us do more with ideas than just remember and recall.\" [[quotes]] [[Linus Lee]] [[tools for thought]]","parent":"posts/On tools for thought: knowledge management vs creativity-8-27-2021.txt","score":0.8628070540442624},{"content":"Maybe Computer Science is a social science","parent":"posts/untitled-10-11-2021.txt","score":0.8589117991488237},{"content":"Tools for creative thought","parent":"posts/On tools for thought: knowledge management vs creativity-8-27-2021.txt","score":0.857705382158119},{"content":"I had some interesting ideas this morning on exegesis. The future of [[tools for thought]] should be social, and maybe people and profiles should be first order features in exegesis. Let me clarify what I mean by this. Right now, exegesis' model is very simple: you have pages, and you have tags that you can apply to pages and parts of pages. If there's a tag that has the same title as a page, clicking the tag will lead you to the page, and the page will show everywhere it's been linked. Simple, basic, backlinking. [[exegesis]] [[ideas]] [[tools for thought]]","parent":"posts/untitled-9-20-2021.txt","score":0.8576178324986911}],"Having done this daily exegesis braindump [[journal]] thing for a bit, I think there's something of value to her response. I get down my thoughts *easier* in my journal posts than I do in my private exegesis posts.":[{"content":"Having done this daily exegesis braindump [[journal]] thing for a bit, I think there's something of value to her response. I get down my thoughts *easier* in my journal posts than I do in my private exegesis posts.","parent":"posts/untitled-9-24-2021.txt","score":1},{"content":"If I start an exegesis brain dump (what I call my [[journal]] entries when I post them to twitter) and post it, it makes me more likely to continue writing in it throughout the day. Once I start writing, more thoughts and ideas come to me. It's as if my brain suddenly realizes there's an outlet for thoughts, and so it generates more of them. Having good conversations has a similar effect. [[writing]] [[personal-reflection]]","parent":"posts/untitled-10-1-2021.txt","score":0.9235672395576094},{"content":"I want to try something: just posting a mind dump on [[exegesis]] every morning. I've had a theory for a while now that the best use case for exegesis is journaling, and this would be a good way to put it to the test. It will also be a good way for me to share my ideas with the world.","parent":"posts/untitled-9-20-2021.txt","score":0.9156947457519865},{"content":"What do I use [[exegesis]] for? I use it like a journal. I write down thoughts about my life, ideas that I have, things that I'd like to do, reflections on my day, etc. etc. None of these things could be called knowledge, none of them could be called rational.","parent":"posts/On tools for thought: knowledge management vs creativity-8-27-2021.txt","score":0.8936538089018978},{"content":"Talking to Emma Salinas, I tried convincing her that exegesis was a useful tool for personal reflection. She wasn't convinced, so I asked her what she thought a good way for personal reflection was, and she responded \"talking to people.\"","parent":"posts/untitled-9-24-2021.txt","score":0.8898915304563182},{"content":"That was an interesting reply, and it really got me thinking. She said something along the lines of [[twitter]] being her favorite [[tools for thought]].","parent":"posts/untitled-9-24-2021.txt","score":0.887572736775918},{"content":"I started building exegesis because I've struggled my entire life to organize my thoughts - see [[Why I made exegesis]] for more information.","parent":"posts/exegesis pitch-2-4-2021.txt","score":0.8842603794301157},{"content":"I fell into this kind of thinking while building exegesis, and it put an enormous amount of pressure on me, because it made me feel as if it wasn't just a notetaking app I was building, but a shrine for the mind. I would look at other notetaking systems like Roam Research and feel threatened - my notetaking app wasn't as powerful as theirs, therefore my mind would be weaker than theirs. Every little imperfection, every unimplemented feature, every bug felt sacrilegious - this was my second brain I was building after all. Needless to say, this led to a lot of feature creep, because my second brain had to be perfect.","parent":"posts/Second Brains-2-13-2021.txt","score":0.881540656582326},{"content":"My favorite use of [[exegesis]] is to write down ideas that I have. I write about exegesis in exegesis, and a lot of features that I've added to exegesis started as sudden thoughts that were captured in exegesis. In my experience, ideas are like seeds, and writing them down helps them grow. I might think nothing of a simple idea I capture one day, but a week later it might have renewed significance, and it could even spark new ideas.","parent":"posts/On tools for thought: knowledge management vs creativity-8-27-2021.txt","score":0.8815147019833796},{"content":"What is the point of exegesis then? The point is serendipity - it's a place for me to capture little scraps of thought - ideas, feelings, anything that comes to you at the moment.","parent":"posts/Second Brains-2-13-2021.txt","score":0.8808206219146146}],"In [[On tools for thought: knowledge management vs creativity]], I argue that the main value add of [[tools for thought]] is that they enable [[personal-reflection]] and creativity, not that they help us manage knowledge. However, I think to actually capture this potential, [[tools for thought]] have to be social. This will be a big focus for [[exegesis]] moving forwards. [[devlog]]":[{"content":"In [[On tools for thought: knowledge management vs creativity]], I argue that the main value add of [[tools for thought]] is that they enable [[personal-reflection]] and creativity, not that they help us manage knowledge. However, I think to actually capture this potential, [[tools for thought]] have to be social. This will be a big focus for [[exegesis]] moving forwards. [[devlog]]","parent":"posts/untitled-9-24-2021.txt","score":0.9999999999999998},{"content":"I had some interesting ideas this morning on exegesis. The future of [[tools for thought]] should be social, and maybe people and profiles should be first order features in exegesis. Let me clarify what I mean by this. Right now, exegesis' model is very simple: you have pages, and you have tags that you can apply to pages and parts of pages. If there's a tag that has the same title as a page, clicking the tag will lead you to the page, and the page will show everywhere it's been linked. Simple, basic, backlinking. [[exegesis]] [[ideas]] [[tools for thought]]","parent":"posts/untitled-9-20-2021.txt","score":0.9334015747868434},{"content":"Tools for creative thought","parent":"posts/On tools for thought: knowledge management vs creativity-8-27-2021.txt","score":0.9147752797711495},{"content":"On the other hand, creative tools for thought are by definition focused on something you could never find on Google - your ideas and experiences. If you want to link your life experiences to your ideas and other content, you're going to have to write it down. For this reason, I think the future of backlink focused writing apps should be focused on creative output, not Personal Knowledge Management. It's the direction I'll be taking [[exegesis]] in the future.","parent":"posts/On tools for thought: knowledge management vs creativity-8-27-2021.txt","score":0.9142995254059525},{"content":"I strongly believe tools for thought have leaned too much towards knowledge management and underindexed on enabling creatives. The latest advances in the space - backlinks, transclusion, spatial interfaces, language models/NLP - will be useful for knowledge work, but they will prove even more powerful in the hands of creatives.","parent":"posts/exegesis pitch-2-4-2021.txt","score":0.9125207686476168},{"content":"\"One of my perennial complaints about the current crop of “tools for thought” has been that most of them aren’t really about thinking per se, just about improving memory. We can take down information into apps like Roam Research or Notion and recall them easily later, but it’s an overstatement to call them tools for thought. Recollection is such a small, basic part of thinking! There is so much more to thinking than simply remembering something accurately. I think we can acknowledge the benefits these apps bring while also admitting that better tools for thought should help us do more with ideas than just remember and recall.\" [[quotes]] [[Linus Lee]] [[tools for thought]]","parent":"posts/On tools for thought: knowledge management vs creativity-8-27-2021.txt","score":0.9100019061200512},{"content":"Directly relevant to exegesis, I was just speaking earlier about making social [[tools for thought]]. An interesting question to consider while creating this new social [[exegesis]]: How do I avoid making an echo-chamber platform susceptible to Curtis' critique, while fulfilling Fischer's vision for a web that can \"generate new discourse networks that have no correlate in the social field outside cyberspace?\" [[exegesis]] [[questions]] [[quotes]] [[Capitalist-Realism]] [[tools for thought]]","parent":"posts/untitled-9-20-2021.txt","score":0.9064252476397882},{"content":"I originally thought of [[exegesis]] as a tool for rational thought as well - I wanted to use it to organize my notes, and hoped it would make me better at retaining information at school. After more than a year of using it, it turns out I almost never use it for either of those things.","parent":"posts/On tools for thought: knowledge management vs creativity-8-27-2021.txt","score":0.8952070636213404},{"content":"What do I use [[exegesis]] for? I use it like a journal. I write down thoughts about my life, ideas that I have, things that I'd like to do, reflections on my day, etc. etc. None of these things could be called knowledge, none of them could be called rational.","parent":"posts/On tools for thought: knowledge management vs creativity-8-27-2021.txt","score":0.8950258736197211},{"content":"My favorite use of [[exegesis]] is to write down ideas that I have. I write about exegesis in exegesis, and a lot of features that I've added to exegesis started as sudden thoughts that were captured in exegesis. In my experience, ideas are like seeds, and writing them down helps them grow. I might think nothing of a simple idea I capture one day, but a week later it might have renewed significance, and it could even spark new ideas.","parent":"posts/On tools for thought: knowledge management vs creativity-8-27-2021.txt","score":0.8938723026646356}]}