{"": [{"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 0.6012972593307495}, {"content": "~", "parent": "The making of Nomad Hypertext.txt", "score": 0.6013116240501404}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 0.6013116240501404}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 0.6013116240501404}, {"content": "~", "parent": "Fragments.txt", "score": 0.6013129949569702}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 0.6013135506879113}, {"content": "~", "parent": "Second Brains.txt", "score": 0.6013180017471313}, {"content": "~", "parent": "Fragments.txt", "score": 0.6013447046279907}, {"content": "~", "parent": "untitled-1-4-2022.txt", "score": 0.6013447046279907}, {"content": "~", "parent": "The making of Nomad Hypertext.txt", "score": 0.6013447046279907}], "At the Recurse center, grinding leetcode and working on nomad hypertext, a collection of interface ideas that center around local-first notetaking powered by semantic search and AI. ": [{"content": "At the Recurse center, grinding leetcode and working on nomad hypertext, a collection of interface ideas that center around local-first notetaking powered by semantic search and AI. ", "parent": "NOW-Jan-05-2024.txt", "score": 5.364418029785156e-07}, {"content": "I was greatly inspired by two blogposts. The first, [Hyperlink Maximalism](https://thesephist.com/posts/hyperlink/) by Linus Lee talks about generating hyperlinks automatically between documents, and comes with a [demo](https://notation.app) that made a deep impression on me. To be honest, nomad hypertext is just Linus' demo using semantic search instead of full text search.", "parent": "What is Nomad Hypertext.txt", "score": 0.4060177206993103}, {"content": "Nomad Hypertext is a writing app built around semantic search. ", "parent": "What is Nomad Hypertext.txt", "score": 0.4319941997528076}, {"content": "To be frank, I made some regrettable engineering decisions while making Nomad Hypertext. I built this during my Recurse Center batch and was focused on getting a working prototype out, so some shortcuts were taken. Nevertheless, reflecting back, I would say these shortcuts were not worth it. ", "parent": "The making of Nomad Hypertext.txt", "score": 0.4399590492248535}, {"content": "I've found writing down tasks and decomposing them into smaller ones helps. Right now, I do this in [[exegesis]], which honestly feels somewhat suboptimal. I also have another side project called [https://focusmachine.app/](https://focusmachine.app/) to remind me of what I'm currently supposed to be focusing - it's really stupid, it just asks you what you want to work on and then spams you with a reminder to focus on that at user-inputted interval. [[focus]] [[focus-machine]] [[ideas]] [[exegesis]] ", "parent": "untitled-9-24-2021.txt", "score": 0.4600117802619934}, {"content": "However, when building Yurt, the static site builder for nomad hypertext, I found myself repeating a lot of logic. I found myself wanting to add features to the indexing engine, like being able to use cloud providers instead of local models (because doing all this processing locally can take ages!). In the future, I might want to use multimodal models, so I can see similarity between images, text, and audio. ", "parent": "The making of Nomad Hypertext.txt", "score": 0.48186802864074707}, {"content": "Tagging this all meta-acropolis, an edtech project I'm in the early stages of working on. Don't have any code for it, just ideas, but I plan on putting something together soon\u2122. [[meta-acropolis]] [[ideas]] ", "parent": "untitled-9-21-2021.txt", "score": 0.48307645320892334}, {"content": "Nomad Hypertext", "parent": "What is Nomad Hypertext.txt", "score": 0.489152604536206}, {"content": "Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?  ", "parent": "The AI-first operating system of the future.txt", "score": 0.49587541818618774}, {"content": "I've been working on notetaking apps for years now. I starting working on the first one on the bus back from my internship. I had an idea for a simple interaction - users should be able to highlight a piece of text, then add tags to that text. I distinctly remember thinking to myself, \"That should be a piece of cake! I should be able to finish it during the 45 minute bus  ride.\"", "parent": "Plaintext is your best friend.txt", "score": 0.49992436170578003}], "Playing a lot of guitar. Thinking about how fundamental rhythm is to the guitar, even when playing lead lines. Thinking about how you can approach solos like a series of improvised rhythmic riffs. Listening to a lot of King Crimson. ": [{"content": "Playing a lot of guitar. Thinking about how fundamental rhythm is to the guitar, even when playing lead lines. Thinking about how you can approach solos like a series of improvised rhythmic riffs. Listening to a lot of King Crimson. ", "parent": "NOW-Jan-05-2024.txt", "score": -3.5762786865234375e-07}, {"content": "I fell in love with playing the guitar because it rewards this lack of an attention span. You can copy a riff in minutes. You can create a new riff in minutes. Picking up a guitar puts me in an instant flow state, because I can just screw around and play with ideas instantly. It feels like a REPL for musical ideas.", "parent": "Fragments.txt", "score": 0.4357377886772156}, {"content": "I love how physical playing the guitar is. I love the tactile sensation of steel strings digging into my fingers. I love how it requires me to coordinate all of my senses together. I love being able to experiment with small, self contained ideas with looper pedal. I love how it lets you map musical ideas into your head into concrete muscle memory, and I love that this muscle memory is *portable* between different keys and different songs.  ", "parent": "NOW PAGE.txt", "score": 0.4613181948661804}, {"content": "I want to get better at music. I went to [[piano]] classes as a kid and never really enjoyed them or took them seriously. Now I regret it. I also picked up guitar over quarantine, and want to get into a regular practice regimen for both of these instruments. For piano, I want to learn jazz, and how to improvise - I can't say I have much interest in building up my classical repertoire. For guitar, my current plan is to learn the blues, because I hear that's the root of many musical genres, and maybe branch off into rock or jazz later. A short term goal for both instruments is to familiarize myself with their scales. ", "parent": "Reflections for the New Year.txt", "score": 0.4718591570854187}, {"content": "Sitting the UC Davis MU, listening to King Crimson.", "parent": "untitled-9-21-2021.txt", "score": 0.48614734411239624}, {"content": "I have not really settled into a good practice schedule for either piano or guitar. For the past couple of weeks, I've neglected guitar after moving my electric keyboard into my room, though my piano progress has hardly been good either - I have spent the past couple months playing the same pentatonic licks over Autumn Leaves. My goal for both instruments is to learn a couple of jazz standards with my housemates so we can jam together more. ", "parent": "Goals for Spring Quarter.txt", "score": 0.49987226724624634}, {"content": "I might not really care for making music, but learning how to play the guitar showed me what I'm looking for from a creative process. If I can form a creative process that feels like playing the guitar and outputs software, that would be very rewarding.", "parent": "NOW PAGE.txt", "score": 0.5085582733154297}, {"content": "Thinking about how the piano is an explicitly visual instrument (laid out for easy sight reading), while the guitar is a more tactile and auditory instrument (difficult to sight read, rewards learning by ear therefore auditory; strings literally cut into your fingers, therefore tactile). ", "parent": "NOW-Jan-05-2024.txt", "score": 0.5327603816986084}, {"content": "Get good at guitar", "parent": "Goals for Spring Quarter.txt", "score": 0.5334575176239014}, {"content": "I enjoy the process of sitting with my guitar, generating riff ideas on the fly, soloing over 8 bar progressions on my looper, but I'm not excited at all about creating a song. In many ways, my feelings about software are kind of the opposite. I have mixed, love/hate feelings about the process of writing software (reading documentation, chasing down bugs, writing tests, etc), but I feel incredibly excited about the end product. ", "parent": "NOW PAGE.txt", "score": 0.5371813178062439}], "Thinking about Marshall McLuhan and the Medium is the Message. More specifically, thinking about his concept of sensory ratios, and how biased we are towards the visual sense. ": [{"content": "Thinking about Marshall McLuhan and the Medium is the Message. More specifically, thinking about his concept of sensory ratios, and how biased we are towards the visual sense. ", "parent": "NOW-Jan-05-2024.txt", "score": 5.364418029785156e-07}, {"content": "From pg 28 of Understanding Media by Marshall McLuhan", "parent": "Fragments.txt", "score": 0.36979222297668457}, {"content": "My reading life has been totally fragmented. I am still obsessed with The Medium is the Massage and the idea of sensory ratios, but I haven't found reading more media theory to be particularly rewarding. I've reread bits and pieces of Underground Man and some Milan Kundera, and I've been reading a bit of Montaigne. All of it has been interesting, but none of the ideas have really stuck with me to the level of obsession.", "parent": "NOW PAGE.txt", "score": 0.4861997365951538}, {"content": "Right now I'm listening to [Something About Us by Daft Punk](https://open.spotify.com/track/1NeLwFETswx8Fzxl2AFl91?si=bc9f206d498e4fdd), which might have something to do with how I'm feeling. What if words aren't enough to express a certain feeling? What if it's only the conjunction of words, images, videos and music, combined not in a determinate order like a moving picture or video, but presented indeterminately, in some form resembling a moodboard? That's the thesis behind [[synesthesia]] (a project I'm working on that will be closely integrated with [[exegesis]]).", "parent": "untitled-9-30-2021.txt", "score": 0.5476740598678589}, {"content": "The auteur believes otherwise. Language, he says, cannot communicate an idea without botching it. And if communicating an idea were not bad enough, mediating between multiple ideas using as flawed a tool as language is immeasurably worse. ", "parent": "On auteurs and language.txt", "score": 0.578173816204071}, {"content": "Directly relevant to exegesis, I was just speaking earlier about making social [[tools for thought]]. An interesting question to consider while creating this new social [[exegesis]]: How do I avoid making an echo-chamber platform susceptible to Curtis' critique, while fulfilling Fischer's vision for a web that can \"generate new discourse networks that have no correlate in the social field outside cyberspace?\" [[exegesis]] [[questions]] [[quotes]] [[Capitalist-Realism]] [[tools for thought]] ", "parent": "untitled-9-20-2021.txt", "score": 0.5969926118850708}, {"content": "Thinking as social", "parent": "untitled-9-24-2021.txt", "score": 0.5995281338691711}, {"content": "Users should have complete control over what they see. I'm not saying algorithmic feeds don't have their place, but they should be something users opt in to. Andy [[Matuschak]] coined the idea of \"[programmable attention](https://notes.andymatuschak.org/zJrfPCbY7GcpV9asEc8NTVzXTAV4TvRFMuY6)\" as something [[tools for thought]] could enable. I will say that this already exists, only in the opposite, sinister sense - right now it's the platform programming your attention, not you. ", "parent": "Controlling what you see.txt", "score": 0.6023331880569458}, {"content": "TikTok has normalized tying music to everything - political messages, dances, jokes, short videos, etc. etc. Aiming to help do something similar with [[synesthesia]], but focused more on explicitly creative output. ", "parent": "untitled-9-20-2021.txt", "score": 0.6100133061408997}, {"content": "However, I think there is something understated here, a point he makes briefly that I think is worth exploring further - that what ontology we adopt corresponds to \"our various interests and purposes.\"", "parent": "untitled-1-4-2022.txt", "score": 0.6104310750961304}], "Thinking about how the piano is an explicitly visual instrument (laid out for easy sight reading), while the guitar is a more tactile and auditory instrument (difficult to sight read, rewards learning by ear therefore auditory; strings literally cut into your fingers, therefore tactile). ": [{"content": "Thinking about how the piano is an explicitly visual instrument (laid out for easy sight reading), while the guitar is a more tactile and auditory instrument (difficult to sight read, rewards learning by ear therefore auditory; strings literally cut into your fingers, therefore tactile). ", "parent": "NOW-Jan-05-2024.txt", "score": -1.1920928955078125e-07}, {"content": "I love how physical playing the guitar is. I love the tactile sensation of steel strings digging into my fingers. I love how it requires me to coordinate all of my senses together. I love being able to experiment with small, self contained ideas with looper pedal. I love how it lets you map musical ideas into your head into concrete muscle memory, and I love that this muscle memory is *portable* between different keys and different songs.  ", "parent": "NOW PAGE.txt", "score": 0.40539753437042236}, {"content": "I fell in love with playing the guitar because it rewards this lack of an attention span. You can copy a riff in minutes. You can create a new riff in minutes. Picking up a guitar puts me in an instant flow state, because I can just screw around and play with ideas instantly. It feels like a REPL for musical ideas.", "parent": "Fragments.txt", "score": 0.48742419481277466}, {"content": "I might not really care for making music, but learning how to play the guitar showed me what I'm looking for from a creative process. If I can form a creative process that feels like playing the guitar and outputs software, that would be very rewarding.", "parent": "NOW PAGE.txt", "score": 0.5186331272125244}, {"content": "I have not really settled into a good practice schedule for either piano or guitar. For the past couple of weeks, I've neglected guitar after moving my electric keyboard into my room, though my piano progress has hardly been good either - I have spent the past couple months playing the same pentatonic licks over Autumn Leaves. My goal for both instruments is to learn a couple of jazz standards with my housemates so we can jam together more. ", "parent": "Goals for Spring Quarter.txt", "score": 0.5242650508880615}, {"content": "Playing a lot of guitar. Thinking about how fundamental rhythm is to the guitar, even when playing lead lines. Thinking about how you can approach solos like a series of improvised rhythmic riffs. Listening to a lot of King Crimson. ", "parent": "NOW-Jan-05-2024.txt", "score": 0.5327603816986084}, {"content": "I want to get better at music. I went to [[piano]] classes as a kid and never really enjoyed them or took them seriously. Now I regret it. I also picked up guitar over quarantine, and want to get into a regular practice regimen for both of these instruments. For piano, I want to learn jazz, and how to improvise - I can't say I have much interest in building up my classical repertoire. For guitar, my current plan is to learn the blues, because I hear that's the root of many musical genres, and maybe branch off into rock or jazz later. A short term goal for both instruments is to familiarize myself with their scales. ", "parent": "Reflections for the New Year.txt", "score": 0.5443285703659058}, {"content": "I don't actually find music to be more fulfilling than programming. I got into playing the guitar mostly by accident and to be honest I am much better at the guitar than I am at programming, but playing the guitar was never my dream growing up. There are software ideas that I am excited about and obsessed with. I don't really feel the same way about music.", "parent": "NOW PAGE.txt", "score": 0.551484227180481}, {"content": "The compromise that I've arrived at, and that I've tried so far with a decent amount of success, is to draw with my preferred medium (pen), in my own style, while also using a reference. I use the reference for the pose and some of the details, and use my imagination to make up the rest. This is infinitely more interesting for me, and doesn't feel like a dreary technical exercise. I've also given up on using pencil, or charcoal, or anything except pen. I used to harbor a lot of guilt over this, because shouldn't an artist be able to use any medium? Of course, this is ridiculous, it'd be like asking a musician to be familiar with every instrument. It makes far more sense to get really good with one medium than to be mediocre with multiple (feeling some cognitive dissonance here with my desire to learn both the [[piano]] and the [[guitar]]...). Of course, professional artists (and musicians) really should be learning multiple mediums, but I have no aspiration to be professional at either, only to have some fun. [[drawing]] [[piano]] [[guitar]] ", "parent": "Reflections for the New Year.txt", "score": 0.5720778703689575}, {"content": "There is at least one creative medium for which this is not true, however, and that is programming. Here is a unique and strange property of programming: Making tools to program better itself involves programming. This is not true for music or art - the process of making a guitar is not the art of playing the guitar, the process of making paints is not the art of painting, and while luthiers and paint-makers are certainly artists in their own right (and are often good at playing the guitar and painting, respectively), they practice an art that is distinct from the art that they enable. ", "parent": "Prometheus.txt", "score": 0.5721831917762756}], "Thinking about offline first software, and how offline, open source AI models combined with CRDTs might offer the opportunity to create offline-first software that is not only more private than cloud software, but also *better.*": [{"content": "Thinking about offline first software, and how offline, open source AI models combined with CRDTs might offer the opportunity to create offline-first software that is not only more private than cloud software, but also *better.*", "parent": "NOW-Jan-05-2024.txt", "score": 1.1920928955078125e-07}, {"content": "My hope is that local-first AI and CRDTs enable us to create decentralized, local first software that will stand the tests of time. This is why I'm so bullish on local first applications, plain text, file systems, and unix - they have already stood the tests of time, and will likely continue to. They are deeply lindy in a way that mobile and cloud computing are not. ", "parent": "Generational Computing.txt", "score": 0.3437291979789734}, {"content": "Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?  ", "parent": "The AI-first operating system of the future.txt", "score": 0.40359723567962646}, {"content": "The future of rational tools for thought and PKMs probably look a lot less like [[roam]], and [more like projects that use AI to automatically link subjects for you](https://thesephist.com/posts/browser/). 2", "parent": "On tools for thought: knowledge management vs creativity.txt", "score": 0.5205336809158325}, {"content": "This is not groundbreaking news, but it's groundbreaking for me. I started my software engineering career writing code with cloud applications in mind, and the idea that you can ship cool projects without running database migrations or doing extensive backtesting against your monolith *is* groundbreaking to me. In college I wanted my own blog and instead of getting a static site generator I built out a cloud application with NextJS, PostgreSQL and Heroku. I did learn a lot and it helped me land my first internship, but now it strikes me as an incredibly wrong minded approach. ", "parent": "NOW PAGE.txt", "score": 0.5339614152908325}, {"content": "It uses neural search to show you how your ideas are connected to each other. This is done offline and privately on your computer, entirely on your machine. ", "parent": "What is Nomad Hypertext.txt", "score": 0.5345326662063599}, {"content": "Thinking about filesystems and how they have been unfairly maligned. If we put more effort into designing novel interfaces for filesystems, it would allow more people to exercise agency over their own data. Cloud software and mobile computing have killed an important part of computing literacy. ", "parent": "NOW-Jan-05-2024.txt", "score": 0.5489293336868286}, {"content": "As I looked further into these tools, I found that some had taken to calling them [Second Brains](https://fortelabs.co/blog/basboverview/). I thought this was incredibly exciting. The term sounds cyberpunk; building a \"second brain\" sounds way cooler than building a \"note taking app.\" At the same time, something about it unsettled me. ", "parent": "Second Brains.txt", "score": 0.5570701360702515}, {"content": "Cloud software lacks the longetivity to enable this dream. Modern day cloud applications take huge amounts of manpower and capital to maintain, which means they are subject to the whims of markets. Established products like Google Docs are unlikely to shut down, but they are still subject to market pressures, and you will inevitably log in one day to find the entire interface revamped, or worse, your favorite feature nerfed. Over a century or two, how confident are you that your data and applications will still be usable?", "parent": "Generational Computing.txt", "score": 0.5600494146347046}, {"content": "However, when building Yurt, the static site builder for nomad hypertext, I found myself repeating a lot of logic. I found myself wanting to add features to the indexing engine, like being able to use cloud providers instead of local models (because doing all this processing locally can take ages!). In the future, I might want to use multimodal models, so I can see similarity between images, text, and audio. ", "parent": "The making of Nomad Hypertext.txt", "score": 0.568581223487854}], "Thinking about filesystems and how they have been unfairly maligned. If we put more effort into designing novel interfaces for filesystems, it would allow more people to exercise agency over their own data. Cloud software and mobile computing have killed an important part of computing literacy. ": [{"content": "Thinking about filesystems and how they have been unfairly maligned. If we put more effort into designing novel interfaces for filesystems, it would allow more people to exercise agency over their own data. Cloud software and mobile computing have killed an important part of computing literacy. ", "parent": "NOW-Jan-05-2024.txt", "score": 5.960464477539063e-08}, {"content": "The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people. ", "parent": "The AI-first operating system of the future.txt", "score": 0.3833954930305481}, {"content": "Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?  ", "parent": "The AI-first operating system of the future.txt", "score": 0.38429349660873413}, {"content": "The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.", "parent": "The AI-first operating system of the future.txt", "score": 0.40338897705078125}, {"content": "Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.", "parent": "The AI-first operating system of the future.txt", "score": 0.40554219484329224}, {"content": "In my view, the whole movement of [[tools for thought]] (Roam, personal knowledge management systems, etc, etc.) is to make computers help us think better. That was the point from the very start, it was what Steve Jobs meant when he called the computer \"a bicycle for the mind.\" In the last decade, we've seen the very opposite - the use of the computer as an extractive tool, a weapon to siphon attention and harvest data. ", "parent": "Controlling what you see.txt", "score": 0.48798996210098267}, {"content": "I hate how flat computer interfaces are. I hate how disembodied sitting in front of a screen makes me feel. I hate straining my eyes to dig through a mountain of text, while my other senses lay unused and completely idle. I hate gigantic codebases with massive piles of dependencies and hour long build processes, where you must test every little idea you have against a mountain of assumptions to make sure it doesn't break anything.", "parent": "NOW PAGE.txt", "score": 0.5019136071205139}, {"content": "My hope is that local-first AI and CRDTs enable us to create decentralized, local first software that will stand the tests of time. This is why I'm so bullish on local first applications, plain text, file systems, and unix - they have already stood the tests of time, and will likely continue to. They are deeply lindy in a way that mobile and cloud computing are not. ", "parent": "Generational Computing.txt", "score": 0.5063439011573792}, {"content": "Some thoughts on my Operating Systems course.", "parent": "untitled-10-11-2021.txt", "score": 0.528825044631958}, {"content": "With cloud software, our digital lives lack this permanence. Startups shut down left and right, products get split into multiple products or merged together, interfaces get redesigned and their redesigns get redesigned, all at the whims of the markets or feuding product managers. This is not a stable foundation to build anything lasting on top of.", "parent": "Generational Computing.txt", "score": 0.5309168696403503}]}