{"exegesis has taken about a year to make. Including the development of its predecessor, YANA, it's taken about a year and a half. When I started making YANA the summer after my freshman year, I thought it'd be a small project; just a little utility for me to track my thoughts. I had no idea it'd balloon into such a large endeavor.":[{"content":"exegesis has taken about a year to make. Including the development of its predecessor, YANA, it's taken about a year and a half. When I started making YANA the summer after my freshman year, I thought it'd be a small project; just a little utility for me to track my thoughts. I had no idea it'd balloon into such a large endeavor.","parent":"posts/Reflections on exegesis-10-7-2020.txt","score":1.0000000000000002},{"content":"Before working on exegesis, I released a proof-of-concept called [YANA](https://yananotes.com/). It made the front page of [ProductHunt](https://www.producthunt.com/posts/yana), accrued almost 400 users, and put a few enthusiastic emails in my inbox. Because YANA was built with a rudimentary text engine that I wanted to upgrade, I decided to start over - the product of which is exegesis. Though it is not actively maintained, there are still a dozen or so active YANA users.","parent":"posts/exegesis pitch-2-4-2021.txt","score":0.9311706122755998},{"content":"Why did it take so long? Part of it is just a lack of experience. While making exegesis, I changed the database schema countless times, wrote dozens of migrations, accidentally wiped my database once (thank God for RDS backups), and rewrote the backend from scratch 2 months before release. There was also a good amount of feature creep. Whenever I thought I was close to finished, something unexpected would pop up - I started writing this essay 3 months before I actually released exegesis. Whatever the reason, if you count development time on the predecessor to exegesis, I've spent almost a tenth of my life building this. The entire project clocks in at a couple thousand lines of code. It is the largest, most complex, and most difficult thing I have built so far in my life.  [The last time I worked on a project this long, it was the first video game I made back in my senior year of high school.](https://medium.com/@nichwch/machine-gods-devlog-1-166dff474366) Even then, it was really about 6 months of development total, with a huge gap in between because of school, and it was all made with no-code game development tools, because back then the idea of using actual code terrified me. [[exegesis]] [[personal-reflection]]","parent":"posts/Reflections on exegesis-10-7-2020.txt","score":0.9133716357350031},{"content":"The first year of this strange new decade is over. Personally, however, the end of the this year is less significant to me than the release of [[exegesis]]. A lot of my time was spent developing this project over the last year, and now that it's finished, I have a lot more time to spend on other activities. I'm not really big on resolutions, but I do want to reflect a little on everything. Of course, I anticipate [[exegesis]] will help me organize my new endeavors.","parent":"posts/Reflections for the New Year-1-2-2021.txt","score":0.8959490357225816},{"content":"Continue working on exegesis (and maybe some other personal projects)","parent":"posts/Goals for Spring Quarter-3-17-2021.txt","score":0.8942664362330686},{"content":"I started building exegesis because I've struggled my entire life to organize my thoughts - see [[Why I made exegesis]] for more information.","parent":"posts/exegesis pitch-2-4-2021.txt","score":0.88778141311302},{"content":"This was reassuring, because it meant I had made something genuinely useful. In the past, I have made things I simply had no desire to use - one example is [JAFT](https://nichwch.medium.com/what-is-jaft-f543a4fad9d7), a time tracking app I made after making YANA (the predecessor to exegesis). I stopped using it after a bit, and didn't bother renewing the domain. I don't miss JAFT at all. The fact that I did miss exegesis on the days where it wasn't operational was a good sign.","parent":"posts/Second Brains-2-13-2021.txt","score":0.8863606113024385},{"content":"[[Why I made exegesis]]","parent":"posts/Reflections on exegesis-10-7-2020.txt","score":0.8843129856583407},{"content":"In some sense exegesis gave birth to itself, because I used it to organize my ideas about exegesis. On days where exegesis was not working because I had broken something while coding it, I noticed that I could not think as clearly. Its absence was felt.","parent":"posts/Second Brains-2-13-2021.txt","score":0.8837889750646792},{"content":"Working on exegesis was a grueling affair at times. I rewrote the schema multiple times, rewrote the backend from scratch 2 months before release, chased countless UI bugs, and manually patched abandoned NPM packages. Part of it may have been due to my inexperience, but [working with ](https://nichwch.medium.com/making-yana-e3fade3f56e7)[rich text](https://medium.engineering/why-contenteditable-is-terrible-122d8a40e480) is just a [difficult task](https://twitter.com/thesephist/status/1360298464349999108), period. At one point, I considered giving up after finding a rival writing app I thought I simply couldn't compete with - I have a copy of an unfinished essay I started writing on why I had given up tucked away somewhere.","parent":"posts/Prometheus-2-13-2021.txt","score":0.8820472520629693}],"":[{"content":"Images","parent":"posts/Roadmap to exegesis' beta release-1-3-2021.txt","score":0.8755930010386553},{"content":"Edit: 1/6/2021","parent":"posts/Roadmap to exegesis' beta release-1-3-2021.txt","score":0.8686066054110362},{"content":"Conclusion","parent":"posts/exegesis pitch-2-4-2021.txt","score":0.8627111729312937},{"content":"Key Features","parent":"posts/Roadmap to exegesis' beta release-1-3-2021.txt","score":0.8621480151447609},{"content":"Building tools","parent":"posts/untitled-9-20-2021.txt","score":0.8593290080388},{"content":"Yes.","parent":"posts/exegesis pitch-2-4-2021.txt","score":0.859011141952105},{"content":"The club does 2 things.","parent":"posts/untitled-9-24-2021.txt","score":0.8589669169415844},{"content":"|___Practice Routine","parent":"posts/Roadmap to exegesis' beta release-1-3-2021.txt","score":0.8583546625772834},{"content":"Induction","parent":"posts/untitled-9-22-2021.txt","score":0.8577220980911441},{"content":"Code:","parent":"posts/Goals for Spring Quarter-3-17-2021.txt","score":0.856649564390397}],"That last project had a significant effect on me. Back in high school, I was heavily involved in Model UN and other political clubs. Making the [game](https://nichwch.itch.io/machinegods) made me realize it was making things and not winning arguments that really made me happier. It was also what convinced me that programming could be something more than rote problem solving, and even be a genuine creative medium. It was why I switched my major from Economics to Computer Science in college.[[personal-reflection]] ":[{"content":"That last project had a significant effect on me. Back in high school, I was heavily involved in Model UN and other political clubs. Making the [game](https://nichwch.itch.io/machinegods) made me realize it was making things and not winning arguments that really made me happier. It was also what convinced me that programming could be something more than rote problem solving, and even be a genuine creative medium. It was why I switched my major from Economics to Computer Science in college.[[personal-reflection]]","parent":"posts/Reflections on exegesis-10-7-2020.txt","score":0.9999999999999999},{"content":"In my teen years, I found programming and videogame development, and that became my creative outlet for a while. I found a way to scan my drawings into digital files, and for a while that was my way of combining art and programming.","parent":"posts/Fragments.txt","score":0.8834847025820698},{"content":"I stopped working on little projects. The voice in my head that would get excited by little hints of an idea was drowned out by demands that everything be in the service of something ambitious, something legible, something monetizable. I let my ambition trap me.","parent":"posts/Fragments.txt","score":0.8743881259620812},{"content":"This project, too, has had a large effect on me - you can't work on something for a year and not have it affect you. I started this project sitting in a coffee shop; now I haven't sat in one for months. I know this sounds like navel gazing, but I've worked on this project through a pandemic, civil unrest, and statewide wildfires. Now it's finished, and I almost feel a little bittersweet releasing it.","parent":"posts/Reflections on exegesis-10-7-2020.txt","score":0.8706950555592958},{"content":"These are my hobbies that I use to take a break from code related creative-work.","parent":"posts/Goals for Spring Quarter-3-17-2021.txt","score":0.8671194109457911},{"content":"The main focus here is personal projects - learning more code and writing more are auxiliary activities that help this end. First among these personal projects is [[exegesis]], but I have a number of other personal projects that I want to work on as well.","parent":"posts/Goals for Spring Quarter-3-17-2021.txt","score":0.8646136688871983},{"content":"Why did it take so long? Part of it is just a lack of experience. While making exegesis, I changed the database schema countless times, wrote dozens of migrations, accidentally wiped my database once (thank God for RDS backups), and rewrote the backend from scratch 2 months before release. There was also a good amount of feature creep. Whenever I thought I was close to finished, something unexpected would pop up - I started writing this essay 3 months before I actually released exegesis. Whatever the reason, if you count development time on the predecessor to exegesis, I've spent almost a tenth of my life building this. The entire project clocks in at a couple thousand lines of code. It is the largest, most complex, and most difficult thing I have built so far in my life.  [The last time I worked on a project this long, it was the first video game I made back in my senior year of high school.](https://medium.com/@nichwch/machine-gods-devlog-1-166dff474366) Even then, it was really about 6 months of development total, with a huge gap in between because of school, and it was all made with no-code game development tools, because back then the idea of using actual code terrified me. [[exegesis]] [[personal-reflection]]","parent":"posts/Reflections on exegesis-10-7-2020.txt","score":0.8599709575411548},{"content":"For a while, I exclusively worked on a long, serious projects. I wanted to build a billion dollar product. I wanted to be the founder of a successful startup. I wanted to write, but I wanted to write on my own platform that everybody else would also write on, that would have all the features I wanted that everybody else would love.","parent":"posts/Fragments.txt","score":0.8587159913072657},{"content":"I desperately want programming to feel like this.","parent":"posts/Fragments.txt","score":0.8568804917503672},{"content":"I want to learn more code. Working on [[exegesis]] over the course of a year, I saw my coding ability improve substantially. Towards the last 2 months, while rewriting a part of the codebase, I found myself dumbfounded by some of the decisions and patterns I had used a year earlier. The code I wrote towards the end was noticeably cleaner and more maintainable, mostly because I had familiarized myself with [[React]] hooks. Learning NextJS and GraphQL was also very rewarding, and both technologies were used extensively in the final version of exegesis. Looking forwards, I am thinking about learning Go, Clojure and maybe Rust. Go is the most practical one of all these for my purposes, and could open up a lot of job offers. Clojure is the most interesting from a theoretical standpoint, since I've never used a lisp or functional language. Rust is interesting because I hate systems/low-level programming, but I suspect that might only be because I hate C, and maybe Rust's more modern features will sell me on it.","parent":"posts/Reflections for the New Year-1-2-2021.txt","score":0.8528761799326172}],"Why did it take so long? Part of it is just a lack of experience. While making exegesis, I changed the database schema countless times, wrote dozens of migrations, accidentally wiped my database once (thank God for RDS backups), and rewrote the backend from scratch 2 months before release. There was also a good amount of feature creep. Whenever I thought I was close to finished, something unexpected would pop up - I started writing this essay 3 months before I actually released exegesis. Whatever the reason, if you count development time on the predecessor to exegesis, I've spent almost a tenth of my life building this. The entire project clocks in at a couple thousand lines of code. It is the largest, most complex, and most difficult thing I have built so far in my life.  [The last time I worked on a project this long, it was the first video game I made back in my senior year of high school.](https://medium.com/@nichwch/machine-gods-devlog-1-166dff474366) Even then, it was really about 6 months of development total, with a huge gap in between because of school, and it was all made with no-code game development tools, because back then the idea of using actual code terrified me. [[exegesis]] [[personal-reflection]] ":[{"content":"Why did it take so long? Part of it is just a lack of experience. While making exegesis, I changed the database schema countless times, wrote dozens of migrations, accidentally wiped my database once (thank God for RDS backups), and rewrote the backend from scratch 2 months before release. There was also a good amount of feature creep. Whenever I thought I was close to finished, something unexpected would pop up - I started writing this essay 3 months before I actually released exegesis. Whatever the reason, if you count development time on the predecessor to exegesis, I've spent almost a tenth of my life building this. The entire project clocks in at a couple thousand lines of code. It is the largest, most complex, and most difficult thing I have built so far in my life.  [The last time I worked on a project this long, it was the first video game I made back in my senior year of high school.](https://medium.com/@nichwch/machine-gods-devlog-1-166dff474366) Even then, it was really about 6 months of development total, with a huge gap in between because of school, and it was all made with no-code game development tools, because back then the idea of using actual code terrified me. [[exegesis]] [[personal-reflection]]","parent":"posts/Reflections on exegesis-10-7-2020.txt","score":0.9999999999999999},{"content":"exegesis has taken about a year to make. Including the development of its predecessor, YANA, it's taken about a year and a half. When I started making YANA the summer after my freshman year, I thought it'd be a small project; just a little utility for me to track my thoughts. I had no idea it'd balloon into such a large endeavor.","parent":"posts/Reflections on exegesis-10-7-2020.txt","score":0.9133716357350031},{"content":"Working on exegesis was a grueling affair at times. I rewrote the schema multiple times, rewrote the backend from scratch 2 months before release, chased countless UI bugs, and manually patched abandoned NPM packages. Part of it may have been due to my inexperience, but [working with ](https://nichwch.medium.com/making-yana-e3fade3f56e7)[rich text](https://medium.engineering/why-contenteditable-is-terrible-122d8a40e480) is just a [difficult task](https://twitter.com/thesephist/status/1360298464349999108), period. At one point, I considered giving up after finding a rival writing app I thought I simply couldn't compete with - I have a copy of an unfinished essay I started writing on why I had given up tucked away somewhere.","parent":"posts/Prometheus-2-13-2021.txt","score":0.9072592092564252},{"content":"It is this property that allows programmers to cheat the Gods, and achieve divine levels of creative output thought forbidden to mortals. A programmer can create abstractions than enable them to create in days what previously took months. I myself rewrote a good part of exegesis 2 months before I released it, and the new abstractions I picked enabled me to redo in those 2 months what took me almost a year at first. Moreover, programmers can share their abstractions, and borrow the inventions of others as well.","parent":"posts/Prometheus-2-13-2021.txt","score":0.8990651196022891},{"content":"In some sense exegesis gave birth to itself, because I used it to organize my ideas about exegesis. On days where exegesis was not working because I had broken something while coding it, I noticed that I could not think as clearly. Its absence was felt.","parent":"posts/Second Brains-2-13-2021.txt","score":0.8928358593863908},{"content":"Continue working on exegesis (and maybe some other personal projects)","parent":"posts/Goals for Spring Quarter-3-17-2021.txt","score":0.8853499387705618},{"content":"I started building exegesis because I've struggled my entire life to organize my thoughts - see [[Why I made exegesis]] for more information.","parent":"posts/exegesis pitch-2-4-2021.txt","score":0.8848812379357124},{"content":"This was reassuring, because it meant I had made something genuinely useful. In the past, I have made things I simply had no desire to use - one example is [JAFT](https://nichwch.medium.com/what-is-jaft-f543a4fad9d7), a time tracking app I made after making YANA (the predecessor to exegesis). I stopped using it after a bit, and didn't bother renewing the domain. I don't miss JAFT at all. The fact that I did miss exegesis on the days where it wasn't operational was a good sign.","parent":"posts/Second Brains-2-13-2021.txt","score":0.8813906222574764},{"content":"Before working on exegesis, I released a proof-of-concept called [YANA](https://yananotes.com/). It made the front page of [ProductHunt](https://www.producthunt.com/posts/yana), accrued almost 400 users, and put a few enthusiastic emails in my inbox. Because YANA was built with a rudimentary text engine that I wanted to upgrade, I decided to start over - the product of which is exegesis. Though it is not actively maintained, there are still a dozen or so active YANA users.","parent":"posts/exegesis pitch-2-4-2021.txt","score":0.8808617761792049},{"content":"[[Why I made exegesis]]","parent":"posts/Reflections on exegesis-10-7-2020.txt","score":0.8788905187581606}],"This project, too, has had a large effect on me - you can't work on something for a year and not have it affect you. I started this project sitting in a coffee shop; now I haven't sat in one for months. I know this sounds like navel gazing, but I've worked on this project through a pandemic, civil unrest, and statewide wildfires. Now it's finished, and I almost feel a little bittersweet releasing it. ":[{"content":"This project, too, has had a large effect on me - you can't work on something for a year and not have it affect you. I started this project sitting in a coffee shop; now I haven't sat in one for months. I know this sounds like navel gazing, but I've worked on this project through a pandemic, civil unrest, and statewide wildfires. Now it's finished, and I almost feel a little bittersweet releasing it.","parent":"posts/Reflections on exegesis-10-7-2020.txt","score":1.0000000000000002},{"content":"I stopped working on little projects. The voice in my head that would get excited by little hints of an idea was drowned out by demands that everything be in the service of something ambitious, something legible, something monetizable. I let my ambition trap me.","parent":"posts/Fragments.txt","score":0.8960910018237391},{"content":"That last project had a significant effect on me. Back in high school, I was heavily involved in Model UN and other political clubs. Making the [game](https://nichwch.itch.io/machinegods) made me realize it was making things and not winning arguments that really made me happier. It was also what convinced me that programming could be something more than rote problem solving, and even be a genuine creative medium. It was why I switched my major from Economics to Computer Science in college.[[personal-reflection]]","parent":"posts/Reflections on exegesis-10-7-2020.txt","score":0.8706950555592958},{"content":"These are my hobbies that I use to take a break from code related creative-work.","parent":"posts/Goals for Spring Quarter-3-17-2021.txt","score":0.8634135270551021},{"content":"The first year of this strange new decade is over. Personally, however, the end of the this year is less significant to me than the release of [[exegesis]]. A lot of my time was spent developing this project over the last year, and now that it's finished, I have a lot more time to spend on other activities. I'm not really big on resolutions, but I do want to reflect a little on everything. Of course, I anticipate [[exegesis]] will help me organize my new endeavors.","parent":"posts/Reflections for the New Year-1-2-2021.txt","score":0.8623472255069549},{"content":"To make regular progress towards personal projects, I'll be writing more on my development progress with [[exegesis]], under the tag [[devlog]]. I'll also be publishing another post soon on my plans for future features, and when I expect to release them by. I will do something similar with my other projects.","parent":"posts/Goals for Spring Quarter-3-17-2021.txt","score":0.8622779077004586},{"content":"For a while, I exclusively worked on a long, serious projects. I wanted to build a billion dollar product. I wanted to be the founder of a successful startup. I wanted to write, but I wanted to write on my own platform that everybody else would also write on, that would have all the features I wanted that everybody else would love.","parent":"posts/Fragments.txt","score":0.8617246736444036},{"content":"There are few feelings worse than wanting desperately to make something, and feeling as if you do not have the capability to make it.","parent":"posts/untitled-9-22-2021.txt","score":0.8596553773604156},{"content":"Working on exegesis was a grueling affair at times. I rewrote the schema multiple times, rewrote the backend from scratch 2 months before release, chased countless UI bugs, and manually patched abandoned NPM packages. Part of it may have been due to my inexperience, but [working with ](https://nichwch.medium.com/making-yana-e3fade3f56e7)[rich text](https://medium.engineering/why-contenteditable-is-terrible-122d8a40e480) is just a [difficult task](https://twitter.com/thesephist/status/1360298464349999108), period. At one point, I considered giving up after finding a rival writing app I thought I simply couldn't compete with - I have a copy of an unfinished essay I started writing on why I had given up tucked away somewhere.","parent":"posts/Prometheus-2-13-2021.txt","score":0.8591941869094492},{"content":"Anyone who takes satisfaction in creative work knows how good it feels to make something. That feeling can get addicting, to the point where you hunger to make progress on a creative project even when you're burned out - you want to create something so badly you can't take a break without thinking about it, but you're too burned out to make progress on it. At moments like these, one craves divine creative stamina, the ability to create out of thin air effortlessly, to beam ideas from one's head into reality, to spawn an entire universe within the span of a week like the God of the Old Testament.[[personal-reflection]]","parent":"posts/Prometheus-2-13-2021.txt","score":0.8560184814394964}],"Here are a couple of my reflections on this year-long journey - about code, creativity, and life. I started writing these with the goal of making them \"reflections.\" I'm not sure how well I stuck to the theme, but isn't that the point of exegesis - to enable disorganized thought? You can read these in any order. ":[{"content":"Here are a couple of my reflections on this year-long journey - about code, creativity, and life. I started writing these with the goal of making them \"reflections.\" I'm not sure how well I stuck to the theme, but isn't that the point of exegesis - to enable disorganized thought? You can read these in any order.","parent":"posts/Reflections on exegesis-10-7-2020.txt","score":1},{"content":"The first year of this strange new decade is over. Personally, however, the end of the this year is less significant to me than the release of [[exegesis]]. A lot of my time was spent developing this project over the last year, and now that it's finished, I have a lot more time to spend on other activities. I'm not really big on resolutions, but I do want to reflect a little on everything. Of course, I anticipate [[exegesis]] will help me organize my new endeavors.","parent":"posts/Reflections for the New Year-1-2-2021.txt","score":0.9115991860921348},{"content":"In [[Reflections for the New Year]], I outlined some things I wanted to get done this year. In no particular order, my goals were to:","parent":"posts/Goals for Spring Quarter-3-17-2021.txt","score":0.9092467280524585},{"content":"Many of my ideas are in service of a singular dream: having the ability to combine incoherent fragments of creative inspiration into a cohesive organized whole. exegesis is about enabling that with writing. I hope the design of this site will help me do that with interface ideas.","parent":"posts/Fragments.txt","score":0.8923992446525351},{"content":"The main focus here is personal projects - learning more code and writing more are auxiliary activities that help this end. First among these personal projects is [[exegesis]], but I have a number of other personal projects that I want to work on as well.","parent":"posts/Goals for Spring Quarter-3-17-2021.txt","score":0.8862678500865513},{"content":"I started building exegesis because I've struggled my entire life to organize my thoughts - see [[Why I made exegesis]] for more information.","parent":"posts/exegesis pitch-2-4-2021.txt","score":0.8821280206391324},{"content":"Continue working on exegesis (and maybe some other personal projects)","parent":"posts/Goals for Spring Quarter-3-17-2021.txt","score":0.8816334342749619},{"content":"In [[On tools for thought: knowledge management vs creativity]], I argue that the main value add of [[tools for thought]] is that they enable [[personal-reflection]] and creativity, not that they help us manage knowledge. However, I think to actually capture this potential, [[tools for thought]] have to be social. This will be a big focus for [[exegesis]] moving forwards. [[devlog]]","parent":"posts/untitled-9-24-2021.txt","score":0.8811370231481034},{"content":"In writing this essay, I checked everything tagged \"exegesis\" and \"personal-reflection\" in exegesis. I didn't tag those thoughts for the purpose of writing this essay, they were written down spontaneously. That they have helped me write this essay is serendipitous.","parent":"posts/Second Brains-2-13-2021.txt","score":0.8801925900827275},{"content":"[[Why I made exegesis]]","parent":"posts/Reflections on exegesis-10-7-2020.txt","score":0.8798241718639402}],"[[Why I made exegesis]] ":[{"content":"[[Why I made exegesis]]","parent":"posts/Reflections on exegesis-10-7-2020.txt","score":1},{"content":"I started building exegesis because I've struggled my entire life to organize my thoughts - see [[Why I made exegesis]] for more information.","parent":"posts/exegesis pitch-2-4-2021.txt","score":0.9266922891829901},{"content":"I see three ways to monetize exegesis:","parent":"posts/exegesis pitch-2-4-2021.txt","score":0.9154706164100601},{"content":"This is a pitch on why investing in exegesis is a good idea.","parent":"posts/exegesis pitch-2-4-2021.txt","score":0.9100642261294078},{"content":"Many of my ideas are in service of a singular dream: having the ability to combine incoherent fragments of creative inspiration into a cohesive organized whole. exegesis is about enabling that with writing. I hope the design of this site will help me do that with interface ideas.","parent":"posts/Fragments.txt","score":0.9097087937181784},{"content":"In some sense exegesis gave birth to itself, because I used it to organize my ideas about exegesis. On days where exegesis was not working because I had broken something while coding it, I noticed that I could not think as clearly. Its absence was felt.","parent":"posts/Second Brains-2-13-2021.txt","score":0.904507294315119},{"content":"Continue working on exegesis (and maybe some other personal projects)","parent":"posts/Goals for Spring Quarter-3-17-2021.txt","score":0.9044904050531462},{"content":"What is exegesis?","parent":"posts/exegesis pitch-2-4-2021.txt","score":0.9022287467170128},{"content":"exegesis as crm [[exegesis]] [[ideas]]","parent":"posts/untitled-9-20-2021.txt","score":0.9005285873437329},{"content":"You are reading this post on exegesis right now!","parent":"posts/exegesis pitch-2-4-2021.txt","score":0.8999007816558651}],"[[Giant Robots]]":[{"content":"[[Giant Robots]]","parent":"posts/Reflections on exegesis-10-7-2020.txt","score":1},{"content":"The movie Pacific Rim is about giant robots fighting monsters. It is one of many examples of science fiction focused on giant robots, but all of them have something in common: the giant robot is piloted by a human being.","parent":"posts/Giant Robots-2-28-2021.txt","score":0.9117040692921894},{"content":"A point worth repeating: in mecha fiction, we control 50-foot-tall war robots, in our world, we are controlled by the 5 inch screens in our pocket.","parent":"posts/Giant Robots-2-28-2021.txt","score":0.8661346881790496},{"content":"If you think about that a bit, it's a very quaint idea. Can you imagine a world where technology has developed to the point where we have giant robots, but technology is not somehow advanced enough to autopilot them? The idea seems strange to us, because in many respects, we live in a world diametrically opposed to the one portrayed in mecha science fiction. In their world, human beings control towering 50-foot humanoid war mechs. In ours, we are ruled by 5 inch screens in our pockets.","parent":"posts/Giant Robots-2-28-2021.txt","score":0.8603554449336658},{"content":"[[Prometheus]]","parent":"posts/Reflections on exegesis-10-7-2020.txt","score":0.8551738589174256}],"[[Manifesto]] ":[{"content":"[[Manifesto]]","parent":"posts/Reflections on exegesis-10-7-2020.txt","score":1},{"content":"[[philosophy]] [[politics]] [[writing]] [[starred]]","parent":"posts/untitled-1-4-2022.txt","score":0.8701382362421123}],"[[Prometheus]] ":[{"content":"[[Prometheus]]","parent":"posts/Reflections on exegesis-10-7-2020.txt","score":1.0000000000000002},{"content":"[[Second Brains]]","parent":"posts/Reflections on exegesis-10-7-2020.txt","score":0.8660579457836146},{"content":"[[Giant Robots]]","parent":"posts/Reflections on exegesis-10-7-2020.txt","score":0.8551738589174256},{"content":"Tagging this all meta-acropolis, an edtech project I'm in the early stages of working on. Don't have any code for it, just ideas, but I plan on putting something together soon™. [[meta-acropolis]] [[ideas]]","parent":"posts/untitled-9-21-2021.txt","score":0.8534593594630216}],"[[Second Brains]] ":[{"content":"[[Second Brains]]","parent":"posts/Reflections on exegesis-10-7-2020.txt","score":1},{"content":"As I looked further into these tools, I found that some had taken to calling them [Second Brains](https://fortelabs.co/blog/basboverview/). I thought this was incredibly exciting. The term sounds cyberpunk; building a \"second brain\" sounds way cooler than building a \"note taking app.\" At the same time, something about it unsettled me.","parent":"posts/Second Brains-2-13-2021.txt","score":0.8961276593702012},{"content":"[[Prometheus]]","parent":"posts/Reflections on exegesis-10-7-2020.txt","score":0.8660579457836146},{"content":"I did not do a braindump yesterday, the words did not flow easily. Best not to force these things. [[journal]]","parent":"posts/untitled-9-24-2021.txt","score":0.8542118022786337},{"content":"I fell into this kind of thinking while building exegesis, and it put an enormous amount of pressure on me, because it made me feel as if it wasn't just a notetaking app I was building, but a shrine for the mind. I would look at other notetaking systems like Roam Research and feel threatened - my notetaking app wasn't as powerful as theirs, therefore my mind would be weaker than theirs. Every little imperfection, every unimplemented feature, every bug felt sacrilegious - this was my second brain I was building after all. Needless to say, this led to a lot of feature creep, because my second brain had to be perfect.","parent":"posts/Second Brains-2-13-2021.txt","score":0.8534778975906503}]}