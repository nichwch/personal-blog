{"Some thoughts on my Operating Systems course.": [{"content": "Some thoughts on my Operating Systems course.", "parent": "untitled-10-11-2021.txt", "score": 0.0}, {"content": "Class starts tomorrow. It's been a while since I've read the strangely authoritarian language of a course syllabus, a long string of \"thou shalt not\"s followed by more prohibitions and percentages. Thinking about the anti-educational-institution streak in certain tech circles and the many projects aiming to replace the university, I wonder if this kind of authoritarianism is inherent to education. Most alt-ed projects promise to liberate students from pointless assessments and the caprice of individual instructors but I wonder if these might be empty promises, like how most revolutionary movements end up becoming oppressive themselves.[[meta-acropolis]] [[ideas]] ", "parent": "untitled-9-21-2021.txt", "score": 1.0534343719482422}, {"content": "Thinking about filesystems and how they have been unfairly maligned. If we put more effort into designing novel interfaces for filesystems, it would allow more people to exercise agency over their own data. Cloud software and mobile computing have killed an important part of computing literacy. ", "parent": "NOW PAGE.txt", "score": 1.0576504468917847}, {"content": "Finally, I want to take my studies more seriously. Next quarter, I am taking upper division classes on statistics for CS, databases, and information interfaces. I am especially excited about the database class, since database design problems were a big part of what I struggled with while building exegesis. I am also excited about the information interfaces class - exegesis is really just one giant information interface, isn't it? I cannot say I am excited about the stats class, I have never been fond of or good at math, but I will try to brave it with a stiff upper lip. I am considering posting my notes for these classes on [[exegesis]], so I can share them with classmates. ", "parent": "Reflections for the New Year.txt", "score": 1.082005262374878}, {"content": "[[meta-acropolis proof of concept]] Maybe do the demo for [[metaphysics]] instead. It's a subject I actually care about, and I'm taking the course this quarter. Also, I finished number theory last quarter and I have no intention of touching it again if I don't have to. testing edits. 5", "parent": "untitled-1-4-2022.txt", "score": 1.1416382789611816}, {"content": "Thoughts on the book", "parent": "untitled-2-6-2022.txt", "score": 1.174020528793335}, {"content": "I want to learn more code. Working on [[exegesis]] over the course of a year, I saw my coding ability improve substantially. Towards the last 2 months, while rewriting a part of the codebase, I found myself dumbfounded by some of the decisions and patterns I had used a year earlier. The code I wrote towards the end was noticeably cleaner and more maintainable, mostly because I had familiarized myself with [[React]] hooks. Learning NextJS and GraphQL was also very rewarding, and both technologies were used extensively in the final version of exegesis. Looking forwards, I am thinking about learning Go, Clojure and maybe Rust. Go is the most practical one of all these for my purposes, and could open up a lot of job offers. Clojure is the most interesting from a theoretical standpoint, since I've never used a lisp or functional language. Rust is interesting because I hate systems/low-level programming, but I suspect that might only be because I hate C, and maybe Rust's more modern features will sell me on it. ", "parent": "Reflections for the New Year.txt", "score": 1.182007074356079}, {"content": "I may take a typography class this quarter. It's not required for graduation, but I figure it could help me design better products, and maybe make [[exegesis]] look prettier. ", "parent": "untitled-9-22-2021.txt", "score": 1.1862648725509644}, {"content": "Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.", "parent": "The AI-first operating system of the future.txt", "score": 1.2172033786773682}, {"content": "2. My critique here is nothing original - it echoes a lot of what Andy [[Matuschak]] and [[Linus Lee]] have touched upon in their essays. Here's a brief excerpt from [Linus' blog post](https://thesephist.com/posts/browser/) that expresses the point more eloquently: ", "parent": "On tools for thought: knowledge management vs creativity.txt", "score": 1.2358416318893433}], "": [{"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 1.2026228078123622}, {"content": "~", "parent": "Fragments.txt", "score": 1.202622890472412}, {"content": "~", "parent": "The making of Nomad Hypertext.txt", "score": 1.202627182006836}, {"content": "~", "parent": "The making of Nomad Hypertext.txt", "score": 1.2026363611221313}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 1.2026889059926669}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 1.2026889059926669}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 1.2026889059926669}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 1.2026889059926669}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 1.2026889059926669}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 1.2026889059926669}], "Turns out, Computer Science is actually a science": [{"content": "Turns out, Computer Science is actually a science", "parent": "untitled-10-11-2021.txt", "score": 0.0}, {"content": "Maybe Computer Science is a social science", "parent": "untitled-10-11-2021.txt", "score": 0.5803428888320923}, {"content": "Then again, the subject of Computer Science's empirical inquiries isn't a natural thing - it's manmade. Everything about a computer is manmade, from the processor to the operating system to the programs that run on it, and as such are subject to human conventions. I'm only half joking when I say this: Isn't computer science actually a social science? ", "parent": "untitled-10-11-2021.txt", "score": 0.7482113242149353}, {"content": "I always thought the name \"Computer Science\" was a misnomer - sciences are empirical, and computer science/programming is something that relies on reason/logic. It feels closer to applied mathematics than it does empirical science.", "parent": "untitled-10-11-2021.txt", "score": 0.8642019033432007}, {"content": "I think Computer Science is also subject to this double hermeneutic. The best example of this is computer security. Best practices are researched by computer scientists, and strategies against them are developed by security researchers and malicious actors. Conclusions are reached about how to best design computer systems, but these conclusions never last very long, because hostile actors have incentives to disrupt these conclusions. In the same way that social theories can be invalidated by people's awareness of those social theories, conclusions on computer system can as well.", "parent": "untitled-10-11-2021.txt", "score": 1.0371733903884888}, {"content": "That last project had a significant effect on me. Back in high school, I was heavily involved in Model UN and other political clubs. Making the [game](https://nichwch.itch.io/machinegods) made me realize it was making things and not winning arguments that really made me happier. It was also what convinced me that programming could be something more than rote problem solving, and even be a genuine creative medium. It was why I switched my major from Economics to Computer Science in college.[[personal-reflection]] ", "parent": "Reflections on exegesis.txt", "score": 1.3247939348220825}, {"content": "The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.", "parent": "The AI-first operating system of the future.txt", "score": 1.3542934656143188}, {"content": "Human beings can observe the conclusions that social science reach and modify their behavior, which can potentially render those conclusions invalid. This is a complete impossibility in the natural sciences - an atom cannot learn about atomic theories and change its behavior to invalidate those theories. ", "parent": "untitled-10-11-2021.txt", "score": 1.3622477054595947}, {"content": "In my view, the whole movement of [[tools for thought]] (Roam, personal knowledge management systems, etc, etc.) is to make computers help us think better. That was the point from the very start, it was what Steve Jobs meant when he called the computer \"a bicycle for the mind.\" In the last decade, we've seen the very opposite - the use of the computer as an extractive tool, a weapon to siphon attention and harvest data. ", "parent": "Controlling what you see.txt", "score": 1.3650624752044678}, {"content": "As I looked further into these tools, I found that some had taken to calling them [Second Brains](https://fortelabs.co/blog/basboverview/). I thought this was incredibly exciting. The term sounds cyberpunk; building a \"second brain\" sounds way cooler than building a \"note taking app.\" At the same time, something about it unsettled me. ", "parent": "Second Brains.txt", "score": 1.3748176097869873}], "I always thought the name \"Computer Science\" was a misnomer - sciences are empirical, and computer science/programming is something that relies on reason/logic. It feels closer to applied mathematics than it does empirical science.": [{"content": "I always thought the name \"Computer Science\" was a misnomer - sciences are empirical, and computer science/programming is something that relies on reason/logic. It feels closer to applied mathematics than it does empirical science.", "parent": "untitled-10-11-2021.txt", "score": 0.0}, {"content": "Then again, the subject of Computer Science's empirical inquiries isn't a natural thing - it's manmade. Everything about a computer is manmade, from the processor to the operating system to the programs that run on it, and as such are subject to human conventions. I'm only half joking when I say this: Isn't computer science actually a social science? ", "parent": "untitled-10-11-2021.txt", "score": 0.6787290573120117}, {"content": "Maybe Computer Science is a social science", "parent": "untitled-10-11-2021.txt", "score": 0.78662109375}, {"content": "Turns out, Computer Science is actually a science", "parent": "untitled-10-11-2021.txt", "score": 0.8642019033432007}, {"content": "I think Computer Science is also subject to this double hermeneutic. The best example of this is computer security. Best practices are researched by computer scientists, and strategies against them are developed by security researchers and malicious actors. Conclusions are reached about how to best design computer systems, but these conclusions never last very long, because hostile actors have incentives to disrupt these conclusions. In the same way that social theories can be invalidated by people's awareness of those social theories, conclusions on computer system can as well.", "parent": "untitled-10-11-2021.txt", "score": 0.9203604459762573}, {"content": "In my view, the whole movement of [[tools for thought]] (Roam, personal knowledge management systems, etc, etc.) is to make computers help us think better. That was the point from the very start, it was what Steve Jobs meant when he called the computer \"a bicycle for the mind.\" In the last decade, we've seen the very opposite - the use of the computer as an extractive tool, a weapon to siphon attention and harvest data. ", "parent": "Controlling what you see.txt", "score": 1.2061803340911865}, {"content": "As I read more about concurrency algorithms, however, it looks as if the only way to really compare them is to... study them empirically by actually running them on machines. I'm not sure if there is a mathematical approach to analyzing concurrency, or if it's just out of the scope of our book, but it seems like there isn't - or at least the empirical approach is more practical. ", "parent": "untitled-10-11-2021.txt", "score": 1.26603364944458}, {"content": "Epistemology vs Aesthetics/Ethics", "parent": "untitled-9-30-2021.txt", "score": 1.278294563293457}, {"content": "This is not the case for programming. Making better tools for programming (new languages, new frameworks, new libraries) itself requires programming, and while making programming tools is different in important respects from writing regular programs, it is still programming. Making guitars is not playing guitars, making paints is not painting, but making better programming tools is programming. Programming, then, is an, intrinsically recursive creative medium. ", "parent": "Prometheus.txt", "score": 1.2804045677185059}, {"content": "I've been introduced to the concept of inductive proofs multiple times but always had my doubts on how they *actually* worked. When my Number Theory professor brought up the topic again, I wondered if he'd finally address it, and he actually did. He was candidly honest about it - induction was more of a philosophical topic than a mathematical one, but as a purely mathematical phenomenon it's due to the axiomatic conventions that mathematicians abide by. That's it. It's axiomatic. I guess that was the expected answer, but it puts to rest a question I've had for a while. ", "parent": "untitled-9-22-2021.txt", "score": 1.282507300376892}], "As I read more about concurrency algorithms, however, it looks as if the only way to really compare them is to... study them empirically by actually running them on machines. I'm not sure if there is a mathematical approach to analyzing concurrency, or if it's just out of the scope of our book, but it seems like there isn't - or at least the empirical approach is more practical. ": [{"content": "As I read more about concurrency algorithms, however, it looks as if the only way to really compare them is to... study them empirically by actually running them on machines. I'm not sure if there is a mathematical approach to analyzing concurrency, or if it's just out of the scope of our book, but it seems like there isn't - or at least the empirical approach is more practical. ", "parent": "untitled-10-11-2021.txt", "score": 0.0}, {"content": "Then again, the subject of Computer Science's empirical inquiries isn't a natural thing - it's manmade. Everything about a computer is manmade, from the processor to the operating system to the programs that run on it, and as such are subject to human conventions. I'm only half joking when I say this: Isn't computer science actually a social science? ", "parent": "untitled-10-11-2021.txt", "score": 1.1815321445465088}, {"content": "I think Computer Science is also subject to this double hermeneutic. The best example of this is computer security. Best practices are researched by computer scientists, and strategies against them are developed by security researchers and malicious actors. Conclusions are reached about how to best design computer systems, but these conclusions never last very long, because hostile actors have incentives to disrupt these conclusions. In the same way that social theories can be invalidated by people's awareness of those social theories, conclusions on computer system can as well.", "parent": "untitled-10-11-2021.txt", "score": 1.2199029922485352}, {"content": "I always thought the name \"Computer Science\" was a misnomer - sciences are empirical, and computer science/programming is something that relies on reason/logic. It feels closer to applied mathematics than it does empirical science.", "parent": "untitled-10-11-2021.txt", "score": 1.26603364944458}, {"content": "As far as learning more code goes, I want to branch out beyond full-stack web development. The two \"trendy\" technologies I'd like to learn more about are blockchain and AI/ML. For the former, I want to learn more about Ethereum development, and for the latter, I want to review some basic linear algebra before adventuring further. I've heard good things about [huggingface](https://huggingface.co/), and want to explore that further. I want to spend some time learning about these technologies around 3 times a week, maybe for an hour or two a session. ", "parent": "Goals for Spring Quarter.txt", "score": 1.295954704284668}, {"content": "I do think it's far from clear which schedule is better, at least personally speaking.[[focus]] [[personal-reflection]] ", "parent": "untitled-10-1-2021.txt", "score": 1.2973783016204834}, {"content": "I've been introduced to the concept of inductive proofs multiple times but always had my doubts on how they *actually* worked. When my Number Theory professor brought up the topic again, I wondered if he'd finally address it, and he actually did. He was candidly honest about it - induction was more of a philosophical topic than a mathematical one, but as a purely mathematical phenomenon it's due to the axiomatic conventions that mathematicians abide by. That's it. It's axiomatic. I guess that was the expected answer, but it puts to rest a question I've had for a while. ", "parent": "untitled-9-22-2021.txt", "score": 1.3149795532226562}, {"content": "I've had some spirited debates on this subject, most recently with [[Jared]] of [[hyperlink-academy]]. I personally believe this is possible, but I've also heard very good arguments otherwise. The synthesis in my head is currently this: the instructor/student relationship is not neccessary, but a social learning environment is. To improve at something, we need to be around people better than ourselves, and a certain level of humility is required to learn from those better than ourselves. An instructor/student relationship is an institutionalized way to approximate this; how effective it is depends on the quality of the institution. I don't think it's the only way to achieve this however, and there are interesting experiments in cohort-based learning that could illustrate other ways to provide a social learning environment.[[meta-acropolis]] [[ideas]] [[Jared]] [[hyperlink-academy]] ", "parent": "untitled-9-21-2021.txt", "score": 1.3170158863067627}, {"content": "It is this property that allows programmers to cheat the Gods, and achieve divine levels of creative output thought forbidden to mortals. A programmer can create abstractions than enable them to create in days what previously took months. I myself rewrote a good part of exegesis 2 months before I released it, and the new abstractions I picked enabled me to redo in those 2 months what took me almost a year at first. Moreover, programmers can share their abstractions, and borrow the inventions of others as well.", "parent": "Prometheus.txt", "score": 1.3401124477386475}, {"content": "The usual way to think about technology, software, and startups is that they solve problems, and so it follows then that the best way to create a new technology is to find a problem people have and solve it. This is not a bad approach to take, and it's been successful for many people. Still, I think it's too narrow.", "parent": "Creating new kinds of people.txt", "score": 1.3467612266540527}], "Then again, the subject of Computer Science's empirical inquiries isn't a natural thing - it's manmade. Everything about a computer is manmade, from the processor to the operating system to the programs that run on it, and as such are subject to human conventions. I'm only half joking when I say this: Isn't computer science actually a social science? ": [{"content": "Then again, the subject of Computer Science's empirical inquiries isn't a natural thing - it's manmade. Everything about a computer is manmade, from the processor to the operating system to the programs that run on it, and as such are subject to human conventions. I'm only half joking when I say this: Isn't computer science actually a social science? ", "parent": "untitled-10-11-2021.txt", "score": 9.90946887213795e-07}, {"content": "Maybe Computer Science is a social science", "parent": "untitled-10-11-2021.txt", "score": 0.5479047298431396}, {"content": "I always thought the name \"Computer Science\" was a misnomer - sciences are empirical, and computer science/programming is something that relies on reason/logic. It feels closer to applied mathematics than it does empirical science.", "parent": "untitled-10-11-2021.txt", "score": 0.6786712408065796}, {"content": "I think Computer Science is also subject to this double hermeneutic. The best example of this is computer security. Best practices are researched by computer scientists, and strategies against them are developed by security researchers and malicious actors. Conclusions are reached about how to best design computer systems, but these conclusions never last very long, because hostile actors have incentives to disrupt these conclusions. In the same way that social theories can be invalidated by people's awareness of those social theories, conclusions on computer system can as well.", "parent": "untitled-10-11-2021.txt", "score": 0.7229622602462769}, {"content": "Turns out, Computer Science is actually a science", "parent": "untitled-10-11-2021.txt", "score": 0.7481933832168579}, {"content": "Human beings can observe the conclusions that social science reach and modify their behavior, which can potentially render those conclusions invalid. This is a complete impossibility in the natural sciences - an atom cannot learn about atomic theories and change its behavior to invalidate those theories. ", "parent": "untitled-10-11-2021.txt", "score": 0.965875506401062}, {"content": "In my view, the whole movement of [[tools for thought]] (Roam, personal knowledge management systems, etc, etc.) is to make computers help us think better. That was the point from the very start, it was what Steve Jobs meant when he called the computer \"a bicycle for the mind.\" In the last decade, we've seen the very opposite - the use of the computer as an extractive tool, a weapon to siphon attention and harvest data. ", "parent": "Controlling what you see.txt", "score": 1.1144908666610718}, {"content": "The social sciences are infamous for being subject to the \"[double hermeneutic.](https://en.wikipedia.org/wiki/Double_hermeneutic)\" \"Hermeneutic\" means \"understanding\" or \"interpretation.\"  The term double hermeneutic in social science refers to the fact the social sciences study human behavior, but human beings are just as able to study social science. The process of observation goes both ways.", "parent": "untitled-10-11-2021.txt", "score": 1.152590036392212}, {"content": "The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.", "parent": "The AI-first operating system of the future.txt", "score": 1.1691505908966064}, {"content": "[I'm reminded of the distinction made between Societies of Discipline and Societies of Control.](https://www.youtube.com/watch?v=B_i8_WuyqAY&ab_channel=Jonas%C4%8Ceika-CCKPhilosophy) Societies of Discipline control individual behavior by making restrictions in time in space (e.g. by requiring factory workers to be in the factory at certain hours, etc. etc.), while Societies of Control allow free movement but assert control through more direct, often computerized means. ", "parent": "untitled-9-30-2021.txt", "score": 1.1796646118164062}], "Maybe Computer Science is a social science": [{"content": "Maybe Computer Science is a social science", "parent": "untitled-10-11-2021.txt", "score": 0.0}, {"content": "Then again, the subject of Computer Science's empirical inquiries isn't a natural thing - it's manmade. Everything about a computer is manmade, from the processor to the operating system to the programs that run on it, and as such are subject to human conventions. I'm only half joking when I say this: Isn't computer science actually a social science? ", "parent": "untitled-10-11-2021.txt", "score": 0.5479789972305298}, {"content": "Turns out, Computer Science is actually a science", "parent": "untitled-10-11-2021.txt", "score": 0.5803428888320923}, {"content": "I always thought the name \"Computer Science\" was a misnomer - sciences are empirical, and computer science/programming is something that relies on reason/logic. It feels closer to applied mathematics than it does empirical science.", "parent": "untitled-10-11-2021.txt", "score": 0.78662109375}, {"content": "I think Computer Science is also subject to this double hermeneutic. The best example of this is computer security. Best practices are researched by computer scientists, and strategies against them are developed by security researchers and malicious actors. Conclusions are reached about how to best design computer systems, but these conclusions never last very long, because hostile actors have incentives to disrupt these conclusions. In the same way that social theories can be invalidated by people's awareness of those social theories, conclusions on computer system can as well.", "parent": "untitled-10-11-2021.txt", "score": 0.8355265855789185}, {"content": "Thinking as social", "parent": "untitled-9-24-2021.txt", "score": 1.0558254718780518}, {"content": "Human beings can observe the conclusions that social science reach and modify their behavior, which can potentially render those conclusions invalid. This is a complete impossibility in the natural sciences - an atom cannot learn about atomic theories and change its behavior to invalidate those theories. ", "parent": "untitled-10-11-2021.txt", "score": 1.160456657409668}, {"content": "The social sciences are infamous for being subject to the \"[double hermeneutic.](https://en.wikipedia.org/wiki/Double_hermeneutic)\" \"Hermeneutic\" means \"understanding\" or \"interpretation.\"  The term double hermeneutic in social science refers to the fact the social sciences study human behavior, but human beings are just as able to study social science. The process of observation goes both ways.", "parent": "untitled-10-11-2021.txt", "score": 1.1630253791809082}, {"content": "In my view, the whole movement of [[tools for thought]] (Roam, personal knowledge management systems, etc, etc.) is to make computers help us think better. That was the point from the very start, it was what Steve Jobs meant when he called the computer \"a bicycle for the mind.\" In the last decade, we've seen the very opposite - the use of the computer as an extractive tool, a weapon to siphon attention and harvest data. ", "parent": "Controlling what you see.txt", "score": 1.2625761032104492}, {"content": "Psychology, ethics, and game theory are diverse fields that all point towards blindness being situationally useful. All fields relate to human action, so maybe it's possible to generalize this on that level. ", "parent": "Strategic blindness.txt", "score": 1.2711642980575562}], "This actually rings somewhat true to me! ": [{"content": "This actually rings somewhat true to me! ", "parent": "untitled-10-11-2021.txt", "score": 0.0}, {"content": "I'm reminded of the [[Nietzsche]]an theme of self awareness/consciousness being a sickness that he riffs upon occasionally in [[The Gay Science]]. ", "parent": "Strategic blindness.txt", "score": 1.2871052026748657}, {"content": "Some incredibly interesting excerpts I want to quote directly (emphases all mine):", "parent": "untitled-9-20-2021.txt", "score": 1.3235247135162354}, {"content": "That was an interesting reply, and it really got me thinking. She said something along the lines of [[twitter]] being her favorite [[tools for thought]]. ", "parent": "untitled-9-24-2021.txt", "score": 1.3279772996902466}, {"content": "I could not help but find this extraordinarily similar to what the protagonist and narrator of [[Zen and the Art of Motorcycle Repair]] goes through - he starts as a scientist, looks for justifications for science in philosophy, becomes frustrated with philosophy and eventually embraces esotericism before going insane. The instrumental rationality that the Critical Theorists disliked seems roughly equivalent to the \"classical rationality\" Phaedrus talks about in [[Zen and the Art of Motorcycle Repair]] as well. ", "parent": "untitled-9-21-2021.txt", "score": 1.3403211832046509}, {"content": "In the real world, it looks like the aesthetic frame of mind matters more. How much conviction someone has in their values affects their motivations for truths, with the result that we're functionally much smarter when working on things we care about, and probe unfathomable depths of stupidity when doing things we don't care about. ", "parent": "untitled-9-30-2021.txt", "score": 1.3513606786727905}, {"content": "I do think it's far from clear which schedule is better, at least personally speaking.[[focus]] [[personal-reflection]] ", "parent": "untitled-10-1-2021.txt", "score": 1.354461431503296}, {"content": "However, I think there is something understated here, a point he makes briefly that I think is worth exploring further - that what ontology we adopt corresponds to \"our various interests and purposes.\"", "parent": "untitled-1-4-2022.txt", "score": 1.3556959629058838}, {"content": "Of course, this is a bit of a strawman. Nobody who works seriously in [[tools for thought]] really believes that tools for thought are limited to just note taking apps. Still, to the general public, and to casual followers, this seems to be the actual perception. It also seems fair to say that this perception is not entirely misguided - while not all tools for thought are note-taking apps, a disproportionate amount of them are.", "parent": "On tools for thought: knowledge management vs creativity.txt", "score": 1.3721606731414795}, {"content": "I follow this [guy on twitter](https://twitter.com/nickcammarata) ([[nick-cammarata]]) that tweets about happiness a lot, and a common theme seems to be noticing what well being is, and imagining what the highest well being feels like. ", "parent": "untitled-9-30-2021.txt", "score": 1.3884522914886475}], "The social sciences are infamous for being subject to the \"[double hermeneutic.](https://en.wikipedia.org/wiki/Double_hermeneutic)\" \"Hermeneutic\" means \"understanding\" or \"interpretation.\"  The term double hermeneutic in social science refers to the fact the social sciences study human behavior, but human beings are just as able to study social science. The process of observation goes both ways.": [{"content": "The social sciences are infamous for being subject to the \"[double hermeneutic.](https://en.wikipedia.org/wiki/Double_hermeneutic)\" \"Hermeneutic\" means \"understanding\" or \"interpretation.\"  The term double hermeneutic in social science refers to the fact the social sciences study human behavior, but human beings are just as able to study social science. The process of observation goes both ways.", "parent": "untitled-10-11-2021.txt", "score": 7.416679181915242e-07}, {"content": "I think Computer Science is also subject to this double hermeneutic. The best example of this is computer security. Best practices are researched by computer scientists, and strategies against them are developed by security researchers and malicious actors. Conclusions are reached about how to best design computer systems, but these conclusions never last very long, because hostile actors have incentives to disrupt these conclusions. In the same way that social theories can be invalidated by people's awareness of those social theories, conclusions on computer system can as well.", "parent": "untitled-10-11-2021.txt", "score": 0.8703234195709229}, {"content": "Human beings can observe the conclusions that social science reach and modify their behavior, which can potentially render those conclusions invalid. This is a complete impossibility in the natural sciences - an atom cannot learn about atomic theories and change its behavior to invalidate those theories. ", "parent": "untitled-10-11-2021.txt", "score": 1.0192683935165405}, {"content": "Then again, the subject of Computer Science's empirical inquiries isn't a natural thing - it's manmade. Everything about a computer is manmade, from the processor to the operating system to the programs that run on it, and as such are subject to human conventions. I'm only half joking when I say this: Isn't computer science actually a social science? ", "parent": "untitled-10-11-2021.txt", "score": 1.1524406671524048}, {"content": "Maybe Computer Science is a social science", "parent": "untitled-10-11-2021.txt", "score": 1.1628795862197876}, {"content": "Directly relevant to exegesis, I was just speaking earlier about making social [[tools for thought]]. An interesting question to consider while creating this new social [[exegesis]]: How do I avoid making an echo-chamber platform susceptible to Curtis' critique, while fulfilling Fischer's vision for a web that can \"generate new discourse networks that have no correlate in the social field outside cyberspace?\" [[exegesis]] [[questions]] [[quotes]] [[Capitalist-Realism]] [[tools for thought]] ", "parent": "untitled-9-20-2021.txt", "score": 1.174794316291809}, {"content": "Thinking as social", "parent": "untitled-9-24-2021.txt", "score": 1.1862062215805054}, {"content": "Naturally, [[Habermas]]'s thoughts on the public sphere - which referred to salons, coffee shops and other public spaces in his day, and probably the internet today - are relevant to the social features of [[exegesis]]. ", "parent": "untitled-9-21-2021.txt", "score": 1.2166937589645386}, {"content": "I've had some spirited debates on this subject, most recently with [[Jared]] of [[hyperlink-academy]]. I personally believe this is possible, but I've also heard very good arguments otherwise. The synthesis in my head is currently this: the instructor/student relationship is not neccessary, but a social learning environment is. To improve at something, we need to be around people better than ourselves, and a certain level of humility is required to learn from those better than ourselves. An instructor/student relationship is an institutionalized way to approximate this; how effective it is depends on the quality of the institution. I don't think it's the only way to achieve this however, and there are interesting experiments in cohort-based learning that could illustrate other ways to provide a social learning environment.[[meta-acropolis]] [[ideas]] [[Jared]] [[hyperlink-academy]] ", "parent": "untitled-9-21-2021.txt", "score": 1.2830626964569092}, {"content": "Psychology, ethics, and game theory are diverse fields that all point towards blindness being situationally useful. All fields relate to human action, so maybe it's possible to generalize this on that level. ", "parent": "Strategic blindness.txt", "score": 1.3000612258911133}], "Human beings can observe the conclusions that social science reach and modify their behavior, which can potentially render those conclusions invalid. This is a complete impossibility in the natural sciences - an atom cannot learn about atomic theories and change its behavior to invalidate those theories. ": [{"content": "Human beings can observe the conclusions that social science reach and modify their behavior, which can potentially render those conclusions invalid. This is a complete impossibility in the natural sciences - an atom cannot learn about atomic theories and change its behavior to invalidate those theories. ", "parent": "untitled-10-11-2021.txt", "score": 8.677865821482555e-07}, {"content": "Then again, the subject of Computer Science's empirical inquiries isn't a natural thing - it's manmade. Everything about a computer is manmade, from the processor to the operating system to the programs that run on it, and as such are subject to human conventions. I'm only half joking when I say this: Isn't computer science actually a social science? ", "parent": "untitled-10-11-2021.txt", "score": 0.9658225178718567}, {"content": "I think Computer Science is also subject to this double hermeneutic. The best example of this is computer security. Best practices are researched by computer scientists, and strategies against them are developed by security researchers and malicious actors. Conclusions are reached about how to best design computer systems, but these conclusions never last very long, because hostile actors have incentives to disrupt these conclusions. In the same way that social theories can be invalidated by people's awareness of those social theories, conclusions on computer system can as well.", "parent": "untitled-10-11-2021.txt", "score": 0.994716465473175}, {"content": "The social sciences are infamous for being subject to the \"[double hermeneutic.](https://en.wikipedia.org/wiki/Double_hermeneutic)\" \"Hermeneutic\" means \"understanding\" or \"interpretation.\"  The term double hermeneutic in social science refers to the fact the social sciences study human behavior, but human beings are just as able to study social science. The process of observation goes both ways.", "parent": "untitled-10-11-2021.txt", "score": 1.019300103187561}, {"content": "Maybe Computer Science is a social science", "parent": "untitled-10-11-2021.txt", "score": 1.1604750156402588}, {"content": "Psychology, ethics, and game theory are diverse fields that all point towards blindness being situationally useful. All fields relate to human action, so maybe it's possible to generalize this on that level. ", "parent": "Strategic blindness.txt", "score": 1.1867743730545044}, {"content": "Thinking as social", "parent": "untitled-9-24-2021.txt", "score": 1.2062139511108398}, {"content": "Who cares? Make all the metaphysical arguments you'd like, a sufficiently powerful recommendation algorithm will still be able to sway decisions enough for Facebook to make 86 billion dollars a year. Free will may or may not be real, but it is an empirical fact that the profitable choice is to act as if it isn't.", "parent": "Giant Robots.txt", "score": 1.220458984375}, {"content": "I've had some spirited debates on this subject, most recently with [[Jared]] of [[hyperlink-academy]]. I personally believe this is possible, but I've also heard very good arguments otherwise. The synthesis in my head is currently this: the instructor/student relationship is not neccessary, but a social learning environment is. To improve at something, we need to be around people better than ourselves, and a certain level of humility is required to learn from those better than ourselves. An instructor/student relationship is an institutionalized way to approximate this; how effective it is depends on the quality of the institution. I don't think it's the only way to achieve this however, and there are interesting experiments in cohort-based learning that could illustrate other ways to provide a social learning environment.[[meta-acropolis]] [[ideas]] [[Jared]] [[hyperlink-academy]] ", "parent": "untitled-9-21-2021.txt", "score": 1.2412208318710327}, {"content": "In the introduction to the [[Habermas]] book, the author briefly discusses the Critical Theorists he spent his youth with, and how they believed rationality was man's only hope for emancipation. However, they also believed rationality had devolved into \"instrumental rationality\" - a kind of ruthlessly utilitarian rationality - that would also end up dooming mankind. Because of this contradiction, the Critical Theorists became extremely pessimistic. ", "parent": "untitled-9-21-2021.txt", "score": 1.2563320398330688}], "I think Computer Science is also subject to this double hermeneutic. The best example of this is computer security. Best practices are researched by computer scientists, and strategies against them are developed by security researchers and malicious actors. Conclusions are reached about how to best design computer systems, but these conclusions never last very long, because hostile actors have incentives to disrupt these conclusions. In the same way that social theories can be invalidated by people's awareness of those social theories, conclusions on computer system can as well.": [{"content": "I think Computer Science is also subject to this double hermeneutic. The best example of this is computer security. Best practices are researched by computer scientists, and strategies against them are developed by security researchers and malicious actors. Conclusions are reached about how to best design computer systems, but these conclusions never last very long, because hostile actors have incentives to disrupt these conclusions. In the same way that social theories can be invalidated by people's awareness of those social theories, conclusions on computer system can as well.", "parent": "untitled-10-11-2021.txt", "score": 8.654259886498039e-07}, {"content": "Then again, the subject of Computer Science's empirical inquiries isn't a natural thing - it's manmade. Everything about a computer is manmade, from the processor to the operating system to the programs that run on it, and as such are subject to human conventions. I'm only half joking when I say this: Isn't computer science actually a social science? ", "parent": "untitled-10-11-2021.txt", "score": 0.722795307636261}, {"content": "Maybe Computer Science is a social science", "parent": "untitled-10-11-2021.txt", "score": 0.8354076147079468}, {"content": "The social sciences are infamous for being subject to the \"[double hermeneutic.](https://en.wikipedia.org/wiki/Double_hermeneutic)\" \"Hermeneutic\" means \"understanding\" or \"interpretation.\"  The term double hermeneutic in social science refers to the fact the social sciences study human behavior, but human beings are just as able to study social science. The process of observation goes both ways.", "parent": "untitled-10-11-2021.txt", "score": 0.8704032897949219}, {"content": "I always thought the name \"Computer Science\" was a misnomer - sciences are empirical, and computer science/programming is something that relies on reason/logic. It feels closer to applied mathematics than it does empirical science.", "parent": "untitled-10-11-2021.txt", "score": 0.9203113317489624}, {"content": "Human beings can observe the conclusions that social science reach and modify their behavior, which can potentially render those conclusions invalid. This is a complete impossibility in the natural sciences - an atom cannot learn about atomic theories and change its behavior to invalidate those theories. ", "parent": "untitled-10-11-2021.txt", "score": 0.9948683977127075}, {"content": "Turns out, Computer Science is actually a science", "parent": "untitled-10-11-2021.txt", "score": 1.0371050834655762}, {"content": "In my view, the whole movement of [[tools for thought]] (Roam, personal knowledge management systems, etc, etc.) is to make computers help us think better. That was the point from the very start, it was what Steve Jobs meant when he called the computer \"a bicycle for the mind.\" In the last decade, we've seen the very opposite - the use of the computer as an extractive tool, a weapon to siphon attention and harvest data. ", "parent": "Controlling what you see.txt", "score": 1.131868600845337}, {"content": "The usual way to think about technology, software, and startups is that they solve problems, and so it follows then that the best way to create a new technology is to find a problem people have and solve it. This is not a bad approach to take, and it's been successful for many people. Still, I think it's too narrow.", "parent": "Creating new kinds of people.txt", "score": 1.1755955219268799}, {"content": "Directly relevant to exegesis, I was just speaking earlier about making social [[tools for thought]]. An interesting question to consider while creating this new social [[exegesis]]: How do I avoid making an echo-chamber platform susceptible to Curtis' critique, while fulfilling Fischer's vision for a web that can \"generate new discourse networks that have no correlate in the social field outside cyberspace?\" [[exegesis]] [[questions]] [[quotes]] [[Capitalist-Realism]] [[tools for thought]] ", "parent": "untitled-9-20-2021.txt", "score": 1.196635365486145}], " ": [{"content": " ", "parent": "Plaintext is your best friend.txt", "score": 0.0}, {"content": " ", "parent": "untitled-10-11-2021.txt", "score": 1.3416855608738842e-06}, {"content": "  ", "parent": "The making of Nomad Hypertext.txt", "score": 0.1724659502506256}, {"content": "~", "parent": "The making of Nomad Hypertext.txt", "score": 1.4249026775360107}, {"content": "~", "parent": "Fragments.txt", "score": 1.4249837398529053}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 1.4249838862382762}, {"content": "~", "parent": "Fragments.txt", "score": 1.425052523612976}, {"content": "~", "parent": "Fragments.txt", "score": 1.425052523612976}, {"content": "~", "parent": "Fragments.txt", "score": 1.425052523612976}, {"content": "~", "parent": "Fragments.txt", "score": 1.425052523612976}]}