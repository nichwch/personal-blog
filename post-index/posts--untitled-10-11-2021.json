{"Turns out, Computer Science is actually a science":[{"content":"The AI first operating system of the future already exists - it's called unix. I think the unix philosophy lends itself exceptionally well to the use of AI.","parent":"posts/The AI-first operating system of the future.txt","score":0.8279629483419176},{"content":"I avoided this IPC-executable approach because I thought it'd be really complicated. To some extent, this was the correct decision - I'm glad I got a MVP of my project out during my time at Recurse.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8231171179797675},{"content":"It uses neural search to show you how your ideas are connected to each other. This is done offline and privately on your computer, entirely on your machine.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8127280482420602},{"content":"The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.","parent":"posts/The AI-first operating system of the future.txt","score":0.8072785493102134},{"content":"Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?","parent":"posts/The AI-first operating system of the future.txt","score":0.8059669473873309},{"content":"Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.","parent":"posts/The AI-first operating system of the future.txt","score":0.8045486626283395}],"":[{"content":"Next to every paragraph, there is a button that will show you other related paragraphs from your other notes.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8514450468005932},{"content":"Nomad Hypertext is a writing app built around semantic search.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8455138568311819},{"content":"Plaintext is your best friend.","parent":"posts/Plaintext is your best friend.txt","score":0.8437967333727141},{"content":"You're viewing this on a statically generated blog using Yurt!","parent":"posts/What is Yurt?.txt","score":0.8352868364347527},{"content":"I've been working on notetaking apps for years now. I starting working on the first one on the bus back from my internship. I had an idea for a simple interaction - users should be able to highlight a piece of text, then add tags to that text. I distinctly remember thinking to myself, \"That should be a piece of cake! I should be able to finish it during the 45 minute bus  ride.\"\n\n\nIt ended up taking the rest of the summer. I was 19, naive, and had no idea what a nightmare the contenteditable HTML standard was.","parent":"posts/Plaintext is your best friend.txt","score":0.8349617781702803},{"content":"Yurt is a static site generator, built off the same principles as Nomad Hypertext.","parent":"posts/What is Yurt?.txt","score":0.83147189188003},{"content":"// 1. Section Title","parent":"posts/Plaintext is your best friend.txt","score":0.8310407432809674},{"content":"It does this by dividing your notes up into paragraph-sized blocks and indexing them into a vector database with an AI embedding model.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8308738608102689},{"content":"In any case I wanted to try something new because that's what Recurse is all about, so I tried making a project with just JS and JSDoc for some semblance of type safety.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8289505733587093},{"content":"It uses neural search to show you how your ideas are connected to each other. This is done offline and privately on your computer, entirely on your machine.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8286014862219001},{"content":"At build time, it embeds all your posts into vectors and puts them into a vector database. Then, for each paragraph in a post, it queries the vector database for the 20 most similar paragraphs from all your notes. It stores these in a precomputed index. It then statically generates a blog for you (like Gatsby or any other static site generator), and uses this index so users can see related ideas when they click on a paragraph.","parent":"posts/What is Yurt?.txt","score":0.82507608178487},{"content":"The basic idea here is that semantic search functions better than backlinking, tags, or folders at helping you see connections between your ideas. It is also much simpler to implement. With backlinks and tags, you often need specialized file types, but semantic search works on top of plain text. Semantic search is all you need!","parent":"posts/What is Nomad Hypertext?.txt","score":0.8244515437960355},{"content":"I avoided this IPC-executable approach because I thought it'd be really complicated. To some extent, this was the correct decision - I'm glad I got a MVP of my project out during my time at Recurse.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8238590967309432},{"content":"Of course, if you're looking to raise a billion dollars on your consumer-facing notetaking app, plain text won't cut it. Lucky for us all, Jerome Powell has acted wisely to proscribe this possibility.","parent":"posts/Plaintext is your best friend.txt","score":0.8232601672203171},{"content":"The app is free and open source. Notes are stored as plain text files, which means you are free to use tools like git to sync them across multiple devices, and free to port your notes over to other apps if you wish.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8229781287130151},{"content":"To be frank, I made some regrettable engineering decisions while making Nomad Hypertext. I built this during my Recurse Center batch and was focused on getting a working prototype out, so some shortcuts were taken. Nevertheless, reflecting back, I would say these shortcuts were not worth it. \n\nThe two big shortcuts I took were using Javascript instead of Typescript and using Electron instead of Tauri.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8220398049687068},{"content":"However, when building Yurt, the static site builder for nomad hypertext, I found myself repeating a lot of logic. I found myself wanting to add features to the indexing engine, like being able to use cloud providers instead of local models (because doing all this processing locally can take ages!). In the future, I might want to use multimodal models, so I can see similarity between images, text, and audio. \n\nFactoring out the semantic search element of my app would have been the correct, unix-ey thing to do, and it would allow me to make these extensions in the future. I plan on doing this soon.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8218034323666665},{"content":"The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.","parent":"posts/The AI-first operating system of the future.txt","score":0.8198483747080119},{"content":"The other thing I miss is links. You can still paste urls, however. It's ugly but it works.","parent":"posts/Plaintext is your best friend.txt","score":0.8196808161560437},{"content":"I'll end with a haiku. \n\nNomad Hypertext\nPowered by semantic search\nGives inspiration","parent":"posts/What is Nomad Hypertext?.txt","score":0.8171806181110879}],"Some thoughts on my Operating Systems course.":[{"content":"I avoided this IPC-executable approach because I thought it'd be really complicated. To some extent, this was the correct decision - I'm glad I got a MVP of my project out during my time at Recurse.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8593913823538039},{"content":"The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people.","parent":"posts/The AI-first operating system of the future.txt","score":0.8435341585293604},{"content":"The AI first operating system of the future already exists - it's called unix. I think the unix philosophy lends itself exceptionally well to the use of AI.","parent":"posts/The AI-first operating system of the future.txt","score":0.8409299980437521},{"content":"Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.","parent":"posts/The AI-first operating system of the future.txt","score":0.8334998489067328},{"content":"The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.","parent":"posts/The AI-first operating system of the future.txt","score":0.8305686095650727},{"content":"In any case I wanted to try something new because that's what Recurse is all about, so I tried making a project with just JS and JSDoc for some semblance of type safety.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8231879030632065},{"content":"Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?","parent":"posts/The AI-first operating system of the future.txt","score":0.817906413746383},{"content":"To be frank, I made some regrettable engineering decisions while making Nomad Hypertext. I built this during my Recurse Center batch and was focused on getting a working prototype out, so some shortcuts were taken. Nevertheless, reflecting back, I would say these shortcuts were not worth it. \n\nThe two big shortcuts I took were using Javascript instead of Typescript and using Electron instead of Tauri.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8144320426311527},{"content":"The results were... mixed. I did get to move faster at the start, but started running into more and more type-related bugs as development went on. If I were to do this project again, I'd stick to Typescript.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8090107645425099},{"content":"I read Rich Harris' twitter thread on how Javascript with JSDoc is actually pretty good, and decided to give it a shot. To be clear, I'm not blaming Rich Harris for my choice - he qualified his point, saying JS with JSDoc is preferable to Typescript for library development, because not having an intermediate build step makes it easier to reproduce bugs in a REPL. He still recommends using Typescript for projects (I think), so I was acting against his advice here.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8062769362051596},{"content":"I've been working on notetaking apps for years now. I starting working on the first one on the bus back from my internship. I had an idea for a simple interaction - users should be able to highlight a piece of text, then add tags to that text. I distinctly remember thinking to myself, \"That should be a piece of cake! I should be able to finish it during the 45 minute bus  ride.\"\n\n\nIt ended up taking the rest of the summer. I was 19, naive, and had no idea what a nightmare the contenteditable HTML standard was.","parent":"posts/Plaintext is your best friend.txt","score":0.8060938549173853},{"content":"I opted to use Javascript instead of Typescript out of mix of curiosity and laziness. Like most people, I was introduced to Javascript before I was introduced to Typescript. Like most people, I suffered through many null errors and was relieved when I discovered that the Typescript compiler could save me from many of them. Like most people, though I am grateful for Typescript, I find it occasionally cumbersome.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8056441818715842}],"I always thought the name \"Computer Science\" was a misnomer - sciences are empirical, and computer science/programming is something that relies on reason/logic. It feels closer to applied mathematics than it does empirical science.":[{"content":"The AI first operating system of the future already exists - it's called unix. I think the unix philosophy lends itself exceptionally well to the use of AI.","parent":"posts/The AI-first operating system of the future.txt","score":0.8201060114906066},{"content":"Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.","parent":"posts/The AI-first operating system of the future.txt","score":0.8159221755590229},{"content":"I opted to use Javascript instead of Typescript out of mix of curiosity and laziness. Like most people, I was introduced to Javascript before I was introduced to Typescript. Like most people, I suffered through many null errors and was relieved when I discovered that the Typescript compiler could save me from many of them. Like most people, though I am grateful for Typescript, I find it occasionally cumbersome.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8056405429429969},{"content":"The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.","parent":"posts/The AI-first operating system of the future.txt","score":0.805548812597456}],"As I read more about concurrency algorithms, however, it looks as if the only way to really compare them is to... study them empirically by actually running them on machines. I'm not sure if there is a mathematical approach to analyzing concurrency, or if it's just out of the scope of our book, but it seems like there isn't - or at least the empirical approach is more practical. ":[{"content":"It uses neural search to show you how your ideas are connected to each other. This is done offline and privately on your computer, entirely on your machine.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8080877785231911},{"content":"The results were... mixed. I did get to move faster at the start, but started running into more and more type-related bugs as development went on. If I were to do this project again, I'd stick to Typescript.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8056035085613448}],"Then again, the subject of Computer Science's empirical inquiries isn't a natural thing - it's manmade. Everything about a computer is manmade, from the processor to the operating system to the programs that run on it, and as such are subject to human conventions. I'm only half joking when I say this: Isn't computer science actually a social science? ":[{"content":"The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.","parent":"posts/The AI-first operating system of the future.txt","score":0.8360837576272055},{"content":"The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people.","parent":"posts/The AI-first operating system of the future.txt","score":0.8341716031007773},{"content":"The AI first operating system of the future already exists - it's called unix. I think the unix philosophy lends itself exceptionally well to the use of AI.","parent":"posts/The AI-first operating system of the future.txt","score":0.8299166451614236},{"content":"Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.","parent":"posts/The AI-first operating system of the future.txt","score":0.8243387008161283},{"content":"Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?","parent":"posts/The AI-first operating system of the future.txt","score":0.8170534666163239},{"content":"It uses neural search to show you how your ideas are connected to each other. This is done offline and privately on your computer, entirely on your machine.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8104352244155942}],"This actually rings somewhat true to me! ":[],"Maybe Computer Science is a social science":[{"content":"The AI first operating system of the future already exists - it's called unix. I think the unix philosophy lends itself exceptionally well to the use of AI.","parent":"posts/The AI-first operating system of the future.txt","score":0.8265421609105814},{"content":"Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?","parent":"posts/The AI-first operating system of the future.txt","score":0.8218282399097777},{"content":"Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.","parent":"posts/The AI-first operating system of the future.txt","score":0.8187513947721723},{"content":"The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.","parent":"posts/The AI-first operating system of the future.txt","score":0.8166685112540505},{"content":"It uses neural search to show you how your ideas are connected to each other. This is done offline and privately on your computer, entirely on your machine.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8088802711749487},{"content":"I avoided this IPC-executable approach because I thought it'd be really complicated. To some extent, this was the correct decision - I'm glad I got a MVP of my project out during my time at Recurse.","parent":"posts/The making of Nomad Hypertext.txt","score":0.808066869315673},{"content":"The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people.","parent":"posts/The AI-first operating system of the future.txt","score":0.8006682431212844}],"The social sciences are infamous for being subject to the \"[double hermeneutic.](https://en.wikipedia.org/wiki/Double_hermeneutic)\" \"Hermeneutic\" means \"understanding\" or \"interpretation.\"  The term double hermeneutic in social science refers to the fact the social sciences study human behavior, but human beings are just as able to study social science. The process of observation goes both ways.":[],"Human beings can observe the conclusions that social science reach and modify their behavior, which can potentially render those conclusions invalid. This is a complete impossibility in the natural sciences - an atom cannot learn about atomic theories and change its behavior to invalidate those theories. ":[{"content":"The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people.","parent":"posts/The AI-first operating system of the future.txt","score":0.8055278148463715}]," ":[{"content":"Next to every paragraph, there is a button that will show you other related paragraphs from your other notes.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8514450468005932},{"content":"Nomad Hypertext is a writing app built around semantic search.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8455138568311819},{"content":"Plaintext is your best friend.","parent":"posts/Plaintext is your best friend.txt","score":0.8437967333727141},{"content":"You're viewing this on a statically generated blog using Yurt!","parent":"posts/What is Yurt?.txt","score":0.8352868364347527},{"content":"I've been working on notetaking apps for years now. I starting working on the first one on the bus back from my internship. I had an idea for a simple interaction - users should be able to highlight a piece of text, then add tags to that text. I distinctly remember thinking to myself, \"That should be a piece of cake! I should be able to finish it during the 45 minute bus  ride.\"\n\n\nIt ended up taking the rest of the summer. I was 19, naive, and had no idea what a nightmare the contenteditable HTML standard was.","parent":"posts/Plaintext is your best friend.txt","score":0.8349617781702803},{"content":"Yurt is a static site generator, built off the same principles as Nomad Hypertext.","parent":"posts/What is Yurt?.txt","score":0.83147189188003},{"content":"// 1. Section Title","parent":"posts/Plaintext is your best friend.txt","score":0.8310407432809674},{"content":"It does this by dividing your notes up into paragraph-sized blocks and indexing them into a vector database with an AI embedding model.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8308738608102689},{"content":"In any case I wanted to try something new because that's what Recurse is all about, so I tried making a project with just JS and JSDoc for some semblance of type safety.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8289505733587093},{"content":"It uses neural search to show you how your ideas are connected to each other. This is done offline and privately on your computer, entirely on your machine.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8286014862219001},{"content":"At build time, it embeds all your posts into vectors and puts them into a vector database. Then, for each paragraph in a post, it queries the vector database for the 20 most similar paragraphs from all your notes. It stores these in a precomputed index. It then statically generates a blog for you (like Gatsby or any other static site generator), and uses this index so users can see related ideas when they click on a paragraph.","parent":"posts/What is Yurt?.txt","score":0.82507608178487},{"content":"The basic idea here is that semantic search functions better than backlinking, tags, or folders at helping you see connections between your ideas. It is also much simpler to implement. With backlinks and tags, you often need specialized file types, but semantic search works on top of plain text. Semantic search is all you need!","parent":"posts/What is Nomad Hypertext?.txt","score":0.8244515437960355},{"content":"I avoided this IPC-executable approach because I thought it'd be really complicated. To some extent, this was the correct decision - I'm glad I got a MVP of my project out during my time at Recurse.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8238590967309432},{"content":"Of course, if you're looking to raise a billion dollars on your consumer-facing notetaking app, plain text won't cut it. Lucky for us all, Jerome Powell has acted wisely to proscribe this possibility.","parent":"posts/Plaintext is your best friend.txt","score":0.8232601672203171},{"content":"The app is free and open source. Notes are stored as plain text files, which means you are free to use tools like git to sync them across multiple devices, and free to port your notes over to other apps if you wish.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8229781287130151},{"content":"To be frank, I made some regrettable engineering decisions while making Nomad Hypertext. I built this during my Recurse Center batch and was focused on getting a working prototype out, so some shortcuts were taken. Nevertheless, reflecting back, I would say these shortcuts were not worth it. \n\nThe two big shortcuts I took were using Javascript instead of Typescript and using Electron instead of Tauri.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8220398049687068},{"content":"However, when building Yurt, the static site builder for nomad hypertext, I found myself repeating a lot of logic. I found myself wanting to add features to the indexing engine, like being able to use cloud providers instead of local models (because doing all this processing locally can take ages!). In the future, I might want to use multimodal models, so I can see similarity between images, text, and audio. \n\nFactoring out the semantic search element of my app would have been the correct, unix-ey thing to do, and it would allow me to make these extensions in the future. I plan on doing this soon.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8218034323666665},{"content":"The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.","parent":"posts/The AI-first operating system of the future.txt","score":0.8198483747080119},{"content":"The other thing I miss is links. You can still paste urls, however. It's ugly but it works.","parent":"posts/Plaintext is your best friend.txt","score":0.8196808161560437},{"content":"I'll end with a haiku. \n\nNomad Hypertext\nPowered by semantic search\nGives inspiration","parent":"posts/What is Nomad Hypertext?.txt","score":0.8171806181110879}],"I think Computer Science is also subject to this double hermeneutic. The best example of this is computer security. Best practices are researched by computer scientists, and strategies against them are developed by security researchers and malicious actors. Conclusions are reached about how to best design computer systems, but these conclusions never last very long, because hostile actors have incentives to disrupt these conclusions. In the same way that social theories can be invalidated by people's awareness of those social theories, conclusions on computer system can as well.":[{"content":"The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people.","parent":"posts/The AI-first operating system of the future.txt","score":0.8342184073474849},{"content":"The AI first operating system of the future already exists - it's called unix. I think the unix philosophy lends itself exceptionally well to the use of AI.","parent":"posts/The AI-first operating system of the future.txt","score":0.8303122183588045},{"content":"The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.","parent":"posts/The AI-first operating system of the future.txt","score":0.827085306559622},{"content":"Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?","parent":"posts/The AI-first operating system of the future.txt","score":0.814539599789746},{"content":"Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.","parent":"posts/The AI-first operating system of the future.txt","score":0.8132583951144084},{"content":"It uses neural search to show you how your ideas are connected to each other. This is done offline and privately on your computer, entirely on your machine.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8107521792297059},{"content":"I avoided this IPC-executable approach because I thought it'd be really complicated. To some extent, this was the correct decision - I'm glad I got a MVP of my project out during my time at Recurse.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8032959597064815}]}