{"":[{"content":"Building tools","parent":"posts/untitled-9-20-2021.txt","score":0.8593290080388},{"content":"The club does 2 things.","parent":"posts/untitled-9-24-2021.txt","score":0.8589669169415844},{"content":"Induction","parent":"posts/untitled-9-22-2021.txt","score":0.8577220980911441},{"content":"Code:","parent":"posts/Goals for Spring Quarter.txt","score":0.856649564390397},{"content":"Executing","parent":"posts/Goals for Spring Quarter.txt","score":0.8556654491388678},{"content":"Priority 1: Code-related creative work (continue work on exegesis, other personal projects, learn more code, write more)","parent":"posts/Goals for Spring Quarter.txt","score":0.8537043599402795},{"content":"Next to every paragraph, there is a button that will show you other related paragraphs from your other notes.","parent":"posts/What is Nomad Hypertext.txt","score":0.8514450468005932},{"content":"we live in a society","parent":"posts/untitled-9-30-2021.txt","score":0.8499151373626692},{"content":"Priority 2: Activities that are a break from code-related creative work (piano, guitar, fiction/nonfiction reading, drawing, fitness)","parent":"posts/Goals for Spring Quarter.txt","score":0.8497861585687644},{"content":"Learn a grappling art (because of quarantine, this will just be maintaining general fitness levels for now)","parent":"posts/Goals for Spring Quarter.txt","score":0.8496945903933114},{"content":"For drawing, I'd like to practice drawing reference images in my own style 3 times a week, with a focus on drawing more three dimensionally, drawing people/poses, and using color.","parent":"posts/Goals for Spring Quarter.txt","score":0.8478182318510581},{"content":"Afternoon","parent":"posts/untitled-9-21-2021.txt","score":0.8472546071060495},{"content":"Hobbies:","parent":"posts/Goals for Spring Quarter.txt","score":0.8467379006001533},{"content":"This is for scenarios where you do want to write in an organized manner. For example, right now, this entire page is about","parent":"posts/Roadmap to exegesis' beta release.txt","score":0.8466474388580029},{"content":"Focus[[focus]] [[focus-machine]] [[ideas]]","parent":"posts/untitled-9-24-2021.txt","score":0.8456538970968254},{"content":"Higher-order creativity","parent":"posts/Prometheus.txt","score":0.8455300536527719},{"content":"Nomad Hypertext is a writing app built around semantic search.","parent":"posts/What is Nomad Hypertext.txt","score":0.8455138568311819},{"content":"I'm taking a gap quarter this Spring to work on some personal projects. It is always better to have a plan than to have no plan, even if things don't work out your way, so here are some tentative goals for my gap quarter.","parent":"posts/Goals for Spring Quarter.txt","score":0.8451682294721505},{"content":"Writing cascades","parent":"posts/untitled-10-1-2021.txt","score":0.8444322593169847},{"content":"Plaintext is your best friend.","parent":"posts/Plaintext is your best friend.txt","score":0.8437967333727141}],"Turns out, Computer Science is actually a science":[{"content":"Turns out, Computer Science is actually a science","parent":"posts/untitled-10-11-2021.txt","score":1.0000000000000002},{"content":"Maybe Computer Science is a social science","parent":"posts/untitled-10-11-2021.txt","score":0.9221794247010071},{"content":"I always thought the name \"Computer Science\" was a misnomer - sciences are empirical, and computer science/programming is something that relies on reason/logic. It feels closer to applied mathematics than it does empirical science.","parent":"posts/untitled-10-11-2021.txt","score":0.92116768722748},{"content":"Then again, the subject of Computer Science's empirical inquiries isn't a natural thing - it's manmade. Everything about a computer is manmade, from the processor to the operating system to the programs that run on it, and as such are subject to human conventions. I'm only half joking when I say this: Isn't computer science actually a social science?","parent":"posts/untitled-10-11-2021.txt","score":0.9089536126515295},{"content":"I think Computer Science is also subject to this double hermeneutic. The best example of this is computer security. Best practices are researched by computer scientists, and strategies against them are developed by security researchers and malicious actors. Conclusions are reached about how to best design computer systems, but these conclusions never last very long, because hostile actors have incentives to disrupt these conclusions. In the same way that social theories can be invalidated by people's awareness of those social theories, conclusions on computer system can as well.","parent":"posts/untitled-10-11-2021.txt","score":0.8681358595696885},{"content":"That last project had a significant effect on me. Back in high school, I was heavily involved in Model UN and other political clubs. Making the [game](https://nichwch.itch.io/machinegods) made me realize it was making things and not winning arguments that really made me happier. It was also what convinced me that programming could be something more than rote problem solving, and even be a genuine creative medium. It was why I switched my major from Economics to Computer Science in college.[[personal-reflection]]","parent":"posts/Reflections on exegesis.txt","score":0.8480356318488103},{"content":"Some thoughts on my Operating Systems course.","parent":"posts/untitled-10-11-2021.txt","score":0.8302416503626304},{"content":"The AI first operating system of the future already exists - it's called unix. I think the unix philosophy lends itself exceptionally well to the use of AI.","parent":"posts/The AI-first operating system of the future.txt","score":0.8279629483419176},{"content":"Finally, I want to take my studies more seriously. Next quarter, I am taking upper division classes on statistics for CS, databases, and information interfaces. I am especially excited about the database class, since database design problems were a big part of what I struggled with while building exegesis. I am also excited about the information interfaces class - exegesis is really just one giant information interface, isn't it? I cannot say I am excited about the stats class, I have never been fond of or good at math, but I will try to brave it with a stiff upper lip. I am considering posting my notes for these classes on [[exegesis]], so I can share them with classmates.","parent":"posts/Reflections for the New Year.txt","score":0.8272531692180044},{"content":"I want to learn more code. Working on [[exegesis]] over the course of a year, I saw my coding ability improve substantially. Towards the last 2 months, while rewriting a part of the codebase, I found myself dumbfounded by some of the decisions and patterns I had used a year earlier. The code I wrote towards the end was noticeably cleaner and more maintainable, mostly because I had familiarized myself with [[React]] hooks. Learning NextJS and GraphQL was also very rewarding, and both technologies were used extensively in the final version of exegesis. Looking forwards, I am thinking about learning Go, Clojure and maybe Rust. Go is the most practical one of all these for my purposes, and could open up a lot of job offers. Clojure is the most interesting from a theoretical standpoint, since I've never used a lisp or functional language. Rust is interesting because I hate systems/low-level programming, but I suspect that might only be because I hate C, and maybe Rust's more modern features will sell me on it.","parent":"posts/Reflections for the New Year.txt","score":0.825059253629393},{"content":"In my view, the whole movement of [[tools for thought]] (Roam, personal knowledge management systems, etc, etc.) is to make computers help us think better. That was the point from the very start, it was what Steve Jobs meant when he called the computer \"a bicycle for the mind.\" In the last decade, we've seen the very opposite - the use of the computer as an extractive tool, a weapon to siphon attention and harvest data.","parent":"posts/Controlling what you see.txt","score":0.8233137656456045},{"content":"I avoided this IPC-executable approach because I thought it'd be really complicated. To some extent, this was the correct decision - I'm glad I got a MVP of my project out during my time at Recurse.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8231171179797675},{"content":"This is not the case for programming. Making better tools for programming (new languages, new frameworks, new libraries) itself requires programming, and while making programming tools is different in important respects from writing regular programs, it is still programming. Making guitars is not playing guitars, making paints is not painting, but making better programming tools is programming. Programming, then, is an, intrinsically recursive creative medium.","parent":"posts/Prometheus.txt","score":0.8228686735840115},{"content":"As I looked further into these tools, I found that some had taken to calling them [Second Brains](https://fortelabs.co/blog/basboverview/). I thought this was incredibly exciting. The term sounds cyberpunk; building a \"second brain\" sounds way cooler than building a \"note taking app.\" At the same time, something about it unsettled me.","parent":"posts/Second Brains.txt","score":0.8190833581983251},{"content":"I desperately want programming to feel like this.","parent":"posts/Fragments.txt","score":0.8182292616826577},{"content":"This morning I was listening to a podcast suggested by [[Linus Lee]] - Changelog. I don't usually listen to podcasts, but I have had good experiences with audiobooks in the past. It was nice being able to absorb information over breakfast without staring at a screen. The subject material was interesting; it was some CMU professor doing research on individual programmers and the myth of the \"10x developer.\"","parent":"posts/untitled-9-20-2021.txt","score":0.8178924465460677},{"content":"It is this property that allows programmers to cheat the Gods, and achieve divine levels of creative output thought forbidden to mortals. A programmer can create abstractions than enable them to create in days what previously took months. I myself rewrote a good part of exegesis 2 months before I released it, and the new abstractions I picked enabled me to redo in those 2 months what took me almost a year at first. Moreover, programmers can share their abstractions, and borrow the inventions of others as well.","parent":"posts/Prometheus.txt","score":0.8162489637428884},{"content":"In my teen years, I found programming and videogame development, and that became my creative outlet for a while. I found a way to scan my drawings into digital files, and for a while that was my way of combining art and programming.","parent":"posts/Fragments.txt","score":0.8142191965980469},{"content":"It's been rewarding seeing how the more [[philosophy]] I read, the more complex texts I'm able to understand. I think the [[metaphysics]] class I'm taking right now has helped illuminate some of the concepts as well.","parent":"posts/untitled-2-6-2022.txt","score":0.8136356605139226},{"content":"It uses neural search to show you how your ideas are connected to each other. This is done offline and privately on your computer, entirely on your machine.","parent":"posts/What is Nomad Hypertext.txt","score":0.8127280482420602}],"I always thought the name \"Computer Science\" was a misnomer - sciences are empirical, and computer science/programming is something that relies on reason/logic. It feels closer to applied mathematics than it does empirical science.":[{"content":"I always thought the name \"Computer Science\" was a misnomer - sciences are empirical, and computer science/programming is something that relies on reason/logic. It feels closer to applied mathematics than it does empirical science.","parent":"posts/untitled-10-11-2021.txt","score":1.0000000000000002},{"content":"Turns out, Computer Science is actually a science","parent":"posts/untitled-10-11-2021.txt","score":0.92116768722748},{"content":"Then again, the subject of Computer Science's empirical inquiries isn't a natural thing - it's manmade. Everything about a computer is manmade, from the processor to the operating system to the programs that run on it, and as such are subject to human conventions. I'm only half joking when I say this: Isn't computer science actually a social science?","parent":"posts/untitled-10-11-2021.txt","score":0.9113774831701567},{"content":"Maybe Computer Science is a social science","parent":"posts/untitled-10-11-2021.txt","score":0.9066690403738026},{"content":"I think Computer Science is also subject to this double hermeneutic. The best example of this is computer security. Best practices are researched by computer scientists, and strategies against them are developed by security researchers and malicious actors. Conclusions are reached about how to best design computer systems, but these conclusions never last very long, because hostile actors have incentives to disrupt these conclusions. In the same way that social theories can be invalidated by people's awareness of those social theories, conclusions on computer system can as well.","parent":"posts/untitled-10-11-2021.txt","score":0.8690681672385875},{"content":"Finally, I want to take my studies more seriously. Next quarter, I am taking upper division classes on statistics for CS, databases, and information interfaces. I am especially excited about the database class, since database design problems were a big part of what I struggled with while building exegesis. I am also excited about the information interfaces class - exegesis is really just one giant information interface, isn't it? I cannot say I am excited about the stats class, I have never been fond of or good at math, but I will try to brave it with a stiff upper lip. I am considering posting my notes for these classes on [[exegesis]], so I can share them with classmates.","parent":"posts/Reflections for the New Year.txt","score":0.8395384934216302},{"content":"Learning Javascript, I never took notes, because all the reference docs were online anyways. Besides, the difficult part of programming isn't remembering APIs, it's the process of taking an idea and building it out, and there's no way to get better at that except by building. There's a reason most university CS courses don't test memorization heavily and instead focus on having students build projects. I suspect this is true for a lot of subjects.","parent":"posts/On tools for thought: knowledge management vs creativity.txt","score":0.8379750563680657},{"content":"I want to learn more code. Working on [[exegesis]] over the course of a year, I saw my coding ability improve substantially. Towards the last 2 months, while rewriting a part of the codebase, I found myself dumbfounded by some of the decisions and patterns I had used a year earlier. The code I wrote towards the end was noticeably cleaner and more maintainable, mostly because I had familiarized myself with [[React]] hooks. Learning NextJS and GraphQL was also very rewarding, and both technologies were used extensively in the final version of exegesis. Looking forwards, I am thinking about learning Go, Clojure and maybe Rust. Go is the most practical one of all these for my purposes, and could open up a lot of job offers. Clojure is the most interesting from a theoretical standpoint, since I've never used a lisp or functional language. Rust is interesting because I hate systems/low-level programming, but I suspect that might only be because I hate C, and maybe Rust's more modern features will sell me on it.","parent":"posts/Reflections for the New Year.txt","score":0.8363670594097744},{"content":"That last project had a significant effect on me. Back in high school, I was heavily involved in Model UN and other political clubs. Making the [game](https://nichwch.itch.io/machinegods) made me realize it was making things and not winning arguments that really made me happier. It was also what convinced me that programming could be something more than rote problem solving, and even be a genuine creative medium. It was why I switched my major from Economics to Computer Science in college.[[personal-reflection]]","parent":"posts/Reflections on exegesis.txt","score":0.8300895994724237},{"content":"The social sciences are infamous for being subject to the \"[double hermeneutic.](https://en.wikipedia.org/wiki/Double_hermeneutic)\" \"Hermeneutic\" means \"understanding\" or \"interpretation.\"  The term double hermeneutic in social science refers to the fact the social sciences study human behavior, but human beings are just as able to study social science. The process of observation goes both ways.","parent":"posts/untitled-10-11-2021.txt","score":0.8291835808586027},{"content":"This is not the case for programming. Making better tools for programming (new languages, new frameworks, new libraries) itself requires programming, and while making programming tools is different in important respects from writing regular programs, it is still programming. Making guitars is not playing guitars, making paints is not painting, but making better programming tools is programming. Programming, then, is an, intrinsically recursive creative medium.","parent":"posts/Prometheus.txt","score":0.8290436799769765},{"content":"To be sure, he thinks there are different respects in which an ontological theory can be simple - so both physicalist, phenomenalist, and Platonic ontologies can all be worth developing. On this matter I agree with him.","parent":"posts/untitled-1-4-2022.txt","score":0.8234415385518298},{"content":"[[Quine]] is a \"formalist\" with regards to ontological theories. [[metaphysics]]","parent":"posts/untitled-1-4-2022.txt","score":0.8222338803380896},{"content":"It is not simplicity alone that makes an ontology desirable, but rather simplicity with regards to some aim or desire. A physicalist ontology makes science easier and simpler to understand. But what makes simple science desirable in the first place? This stems from the uses that science has in shaping the natural world to our desires, and also in a pure human drive for knowledge.","parent":"posts/untitled-1-4-2022.txt","score":0.8215787521760177},{"content":"The AI first operating system of the future already exists - it's called unix. I think the unix philosophy lends itself exceptionally well to the use of AI.","parent":"posts/The AI-first operating system of the future.txt","score":0.8201060114906066},{"content":"Human beings can observe the conclusions that social science reach and modify their behavior, which can potentially render those conclusions invalid. This is a complete impossibility in the natural sciences - an atom cannot learn about atomic theories and change its behavior to invalidate those theories.","parent":"posts/untitled-10-11-2021.txt","score":0.8193594702171836},{"content":"[[meta-acropolis proof of concept]] Maybe do the demo for [[metaphysics]] instead. It's a subject I actually care about, and I'm taking the course this quarter. Also, I finished number theory last quarter and I have no intention of touching it again if I don't have to. testing edits. 5","parent":"posts/untitled-1-4-2022.txt","score":0.8175583299178144},{"content":"Some thoughts on my Operating Systems course.","parent":"posts/untitled-10-11-2021.txt","score":0.817314523709329},{"content":"[[Quine]] believes many different ontologies are worth exploring, and that multiple can be fundamental in their own ways. [[metaphysics]]","parent":"posts/untitled-1-4-2022.txt","score":0.8164656535004902},{"content":"As I read more about concurrency algorithms, however, it looks as if the only way to really compare them is to... study them empirically by actually running them on machines. I'm not sure if there is a mathematical approach to analyzing concurrency, or if it's just out of the scope of our book, but it seems like there isn't - or at least the empirical approach is more practical.","parent":"posts/untitled-10-11-2021.txt","score":0.8159327369381246}],"Then again, the subject of Computer Science's empirical inquiries isn't a natural thing - it's manmade. Everything about a computer is manmade, from the processor to the operating system to the programs that run on it, and as such are subject to human conventions. I'm only half joking when I say this: Isn't computer science actually a social science? ":[{"content":"Then again, the subject of Computer Science's empirical inquiries isn't a natural thing - it's manmade. Everything about a computer is manmade, from the processor to the operating system to the programs that run on it, and as such are subject to human conventions. I'm only half joking when I say this: Isn't computer science actually a social science?","parent":"posts/untitled-10-11-2021.txt","score":1},{"content":"Maybe Computer Science is a social science","parent":"posts/untitled-10-11-2021.txt","score":0.9327985742203462},{"content":"I always thought the name \"Computer Science\" was a misnomer - sciences are empirical, and computer science/programming is something that relies on reason/logic. It feels closer to applied mathematics than it does empirical science.","parent":"posts/untitled-10-11-2021.txt","score":0.9113774831701567},{"content":"Turns out, Computer Science is actually a science","parent":"posts/untitled-10-11-2021.txt","score":0.9089536126515295},{"content":"I think Computer Science is also subject to this double hermeneutic. The best example of this is computer security. Best practices are researched by computer scientists, and strategies against them are developed by security researchers and malicious actors. Conclusions are reached about how to best design computer systems, but these conclusions never last very long, because hostile actors have incentives to disrupt these conclusions. In the same way that social theories can be invalidated by people's awareness of those social theories, conclusions on computer system can as well.","parent":"posts/untitled-10-11-2021.txt","score":0.8895915137527981},{"content":"The social sciences are infamous for being subject to the \"[double hermeneutic.](https://en.wikipedia.org/wiki/Double_hermeneutic)\" \"Hermeneutic\" means \"understanding\" or \"interpretation.\"  The term double hermeneutic in social science refers to the fact the social sciences study human behavior, but human beings are just as able to study social science. The process of observation goes both ways.","parent":"posts/untitled-10-11-2021.txt","score":0.8498995714003214},{"content":"Human beings can observe the conclusions that social science reach and modify their behavior, which can potentially render those conclusions invalid. This is a complete impossibility in the natural sciences - an atom cannot learn about atomic theories and change its behavior to invalidate those theories.","parent":"posts/untitled-10-11-2021.txt","score":0.8459903779320062},{"content":"The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.","parent":"posts/The AI-first operating system of the future.txt","score":0.8360837576272055},{"content":"Some thoughts on my Operating Systems course.","parent":"posts/untitled-10-11-2021.txt","score":0.8343813497848865},{"content":"The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people.","parent":"posts/The AI-first operating system of the future.txt","score":0.8341716031007773},{"content":"In my view, the whole movement of [[tools for thought]] (Roam, personal knowledge management systems, etc, etc.) is to make computers help us think better. That was the point from the very start, it was what Steve Jobs meant when he called the computer \"a bicycle for the mind.\" In the last decade, we've seen the very opposite - the use of the computer as an extractive tool, a weapon to siphon attention and harvest data.","parent":"posts/Controlling what you see.txt","score":0.8313013632829137},{"content":"The AI first operating system of the future already exists - it's called unix. I think the unix philosophy lends itself exceptionally well to the use of AI.","parent":"posts/The AI-first operating system of the future.txt","score":0.8299166451614236},{"content":"That last project had a significant effect on me. Back in high school, I was heavily involved in Model UN and other political clubs. Making the [game](https://nichwch.itch.io/machinegods) made me realize it was making things and not winning arguments that really made me happier. It was also what convinced me that programming could be something more than rote problem solving, and even be a genuine creative medium. It was why I switched my major from Economics to Computer Science in college.[[personal-reflection]]","parent":"posts/Reflections on exegesis.txt","score":0.8259185914803131},{"content":"To be sure, he thinks there are different respects in which an ontological theory can be simple - so both physicalist, phenomenalist, and Platonic ontologies can all be worth developing. On this matter I agree with him.","parent":"posts/untitled-1-4-2022.txt","score":0.8247920707721492},{"content":"Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.","parent":"posts/The AI-first operating system of the future.txt","score":0.8243387008161283},{"content":"It is not simplicity alone that makes an ontology desirable, but rather simplicity with regards to some aim or desire. A physicalist ontology makes science easier and simpler to understand. But what makes simple science desirable in the first place? This stems from the uses that science has in shaping the natural world to our desires, and also in a pure human drive for knowledge.","parent":"posts/untitled-1-4-2022.txt","score":0.8237214280534234},{"content":"There's almost a Jobsian element to what he's saying here. In fact, you could argue that Steve Jobs, with all his hippie/countercultural heritage, belonged to that \"postwar social consensus.\" Could our capitalist reality today give rise to another innovator like Jobs? Of course, I'm sure Mark Fischer was no fan of Apple or Jobs, but it's still an interesting question to raise.","parent":"posts/untitled-9-20-2021.txt","score":0.8225206352216},{"content":"Thinking as social","parent":"posts/untitled-9-24-2021.txt","score":0.822179223095942},{"content":"This is not the case for programming. Making better tools for programming (new languages, new frameworks, new libraries) itself requires programming, and while making programming tools is different in important respects from writing regular programs, it is still programming. Making guitars is not playing guitars, making paints is not painting, but making better programming tools is programming. Programming, then, is an, intrinsically recursive creative medium.","parent":"posts/Prometheus.txt","score":0.8209977796810857},{"content":"The usual way to think about technology, software, and startups is that they solve problems, and so it follows then that the best way to create a new technology is to find a problem people have and solve it. This is not a bad approach to take, and it's been successful for many people. Still, I think it's too narrow.","parent":"posts/Creating new kinds of people.txt","score":0.8208002459286378}],"Some thoughts on my Operating Systems course.":[{"content":"Some thoughts on my Operating Systems course.","parent":"posts/untitled-10-11-2021.txt","score":0.9999999999999998},{"content":"I avoided this IPC-executable approach because I thought it'd be really complicated. To some extent, this was the correct decision - I'm glad I got a MVP of my project out during my time at Recurse.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8593913823538039},{"content":"That last project had a significant effect on me. Back in high school, I was heavily involved in Model UN and other political clubs. Making the [game](https://nichwch.itch.io/machinegods) made me realize it was making things and not winning arguments that really made me happier. It was also what convinced me that programming could be something more than rote problem solving, and even be a genuine creative medium. It was why I switched my major from Economics to Computer Science in college.[[personal-reflection]]","parent":"posts/Reflections on exegesis.txt","score":0.8448462250941118},{"content":"The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people.","parent":"posts/The AI-first operating system of the future.txt","score":0.8435341585293604},{"content":"The AI first operating system of the future already exists - it's called unix. I think the unix philosophy lends itself exceptionally well to the use of AI.","parent":"posts/The AI-first operating system of the future.txt","score":0.8409299980437521},{"content":"Finally, I want to take my studies more seriously. Next quarter, I am taking upper division classes on statistics for CS, databases, and information interfaces. I am especially excited about the database class, since database design problems were a big part of what I struggled with while building exegesis. I am also excited about the information interfaces class - exegesis is really just one giant information interface, isn't it? I cannot say I am excited about the stats class, I have never been fond of or good at math, but I will try to brave it with a stiff upper lip. I am considering posting my notes for these classes on [[exegesis]], so I can share them with classmates.","parent":"posts/Reflections for the New Year.txt","score":0.8395797198177576},{"content":"I want to learn more code. Working on [[exegesis]] over the course of a year, I saw my coding ability improve substantially. Towards the last 2 months, while rewriting a part of the codebase, I found myself dumbfounded by some of the decisions and patterns I had used a year earlier. The code I wrote towards the end was noticeably cleaner and more maintainable, mostly because I had familiarized myself with [[React]] hooks. Learning NextJS and GraphQL was also very rewarding, and both technologies were used extensively in the final version of exegesis. Looking forwards, I am thinking about learning Go, Clojure and maybe Rust. Go is the most practical one of all these for my purposes, and could open up a lot of job offers. Clojure is the most interesting from a theoretical standpoint, since I've never used a lisp or functional language. Rust is interesting because I hate systems/low-level programming, but I suspect that might only be because I hate C, and maybe Rust's more modern features will sell me on it.","parent":"posts/Reflections for the New Year.txt","score":0.8354639538209148},{"content":"Priority 1: Code-related creative work (continue work on exegesis, other personal projects, learn more code, write more)","parent":"posts/Goals for Spring Quarter.txt","score":0.8348646808026717},{"content":"The main focus here is personal projects - learning more code and writing more are auxiliary activities that help this end. First among these personal projects is [[exegesis]], but I have a number of other personal projects that I want to work on as well.","parent":"posts/Goals for Spring Quarter.txt","score":0.8346229256587088},{"content":"Then again, the subject of Computer Science's empirical inquiries isn't a natural thing - it's manmade. Everything about a computer is manmade, from the processor to the operating system to the programs that run on it, and as such are subject to human conventions. I'm only half joking when I say this: Isn't computer science actually a social science?","parent":"posts/untitled-10-11-2021.txt","score":0.8343813497848865},{"content":"These are just the features I'd like to publish by the beta release. Tentatively, I think I can get this done by the end of January, but my course load this quarter might delay that.","parent":"posts/Roadmap to exegesis' beta release.txt","score":0.8341697407847016},{"content":"Maybe Computer Science is a social science","parent":"posts/untitled-10-11-2021.txt","score":0.8340205816467223},{"content":"Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.","parent":"posts/The AI-first operating system of the future.txt","score":0.8334998489067328},{"content":"Learn more code (new languages, new frameworks, new databases, fancy tech like blockchain and ML, etc. etc.)","parent":"posts/Goals for Spring Quarter.txt","score":0.8316390409213187},{"content":"This morning I was listening to a podcast suggested by [[Linus Lee]] - Changelog. I don't usually listen to podcasts, but I have had good experiences with audiobooks in the past. It was nice being able to absorb information over breakfast without staring at a screen. The subject material was interesting; it was some CMU professor doing research on individual programmers and the myth of the \"10x developer.\"","parent":"posts/untitled-9-20-2021.txt","score":0.830879908239652},{"content":"The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.","parent":"posts/The AI-first operating system of the future.txt","score":0.8305686095650727},{"content":"Turns out, Computer Science is actually a science","parent":"posts/untitled-10-11-2021.txt","score":0.8302416503626304},{"content":"I do think it's far from clear which schedule is better, at least personally speaking.[[focus]] [[personal-reflection]]","parent":"posts/untitled-10-1-2021.txt","score":0.829239271415002},{"content":"Thoughts on the book","parent":"posts/untitled-2-6-2022.txt","score":0.8290575470120687},{"content":"I desperately want programming to feel like this.","parent":"posts/Fragments.txt","score":0.8288446400818424}],"This actually rings somewhat true to me! ":[{"content":"This actually rings somewhat true to me!","parent":"posts/untitled-10-11-2021.txt","score":1.0000000000000002},{"content":"I have an instinctive negative reaction against any sort of philosophy that preaches against personal identity/ego. The psychological reason for this is probably that I am a proud person. [[personal-reflection]]","parent":"posts/untitled-2-6-2022.txt","score":0.8260567951681179},{"content":"I feel open to the future. I feel that there is meaning in this world, even if I don't know what it is currently, and it may be impossible to pin it down with words. I feel that the bad things that happen in this world do not lead to the conclusion that the world is a bad place. I feel ok not being able to explain everything. I feel I have something valuable to offer to others, I feel others have something valuable to offer to me. Change seems possible, albeit slow, and slowness feels OK.","parent":"posts/untitled-9-30-2021.txt","score":0.817206043481438},{"content":"Some incredibly interesting excerpts I want to quote directly (emphases all mine):","parent":"posts/untitled-9-20-2021.txt","score":0.8166002902606057},{"content":"I follow this [guy on twitter](https://twitter.com/nickcammarata) ([[nick-cammarata]]) that tweets about happiness a lot, and a common theme seems to be noticing what well being is, and imagining what the highest well being feels like.","parent":"posts/untitled-9-30-2021.txt","score":0.8164589822615139},{"content":"I've instead chosen to cluster them in groups, and rank the groups.","parent":"posts/Goals for Spring Quarter.txt","score":0.8163270748920047},{"content":"That was an interesting reply, and it really got me thinking. She said something along the lines of [[twitter]] being her favorite [[tools for thought]].","parent":"posts/untitled-9-24-2021.txt","score":0.8113397072168888},{"content":"It's been rewarding seeing how the more [[philosophy]] I read, the more complex texts I'm able to understand. I think the [[metaphysics]] class I'm taking right now has helped illuminate some of the concepts as well.","parent":"posts/untitled-2-6-2022.txt","score":0.8077353580518691},{"content":"Some thoughts from this morning. Sitting in the Peet's cafe near the gym at UC Davis, listening to 80s synthwave.","parent":"posts/untitled-9-21-2021.txt","score":0.8061776864301141},{"content":"I feel pretty good right now, so I want to write down how it feels, so I can feel this way more often.","parent":"posts/untitled-9-30-2021.txt","score":0.8055947882238206},{"content":"\"Consider how each individual is affected by an overall philosophical justification of his way of living and thinking: he experiences it as a sun that shines especially for him and bestows warmth, blessings, and fertility on him; it makes him independent of praise and blame, self-sufficient, rich, liberal with happiness and good will; incessantly it refashions evil into good, leads all energies to bloom and ripen, and does not permit the petty weeds of grief and chagrin to come up at all. In the end one exclaims: How I wish that many such new suns were yet to be created! Those who are evil or unhappy and the exceptional human being - all these should also have their philosophy, their good right, their sunshine! What is needful is not pity for them. We must learn to abandon this arrogant fancy, however long humanity has hitherto spent learning and practicing it...","parent":"posts/Why I made exegesis.txt","score":0.8053640644652956},{"content":"I'm reminded of the [[Nietzsche]]an theme of self awareness/consciousness being a sickness that he riffs upon occasionally in [[The Gay Science]].","parent":"posts/Strategic blindness.txt","score":0.805323388186803},{"content":"Having done this daily exegesis braindump [[journal]] thing for a bit, I think there's something of value to her response. I get down my thoughts *easier* in my journal posts than I do in my private exegesis posts.","parent":"posts/untitled-9-24-2021.txt","score":0.8030426202139114},{"content":"None of the above. I got a targeted Facebook ad for Fender's free online guitar course. I remember this very distinctly as the moment I decided to learn guitar; I had never really thought much about it at all before that. Deep within the entrails of Facebook's recommendation engine, some algorithm made an educated guess that I'd enjoy picking up the guitar - and it was right. For all the horrible things Facebook has done, this was a real positive-sum, Pareto optimal moment. Zuck got his advertising check, and I got a new hobby. And for all that has been blamed on the internet, I owe it everything. Everything that I love doing, I have learned to some extent from the internet, whether it be the web development skills that I built exegesis with, my amateur interest in philosophy, my childhood love for art, or my newfound interest in guitar. I believe it is mankind's most beautiful invention.","parent":"posts/Giant Robots.txt","score":0.8028456476079326},{"content":"2. My critique here is nothing original - it echoes a lot of what Andy [[Matuschak]] and [[Linus Lee]] have touched upon in their essays. Here's a brief excerpt from [Linus' blog post](https://thesephist.com/posts/browser/) that expresses the point more eloquently:","parent":"posts/On tools for thought: knowledge management vs creativity.txt","score":0.8007527234072284},{"content":"Consider two things I think to be missing from modern music: context and community. While its nothing compared to live music, I think certain Youtube videos capture these elements in a novel and exciting way.","parent":"posts/Context and community makes music more enjoyable, and it's missing from modern streaming services.txt","score":0.8006675372282271}],"As I read more about concurrency algorithms, however, it looks as if the only way to really compare them is to... study them empirically by actually running them on machines. I'm not sure if there is a mathematical approach to analyzing concurrency, or if it's just out of the scope of our book, but it seems like there isn't - or at least the empirical approach is more practical. ":[{"content":"As I read more about concurrency algorithms, however, it looks as if the only way to really compare them is to... study them empirically by actually running them on machines. I'm not sure if there is a mathematical approach to analyzing concurrency, or if it's just out of the scope of our book, but it seems like there isn't - or at least the empirical approach is more practical.","parent":"posts/untitled-10-11-2021.txt","score":0.9999999999999998},{"content":"Working on a refactor for [[exegesis]] and [[synesthesia]], thinking about how to budget time. Working strategy is to take estimate for each feature, and double the time for each to account for stupid roadblocks (wifi not working, interrupted by something, bad documentation, etc. etc.) [[code]] [[devlog]]","parent":"posts/untitled-9-21-2021.txt","score":0.8364616605526549},{"content":"I do think it's far from clear which schedule is better, at least personally speaking.[[focus]] [[personal-reflection]]","parent":"posts/untitled-10-1-2021.txt","score":0.8201698530153153},{"content":"I always thought the name \"Computer Science\" was a misnomer - sciences are empirical, and computer science/programming is something that relies on reason/logic. It feels closer to applied mathematics than it does empirical science.","parent":"posts/untitled-10-11-2021.txt","score":0.8159327369381246},{"content":"I'm convinced that algorithmic feeds are poisonous. Algorithmic feeds in apps are like cocaine in old medicines or asbestos in buildings, and someday they'll be seen to be just as barbaric.","parent":"posts/Controlling what you see.txt","score":0.8158183805686356},{"content":"It is this property that allows programmers to cheat the Gods, and achieve divine levels of creative output thought forbidden to mortals. A programmer can create abstractions than enable them to create in days what previously took months. I myself rewrote a good part of exegesis 2 months before I released it, and the new abstractions I picked enabled me to redo in those 2 months what took me almost a year at first. Moreover, programmers can share their abstractions, and borrow the inventions of others as well.","parent":"posts/Prometheus.txt","score":0.8138381366334688},{"content":"Why did it take so long? Part of it is just a lack of experience. While making exegesis, I changed the database schema countless times, wrote dozens of migrations, accidentally wiped my database once (thank God for RDS backups), and rewrote the backend from scratch 2 months before release. There was also a good amount of feature creep. Whenever I thought I was close to finished, something unexpected would pop up - I started writing this essay 3 months before I actually released exegesis. Whatever the reason, if you count development time on the predecessor to exegesis, I've spent almost a tenth of my life building this. The entire project clocks in at a couple thousand lines of code. It is the largest, most complex, and most difficult thing I have built so far in my life.  [The last time I worked on a project this long, it was the first video game I made back in my senior year of high school.](https://medium.com/@nichwch/machine-gods-devlog-1-166dff474366) Even then, it was really about 6 months of development total, with a huge gap in between because of school, and it was all made with no-code game development tools, because back then the idea of using actual code terrified me. [[exegesis]] [[personal-reflection]]","parent":"posts/Reflections on exegesis.txt","score":0.8127576265227248},{"content":"None of these thoughts will be very organized. That's kind of the point of [[exegesis]] anyways - to enable non linear, disorganized thinking.","parent":"posts/untitled-9-20-2021.txt","score":0.8126635413365472},{"content":"I think Computer Science is also subject to this double hermeneutic. The best example of this is computer security. Best practices are researched by computer scientists, and strategies against them are developed by security researchers and malicious actors. Conclusions are reached about how to best design computer systems, but these conclusions never last very long, because hostile actors have incentives to disrupt these conclusions. In the same way that social theories can be invalidated by people's awareness of those social theories, conclusions on computer system can as well.","parent":"posts/untitled-10-11-2021.txt","score":0.8123163191851261},{"content":"Actually, I'm not sure which I prefer yet. I have noticed, however, that sometimes I'll sit down to work for 2 hours, and proceed to waste it all, until the last 20 minutes or so, when I become desperate to get something done so the entire period wasn't a waste of time. That 20 minutes is often incredibly productive. When I only have pockets of 30 minute breaks throughout the day to work on a project, it's like every break is that last 20 minutes of a 2 hour work period. Or not, sometimes I end up getting nothing done, wishing I had 2 hours to do deep, focused work. [[focus]] [[personal-reflection]]","parent":"posts/untitled-10-1-2021.txt","score":0.8095386497901528},{"content":"I want to learn more code. Working on [[exegesis]] over the course of a year, I saw my coding ability improve substantially. Towards the last 2 months, while rewriting a part of the codebase, I found myself dumbfounded by some of the decisions and patterns I had used a year earlier. The code I wrote towards the end was noticeably cleaner and more maintainable, mostly because I had familiarized myself with [[React]] hooks. Learning NextJS and GraphQL was also very rewarding, and both technologies were used extensively in the final version of exegesis. Looking forwards, I am thinking about learning Go, Clojure and maybe Rust. Go is the most practical one of all these for my purposes, and could open up a lot of job offers. Clojure is the most interesting from a theoretical standpoint, since I've never used a lisp or functional language. Rust is interesting because I hate systems/low-level programming, but I suspect that might only be because I hate C, and maybe Rust's more modern features will sell me on it.","parent":"posts/Reflections for the New Year.txt","score":0.8095319740929218},{"content":"The future of rational tools for thought and PKMs probably look a lot less like [[roam]], and [more like projects that use AI to automatically link subjects for you](https://thesephist.com/posts/browser/). 2","parent":"posts/On tools for thought: knowledge management vs creativity.txt","score":0.8095032889198884},{"content":"This is not the case for programming. Making better tools for programming (new languages, new frameworks, new libraries) itself requires programming, and while making programming tools is different in important respects from writing regular programs, it is still programming. Making guitars is not playing guitars, making paints is not painting, but making better programming tools is programming. Programming, then, is an, intrinsically recursive creative medium.","parent":"posts/Prometheus.txt","score":0.8087571713469396},{"content":"It uses neural search to show you how your ideas are connected to each other. This is done offline and privately on your computer, entirely on your machine.","parent":"posts/What is Nomad Hypertext.txt","score":0.8080877785231911},{"content":"There is at least one creative medium for which this is not true, however, and that is programming. Here is a unique and strange property of programming: Making tools to program better itself involves programming. This is not true for music or art - the process of making a guitar is not the art of playing the guitar, the process of making paints is not the art of painting, and while luthiers and paint-makers are certainly artists in their own right (and are often good at playing the guitar and painting, respectively), they practice an art that is distinct from the art that they enable.","parent":"posts/Prometheus.txt","score":0.8072822463649001},{"content":"I've noticed a huge productivity problem for me is not being able to decompose tasks effectively. If I'm in a focused state of mind, this is easy and I can get work done. If I'm not, then something as simple as getting out of bed becomes difficult, because even getting out of bed constitutes a number of distinct tasks that need to be separated and ordered and then executed - physically getting out of bed, brushing my teeth, putting in my contacts, making breakfast, etc. etc. [[focus]] [[focus-machine]] [[ideas]]","parent":"posts/untitled-9-24-2021.txt","score":0.8072567378032287},{"content":"Our minds were not built to handle such vast volumes of information. Faced with these unnatural circumstances, we turn towards external methods of storing and processing information colloquially referred to as \"notetaking,\" but existing notetaking methods, trapped in outdated dogma, can offer us little help. In most notetaking apps some abstraction of a \"notebook\" remains, a skeuomorphic ghost from our information-scarce past. Put your math thoughts in your math notebook. Put your science notes in your science notebook. Don't think thoughts out of order, or you'll have to switch notebooks to write them down. This notetaking paradigm comes from an age when the primary medium of information was a book, a single, continuous stream of information about a single topic.","parent":"posts/Manifesto.txt","score":0.8059167667002377},{"content":"The results were... mixed. I did get to move faster at the start, but started running into more and more type-related bugs as development went on. If I were to do this project again, I'd stick to Typescript.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8056035085613448},{"content":"As far as learning more code goes, I want to branch out beyond full-stack web development. The two \"trendy\" technologies I'd like to learn more about are blockchain and AI/ML. For the former, I want to learn more about Ethereum development, and for the latter, I want to review some basic linear algebra before adventuring further. I've heard good things about [huggingface](https://huggingface.co/), and want to explore that further. I want to spend some time learning about these technologies around 3 times a week, maybe for an hour or two a session.","parent":"posts/Goals for Spring Quarter.txt","score":0.8041634348471333},{"content":"Working on exegesis was a grueling affair at times. I rewrote the schema multiple times, rewrote the backend from scratch 2 months before release, chased countless UI bugs, and manually patched abandoned NPM packages. Part of it may have been due to my inexperience, but [working with ](https://nichwch.medium.com/making-yana-e3fade3f56e7)[rich text](https://medium.engineering/why-contenteditable-is-terrible-122d8a40e480) is just a [difficult task](https://twitter.com/thesephist/status/1360298464349999108), period. At one point, I considered giving up after finding a rival writing app I thought I simply couldn't compete with - I have a copy of an unfinished essay I started writing on why I had given up tucked away somewhere.","parent":"posts/Prometheus.txt","score":0.8041590161647557}],"The social sciences are infamous for being subject to the \"[double hermeneutic.](https://en.wikipedia.org/wiki/Double_hermeneutic)\" \"Hermeneutic\" means \"understanding\" or \"interpretation.\"  The term double hermeneutic in social science refers to the fact the social sciences study human behavior, but human beings are just as able to study social science. The process of observation goes both ways.":[{"content":"The social sciences are infamous for being subject to the \"[double hermeneutic.](https://en.wikipedia.org/wiki/Double_hermeneutic)\" \"Hermeneutic\" means \"understanding\" or \"interpretation.\"  The term double hermeneutic in social science refers to the fact the social sciences study human behavior, but human beings are just as able to study social science. The process of observation goes both ways.","parent":"posts/untitled-10-11-2021.txt","score":1},{"content":"I think Computer Science is also subject to this double hermeneutic. The best example of this is computer security. Best practices are researched by computer scientists, and strategies against them are developed by security researchers and malicious actors. Conclusions are reached about how to best design computer systems, but these conclusions never last very long, because hostile actors have incentives to disrupt these conclusions. In the same way that social theories can be invalidated by people's awareness of those social theories, conclusions on computer system can as well.","parent":"posts/untitled-10-11-2021.txt","score":0.8972189298316617},{"content":"Maybe Computer Science is a social science","parent":"posts/untitled-10-11-2021.txt","score":0.8559825456003234},{"content":"Human beings can observe the conclusions that social science reach and modify their behavior, which can potentially render those conclusions invalid. This is a complete impossibility in the natural sciences - an atom cannot learn about atomic theories and change its behavior to invalidate those theories.","parent":"posts/untitled-10-11-2021.txt","score":0.8557236609045917},{"content":"Then again, the subject of Computer Science's empirical inquiries isn't a natural thing - it's manmade. Everything about a computer is manmade, from the processor to the operating system to the programs that run on it, and as such are subject to human conventions. I'm only half joking when I say this: Isn't computer science actually a social science?","parent":"posts/untitled-10-11-2021.txt","score":0.8498995714003214},{"content":"I always thought the name \"Computer Science\" was a misnomer - sciences are empirical, and computer science/programming is something that relies on reason/logic. It feels closer to applied mathematics than it does empirical science.","parent":"posts/untitled-10-11-2021.txt","score":0.8291835808586027},{"content":"[[Quine]] believes many different ontologies are worth exploring, and that multiple can be fundamental in their own ways. [[metaphysics]]","parent":"posts/untitled-1-4-2022.txt","score":0.8181979976754874},{"content":"Thinking as social","parent":"posts/untitled-9-24-2021.txt","score":0.818082137765912},{"content":"I've been reading Betraying Spinoza by Rebecca Goldstein. It's really good so far, an interesting combination of describing Spinoza the person biographically, describing his philosophy, and describing the tensions between those two aims.","parent":"posts/untitled-2-6-2022.txt","score":0.8167495919603589},{"content":"[[roam]] is a tool for rational thought. More broadly, any tool that subscribes to something like a Zettelkasten or Evergreen notes philosophy is a tool for rational thought. The selling point of a tool for rational thought is to manage knowledge - no wonder, since another commonly used name for these tools is PKM (Personal Knowledge Management).","parent":"posts/On tools for thought: knowledge management vs creativity.txt","score":0.8155869979766737},{"content":"Turns out, Computer Science is actually a science","parent":"posts/untitled-10-11-2021.txt","score":0.8107187546502136},{"content":"Epistemology vs Aesthetics/Ethics","parent":"posts/untitled-9-30-2021.txt","score":0.8101249099794066},{"content":"My aim in reading [[philosophy]] is more for general intellectual enrichment and to provide insights into my work, not philosophy for its own sake, so I feel fine with reading summaries as opposed to heavy primary literature (except where the primary literature interests me). For thinkers who are influential that don't interest me very much (like Kant), I've found summaries from the very short series and the Stanford Encyclopedia of Philosophy to be very helpful.","parent":"posts/untitled-9-21-2021.txt","score":0.8099995856162573},{"content":"In the real world, it looks like the aesthetic frame of mind matters more. How much conviction someone has in their values affects their motivations for truths, with the result that we're functionally much smarter when working on things we care about, and probe unfathomable depths of stupidity when doing things we don't care about.","parent":"posts/untitled-9-30-2021.txt","score":0.8071870440064397},{"content":"[[philosophy]] [[deleuze]]","parent":"posts/untitled-9-30-2021.txt","score":0.8071648150689029},{"content":"In any case, it seems appropriate to begin [[meta-acropolis]], a project concerned with educational ontology with [[metaphysics]], the umbrella subject ontology is grouped under.","parent":"posts/untitled-1-4-2022.txt","score":0.8066926108869273},{"content":"[https://www.davidbcalhoun.com/2016/quine-and-heidegger-against-reductionism/](https://www.davidbcalhoun.com/2016/quine-and-heidegger-against-reductionism/) [[reading-list]] [[metaphysics]]","parent":"posts/untitled-1-4-2022.txt","score":0.8051759990392889},{"content":"It is not simplicity alone that makes an ontology desirable, but rather simplicity with regards to some aim or desire. A physicalist ontology makes science easier and simpler to understand. But what makes simple science desirable in the first place? This stems from the uses that science has in shaping the natural world to our desires, and also in a pure human drive for knowledge.","parent":"posts/untitled-1-4-2022.txt","score":0.805047670615408},{"content":"An interesting contrast here, because as Goldstein herself admits, her project aims to understand Spinoza the man, going directly against his radically self effacing philosophy.","parent":"posts/untitled-2-6-2022.txt","score":0.8048149921073915},{"content":"2. My critique here is nothing original - it echoes a lot of what Andy [[Matuschak]] and [[Linus Lee]] have touched upon in their essays. Here's a brief excerpt from [Linus' blog post](https://thesephist.com/posts/browser/) that expresses the point more eloquently:","parent":"posts/On tools for thought: knowledge management vs creativity.txt","score":0.8046233641010606}],"Maybe Computer Science is a social science":[{"content":"Maybe Computer Science is a social science","parent":"posts/untitled-10-11-2021.txt","score":0.9999999999999999},{"content":"Then again, the subject of Computer Science's empirical inquiries isn't a natural thing - it's manmade. Everything about a computer is manmade, from the processor to the operating system to the programs that run on it, and as such are subject to human conventions. I'm only half joking when I say this: Isn't computer science actually a social science?","parent":"posts/untitled-10-11-2021.txt","score":0.9327985742203462},{"content":"Turns out, Computer Science is actually a science","parent":"posts/untitled-10-11-2021.txt","score":0.9221794247010071},{"content":"I always thought the name \"Computer Science\" was a misnomer - sciences are empirical, and computer science/programming is something that relies on reason/logic. It feels closer to applied mathematics than it does empirical science.","parent":"posts/untitled-10-11-2021.txt","score":0.9066690403738026},{"content":"I think Computer Science is also subject to this double hermeneutic. The best example of this is computer security. Best practices are researched by computer scientists, and strategies against them are developed by security researchers and malicious actors. Conclusions are reached about how to best design computer systems, but these conclusions never last very long, because hostile actors have incentives to disrupt these conclusions. In the same way that social theories can be invalidated by people's awareness of those social theories, conclusions on computer system can as well.","parent":"posts/untitled-10-11-2021.txt","score":0.8859298445502319},{"content":"Thinking as social","parent":"posts/untitled-9-24-2021.txt","score":0.8589117991488237},{"content":"The social sciences are infamous for being subject to the \"[double hermeneutic.](https://en.wikipedia.org/wiki/Double_hermeneutic)\" \"Hermeneutic\" means \"understanding\" or \"interpretation.\"  The term double hermeneutic in social science refers to the fact the social sciences study human behavior, but human beings are just as able to study social science. The process of observation goes both ways.","parent":"posts/untitled-10-11-2021.txt","score":0.8559825456003234},{"content":"That last project had a significant effect on me. Back in high school, I was heavily involved in Model UN and other political clubs. Making the [game](https://nichwch.itch.io/machinegods) made me realize it was making things and not winning arguments that really made me happier. It was also what convinced me that programming could be something more than rote problem solving, and even be a genuine creative medium. It was why I switched my major from Economics to Computer Science in college.[[personal-reflection]]","parent":"posts/Reflections on exegesis.txt","score":0.847278504739909},{"content":"The shift from normal school (Society of Discipline) to online school (Society of Control) back to normal school (Society of Discipline) has vividly illustrated the difference between the two. Tentatively, I'd say I say I prefer in person.","parent":"posts/untitled-9-30-2021.txt","score":0.8358122799484017},{"content":"Some thoughts on my Operating Systems course.","parent":"posts/untitled-10-11-2021.txt","score":0.8340205816467223},{"content":"Human beings can observe the conclusions that social science reach and modify their behavior, which can potentially render those conclusions invalid. This is a complete impossibility in the natural sciences - an atom cannot learn about atomic theories and change its behavior to invalidate those theories.","parent":"posts/untitled-10-11-2021.txt","score":0.8319431294511704},{"content":"Finally, I want to take my studies more seriously. Next quarter, I am taking upper division classes on statistics for CS, databases, and information interfaces. I am especially excited about the database class, since database design problems were a big part of what I struggled with while building exegesis. I am also excited about the information interfaces class - exegesis is really just one giant information interface, isn't it? I cannot say I am excited about the stats class, I have never been fond of or good at math, but I will try to brave it with a stiff upper lip. I am considering posting my notes for these classes on [[exegesis]], so I can share them with classmates.","parent":"posts/Reflections for the New Year.txt","score":0.8314839092569095},{"content":"But the feed has replaced the book as society's primary medium of information. Content flows in a stream, in no particular order, organized according to no specific topic - scrolling down some app, one may be confronted with content regarding math, science, politics, humor, or entertainment in any order. With or without our consent, our minds have been soldered to the system, programmed by all-powerful recommendation algorithms to swallow ever-increasing quantities of information.","parent":"posts/Manifesto.txt","score":0.8298799714475653},{"content":"The future of rational tools for thought and PKMs probably look a lot less like [[roam]], and [more like projects that use AI to automatically link subjects for you](https://thesephist.com/posts/browser/). 2","parent":"posts/On tools for thought: knowledge management vs creativity.txt","score":0.8285821623931583},{"content":"In my view, the whole movement of [[tools for thought]] (Roam, personal knowledge management systems, etc, etc.) is to make computers help us think better. That was the point from the very start, it was what Steve Jobs meant when he called the computer \"a bicycle for the mind.\" In the last decade, we've seen the very opposite - the use of the computer as an extractive tool, a weapon to siphon attention and harvest data.","parent":"posts/Controlling what you see.txt","score":0.8274091490508146},{"content":"The AI first operating system of the future already exists - it's called unix. I think the unix philosophy lends itself exceptionally well to the use of AI.","parent":"posts/The AI-first operating system of the future.txt","score":0.8265421609105814},{"content":"Here's a radical statement: All applications should be tools for thought. Facebook should be a tool for keeping up with friends, Instagram should be a tool for browsing and sharing photographs. [[tools for thought]] [[Manifesto]]","parent":"posts/Controlling what you see.txt","score":0.8250025810183881},{"content":"There's almost a Jobsian element to what he's saying here. In fact, you could argue that Steve Jobs, with all his hippie/countercultural heritage, belonged to that \"postwar social consensus.\" Could our capitalist reality today give rise to another innovator like Jobs? Of course, I'm sure Mark Fischer was no fan of Apple or Jobs, but it's still an interesting question to raise.","parent":"posts/untitled-9-20-2021.txt","score":0.8241766996995643},{"content":"we live in a society","parent":"posts/untitled-9-30-2021.txt","score":0.8236046843768585},{"content":"I want to learn more code. Working on [[exegesis]] over the course of a year, I saw my coding ability improve substantially. Towards the last 2 months, while rewriting a part of the codebase, I found myself dumbfounded by some of the decisions and patterns I had used a year earlier. The code I wrote towards the end was noticeably cleaner and more maintainable, mostly because I had familiarized myself with [[React]] hooks. Learning NextJS and GraphQL was also very rewarding, and both technologies were used extensively in the final version of exegesis. Looking forwards, I am thinking about learning Go, Clojure and maybe Rust. Go is the most practical one of all these for my purposes, and could open up a lot of job offers. Clojure is the most interesting from a theoretical standpoint, since I've never used a lisp or functional language. Rust is interesting because I hate systems/low-level programming, but I suspect that might only be because I hate C, and maybe Rust's more modern features will sell me on it.","parent":"posts/Reflections for the New Year.txt","score":0.8230628547895245}],"Human beings can observe the conclusions that social science reach and modify their behavior, which can potentially render those conclusions invalid. This is a complete impossibility in the natural sciences - an atom cannot learn about atomic theories and change its behavior to invalidate those theories. ":[{"content":"Human beings can observe the conclusions that social science reach and modify their behavior, which can potentially render those conclusions invalid. This is a complete impossibility in the natural sciences - an atom cannot learn about atomic theories and change its behavior to invalidate those theories.","parent":"posts/untitled-10-11-2021.txt","score":1},{"content":"I think Computer Science is also subject to this double hermeneutic. The best example of this is computer security. Best practices are researched by computer scientists, and strategies against them are developed by security researchers and malicious actors. Conclusions are reached about how to best design computer systems, but these conclusions never last very long, because hostile actors have incentives to disrupt these conclusions. In the same way that social theories can be invalidated by people's awareness of those social theories, conclusions on computer system can as well.","parent":"posts/untitled-10-11-2021.txt","score":0.8609220328773797},{"content":"The social sciences are infamous for being subject to the \"[double hermeneutic.](https://en.wikipedia.org/wiki/Double_hermeneutic)\" \"Hermeneutic\" means \"understanding\" or \"interpretation.\"  The term double hermeneutic in social science refers to the fact the social sciences study human behavior, but human beings are just as able to study social science. The process of observation goes both ways.","parent":"posts/untitled-10-11-2021.txt","score":0.8557236609045917},{"content":"Then again, the subject of Computer Science's empirical inquiries isn't a natural thing - it's manmade. Everything about a computer is manmade, from the processor to the operating system to the programs that run on it, and as such are subject to human conventions. I'm only half joking when I say this: Isn't computer science actually a social science?","parent":"posts/untitled-10-11-2021.txt","score":0.8459903779320062},{"content":"It's like an excess of rationality always ends eating itself. Those who take rationality serious enough end up directing rational criticism at rationality itself - a dynamic similar to what [[Nietzsche]] thought had happened to Christianity (that Christianity bore the value of truth-seeking, which ended up being turned against it).","parent":"posts/untitled-9-21-2021.txt","score":0.840837143622048},{"content":"In the real world, it looks like the aesthetic frame of mind matters more. How much conviction someone has in their values affects their motivations for truths, with the result that we're functionally much smarter when working on things we care about, and probe unfathomable depths of stupidity when doing things we don't care about.","parent":"posts/untitled-9-30-2021.txt","score":0.8371532736023428},{"content":"It is not simplicity alone that makes an ontology desirable, but rather simplicity with regards to some aim or desire. A physicalist ontology makes science easier and simpler to understand. But what makes simple science desirable in the first place? This stems from the uses that science has in shaping the natural world to our desires, and also in a pure human drive for knowledge.","parent":"posts/untitled-1-4-2022.txt","score":0.8370023642678355},{"content":"In the introduction to the [[Habermas]] book, the author briefly discusses the Critical Theorists he spent his youth with, and how they believed rationality was man's only hope for emancipation. However, they also believed rationality had devolved into \"instrumental rationality\" - a kind of ruthlessly utilitarian rationality - that would also end up dooming mankind. Because of this contradiction, the Critical Theorists became extremely pessimistic.","parent":"posts/untitled-9-21-2021.txt","score":0.8360474658880612},{"content":"Psychology, ethics, and game theory are diverse fields that all point towards blindness being situationally useful. All fields relate to human action, so maybe it's possible to generalize this on that level.","parent":"posts/Strategic blindness.txt","score":0.834969796951782},{"content":"Epistemology vs Aesthetics/Ethics","parent":"posts/untitled-9-30-2021.txt","score":0.8323465922669119},{"content":"Maybe Computer Science is a social science","parent":"posts/untitled-10-11-2021.txt","score":0.8319431294511704},{"content":"Thinking as social","parent":"posts/untitled-9-24-2021.txt","score":0.8318550875760912},{"content":"Speaking of which, Fischer has something to say on the social prerequisites for innovation. \"[I]t is now clear that a certain amount of stability is necessary for cultural vibrancy, the question to be asked is: how can this stability be provided, and by what agencies?\" His tentative answer to this is \"a public space that is not reducible to an aggregation of individuals and their interests\" (see the quote above where he says some innovations are impossible because the public has been displaced by the consumer) [[mark-fischer]] [[quotes]] [[Capitalist-Realism]]","parent":"posts/untitled-9-20-2021.txt","score":0.8287118605796274},{"content":"However, the world has been designed for the first kind of thinking. So far,  our institutions and our tools have been designed for linear thought, not non-linear thought - not necessarily out of malice, but because our tools for organizing information (books) were stuck being linear for so long. As a result of this, non-linear thinkers have developed a kind of bad conscience - we view disorganized thinking as a problem to remedy. We build tools to rid ourselves of nonlinear thinking, never to embrace it.","parent":"posts/Why I made exegesis.txt","score":0.8276836916489878},{"content":"\"Consider how each individual is affected by an overall philosophical justification of his way of living and thinking: he experiences it as a sun that shines especially for him and bestows warmth, blessings, and fertility on him; it makes him independent of praise and blame, self-sufficient, rich, liberal with happiness and good will; incessantly it refashions evil into good, leads all energies to bloom and ripen, and does not permit the petty weeds of grief and chagrin to come up at all. In the end one exclaims: How I wish that many such new suns were yet to be created! Those who are evil or unhappy and the exceptional human being - all these should also have their philosophy, their good right, their sunshine! What is needful is not pity for them. We must learn to abandon this arrogant fancy, however long humanity has hitherto spent learning and practicing it...","parent":"posts/Why I made exegesis.txt","score":0.8275346133081906},{"content":"The problem with the view that technology is meant to solve problems is that technology always ends up doing so much more than that. Take any technology and its original intended purpose (fire, automobiles, airplanes, etc.) and you will find it has created a cascade of second order effects far beyond what it was originally intended to do. Sometimes these impacts are good, sometimes they're bad, sometimes they're just strange.","parent":"posts/Creating new kinds of people.txt","score":0.8272030067181491},{"content":"\"The tiniest event can tear a hole in the grey curtain of reaction which has marked the horizons of possibility under capitalist realism. From a situation in which nothing can happen, suddenly anything is possible again.\"[[personal-reflection]] [[quotes]] [[Capitalist-Realism]]","parent":"posts/untitled-9-20-2021.txt","score":0.8270033721751158},{"content":"To be sure, he thinks there are different respects in which an ontological theory can be simple - so both physicalist, phenomenalist, and Platonic ontologies can all be worth developing. On this matter I agree with him.","parent":"posts/untitled-1-4-2022.txt","score":0.8268120290760553},{"content":"Tools for rational thought","parent":"posts/On tools for thought: knowledge management vs creativity.txt","score":0.8264331677117144},{"content":"The auteur believes otherwise. Language, he says, cannot communicate an idea without botching it. And if communicating an idea were not bad enough, mediating between multiple ideas using as flawed a tool as language is immeasurably worse.","parent":"posts/On auteurs and language.txt","score":0.8246270101679695}]," ":[{"content":"Building tools","parent":"posts/untitled-9-20-2021.txt","score":0.8593290080388},{"content":"The club does 2 things.","parent":"posts/untitled-9-24-2021.txt","score":0.8589669169415844},{"content":"Induction","parent":"posts/untitled-9-22-2021.txt","score":0.8577220980911441},{"content":"Code:","parent":"posts/Goals for Spring Quarter.txt","score":0.856649564390397},{"content":"Executing","parent":"posts/Goals for Spring Quarter.txt","score":0.8556654491388678},{"content":"Priority 1: Code-related creative work (continue work on exegesis, other personal projects, learn more code, write more)","parent":"posts/Goals for Spring Quarter.txt","score":0.8537043599402795},{"content":"Next to every paragraph, there is a button that will show you other related paragraphs from your other notes.","parent":"posts/What is Nomad Hypertext.txt","score":0.8514450468005932},{"content":"we live in a society","parent":"posts/untitled-9-30-2021.txt","score":0.8499151373626692},{"content":"Priority 2: Activities that are a break from code-related creative work (piano, guitar, fiction/nonfiction reading, drawing, fitness)","parent":"posts/Goals for Spring Quarter.txt","score":0.8497861585687644},{"content":"Learn a grappling art (because of quarantine, this will just be maintaining general fitness levels for now)","parent":"posts/Goals for Spring Quarter.txt","score":0.8496945903933114},{"content":"For drawing, I'd like to practice drawing reference images in my own style 3 times a week, with a focus on drawing more three dimensionally, drawing people/poses, and using color.","parent":"posts/Goals for Spring Quarter.txt","score":0.8478182318510581},{"content":"Afternoon","parent":"posts/untitled-9-21-2021.txt","score":0.8472546071060495},{"content":"Hobbies:","parent":"posts/Goals for Spring Quarter.txt","score":0.8467379006001533},{"content":"This is for scenarios where you do want to write in an organized manner. For example, right now, this entire page is about","parent":"posts/Roadmap to exegesis' beta release.txt","score":0.8466474388580029},{"content":"Focus[[focus]] [[focus-machine]] [[ideas]]","parent":"posts/untitled-9-24-2021.txt","score":0.8456538970968254},{"content":"Higher-order creativity","parent":"posts/Prometheus.txt","score":0.8455300536527719},{"content":"Nomad Hypertext is a writing app built around semantic search.","parent":"posts/What is Nomad Hypertext.txt","score":0.8455138568311819},{"content":"I'm taking a gap quarter this Spring to work on some personal projects. It is always better to have a plan than to have no plan, even if things don't work out your way, so here are some tentative goals for my gap quarter.","parent":"posts/Goals for Spring Quarter.txt","score":0.8451682294721505},{"content":"Writing cascades","parent":"posts/untitled-10-1-2021.txt","score":0.8444322593169847},{"content":"Plaintext is your best friend.","parent":"posts/Plaintext is your best friend.txt","score":0.8437967333727141}],"I think Computer Science is also subject to this double hermeneutic. The best example of this is computer security. Best practices are researched by computer scientists, and strategies against them are developed by security researchers and malicious actors. Conclusions are reached about how to best design computer systems, but these conclusions never last very long, because hostile actors have incentives to disrupt these conclusions. In the same way that social theories can be invalidated by people's awareness of those social theories, conclusions on computer system can as well.":[{"content":"I think Computer Science is also subject to this double hermeneutic. The best example of this is computer security. Best practices are researched by computer scientists, and strategies against them are developed by security researchers and malicious actors. Conclusions are reached about how to best design computer systems, but these conclusions never last very long, because hostile actors have incentives to disrupt these conclusions. In the same way that social theories can be invalidated by people's awareness of those social theories, conclusions on computer system can as well.","parent":"posts/untitled-10-11-2021.txt","score":1},{"content":"The social sciences are infamous for being subject to the \"[double hermeneutic.](https://en.wikipedia.org/wiki/Double_hermeneutic)\" \"Hermeneutic\" means \"understanding\" or \"interpretation.\"  The term double hermeneutic in social science refers to the fact the social sciences study human behavior, but human beings are just as able to study social science. The process of observation goes both ways.","parent":"posts/untitled-10-11-2021.txt","score":0.8972189298316617},{"content":"Then again, the subject of Computer Science's empirical inquiries isn't a natural thing - it's manmade. Everything about a computer is manmade, from the processor to the operating system to the programs that run on it, and as such are subject to human conventions. I'm only half joking when I say this: Isn't computer science actually a social science?","parent":"posts/untitled-10-11-2021.txt","score":0.8895915137527981},{"content":"Maybe Computer Science is a social science","parent":"posts/untitled-10-11-2021.txt","score":0.8859298445502319},{"content":"I always thought the name \"Computer Science\" was a misnomer - sciences are empirical, and computer science/programming is something that relies on reason/logic. It feels closer to applied mathematics than it does empirical science.","parent":"posts/untitled-10-11-2021.txt","score":0.8690681672385875},{"content":"Turns out, Computer Science is actually a science","parent":"posts/untitled-10-11-2021.txt","score":0.8681358595696885},{"content":"Human beings can observe the conclusions that social science reach and modify their behavior, which can potentially render those conclusions invalid. This is a complete impossibility in the natural sciences - an atom cannot learn about atomic theories and change its behavior to invalidate those theories.","parent":"posts/untitled-10-11-2021.txt","score":0.8609220328773797},{"content":"In my view, the whole movement of [[tools for thought]] (Roam, personal knowledge management systems, etc, etc.) is to make computers help us think better. That was the point from the very start, it was what Steve Jobs meant when he called the computer \"a bicycle for the mind.\" In the last decade, we've seen the very opposite - the use of the computer as an extractive tool, a weapon to siphon attention and harvest data.","parent":"posts/Controlling what you see.txt","score":0.8494221744579186},{"content":"That last project had a significant effect on me. Back in high school, I was heavily involved in Model UN and other political clubs. Making the [game](https://nichwch.itch.io/machinegods) made me realize it was making things and not winning arguments that really made me happier. It was also what convinced me that programming could be something more than rote problem solving, and even be a genuine creative medium. It was why I switched my major from Economics to Computer Science in college.[[personal-reflection]]","parent":"posts/Reflections on exegesis.txt","score":0.8407413816488934},{"content":"The problem with the view that technology is meant to solve problems is that technology always ends up doing so much more than that. Take any technology and its original intended purpose (fire, automobiles, airplanes, etc.) and you will find it has created a cascade of second order effects far beyond what it was originally intended to do. Sometimes these impacts are good, sometimes they're bad, sometimes they're just strange.","parent":"posts/Creating new kinds of people.txt","score":0.8404493602568549},{"content":"The auteur believes otherwise. Language, he says, cannot communicate an idea without botching it. And if communicating an idea were not bad enough, mediating between multiple ideas using as flawed a tool as language is immeasurably worse.","parent":"posts/On auteurs and language.txt","score":0.8372022207506612},{"content":"\"[Adam] Curtis attacks the internet because in his view it facilitates communities of solipsists, interpassive networks of like-minds who confirm, rather than challenge, each others' assumptions and prejudices.... Curtis' critique has a point, but it misses important dimensions of what is happening on the net. Contrary to Curtis' account of blogging, blogs can generate new discourse networks that have no correlate in the social field outside cyberspace.\" [[exegesis]] [[questions]] [[quotes]] [[Capitalist-Realism]]","parent":"posts/untitled-9-20-2021.txt","score":0.8365789132477118},{"content":"The usual way to think about technology, software, and startups is that they solve problems, and so it follows then that the best way to create a new technology is to find a problem people have and solve it. This is not a bad approach to take, and it's been successful for many people. Still, I think it's too narrow.","parent":"posts/Creating new kinds of people.txt","score":0.8345071038859128},{"content":"The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people.","parent":"posts/The AI-first operating system of the future.txt","score":0.8342184073474849},{"content":"It is this property that allows programmers to cheat the Gods, and achieve divine levels of creative output thought forbidden to mortals. A programmer can create abstractions than enable them to create in days what previously took months. I myself rewrote a good part of exegesis 2 months before I released it, and the new abstractions I picked enabled me to redo in those 2 months what took me almost a year at first. Moreover, programmers can share their abstractions, and borrow the inventions of others as well.","parent":"posts/Prometheus.txt","score":0.8340104083568428},{"content":"In general, computers have enabled the Promethean task of stealing creative abilities previously reserved for deities. Musicians have their electrically amplified instruments, their DAWs, the vast oceans of samples available on the internet; artists have been blessed with digital canvases, 3D modeling, and the ubiquity of screens that renders a possible canvas in every man's pocket.","parent":"posts/Prometheus.txt","score":0.8322853229641157},{"content":"This quote reflects a common strain of thinking in Silicon Valley, that our biological selves are hopeless broken, that we need to hack into our brains dopamine-systems and rewire them for maximal productivity, that everything natural is ripe for disruption. This thinking is especially prevalent with the recent rise of PKMs (personal knowledge management systems) like Roam and Notion. Here, an electronic notetaking app is the \"blessed machine\", and your natural memory is the \"flesh that will decay and fail you.\"","parent":"posts/Second Brains.txt","score":0.831120345983397},{"content":"I'm convinced that algorithmic feeds are poisonous. Algorithmic feeds in apps are like cocaine in old medicines or asbestos in buildings, and someday they'll be seen to be just as barbaric.","parent":"posts/Controlling what you see.txt","score":0.8308855987437421},{"content":"The AI first operating system of the future already exists - it's called unix. I think the unix philosophy lends itself exceptionally well to the use of AI.","parent":"posts/The AI-first operating system of the future.txt","score":0.8303122183588045},{"content":"2. My critique here is nothing original - it echoes a lot of what Andy [[Matuschak]] and [[Linus Lee]] have touched upon in their essays. Here's a brief excerpt from [Linus' blog post](https://thesephist.com/posts/browser/) that expresses the point more eloquently:","parent":"posts/On tools for thought: knowledge management vs creativity.txt","score":0.8282622908473712}]}