{"I want to try something: just posting a mind dump on [[exegesis]] every morning. I've had a theory for a while now that the best use case for exegesis is journaling, and this would be a good way to put it to the test. It will also be a good way for me to share my ideas with the world. ":[{"content":"I'll end with a haiku. \n\nNomad Hypertext\nPowered by semantic search\nGives inspiration","parent":"posts/What is Nomad Hypertext?.txt","score":0.8320059502834011},{"content":"The bottom line is with a notetaking app, what I'm really looking for is the ability to see connections between my ideas. I don't care about pretty formatting. Plain text is uglier, but it increases the range of things you can do with your notes - you can pipe it into an LLM, you can pipe it into a summarizer, you can take notes on Apple Notes then paste them into your notes later, you can set up a service that lets you text a number that will then paste your texts into your notes, etc. etc.","parent":"posts/Plaintext is your best friend.txt","score":0.8291574442514036},{"content":"I've been working on notetaking apps for years now. I starting working on the first one on the bus back from my internship. I had an idea for a simple interaction - users should be able to highlight a piece of text, then add tags to that text. I distinctly remember thinking to myself, \"That should be a piece of cake! I should be able to finish it during the 45 minute bus  ride.\"\n\n\nIt ended up taking the rest of the summer. I was 19, naive, and had no idea what a nightmare the contenteditable HTML standard was.","parent":"posts/Plaintext is your best friend.txt","score":0.8281158715514645},{"content":"Nomad Hypertext is a writing app built around semantic search.","parent":"posts/What is Nomad Hypertext?.txt","score":0.825451099960143},{"content":"I think eventually, I might want to deploy a blog with a full fledged backend, so users can query anything they'd like to my blog.","parent":"posts/What is Yurt?.txt","score":0.8244808306640092},{"content":"It does this by dividing your notes up into paragraph-sized blocks and indexing them into a vector database with an AI embedding model.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8169667013405116},{"content":"Of course, if you're looking to raise a billion dollars on your consumer-facing notetaking app, plain text won't cut it. Lucky for us all, Jerome Powell has acted wisely to proscribe this possibility.","parent":"posts/Plaintext is your best friend.txt","score":0.8161292334478282},{"content":"At build time, it embeds all your posts into vectors and puts them into a vector database. Then, for each paragraph in a post, it queries the vector database for the 20 most similar paragraphs from all your notes. It stores these in a precomputed index. It then statically generates a blog for you (like Gatsby or any other static site generator), and uses this index so users can see related ideas when they click on a paragraph.","parent":"posts/What is Yurt?.txt","score":0.8150053920478586},{"content":"Plaintext is your best friend.","parent":"posts/Plaintext is your best friend.txt","score":0.81443338434406},{"content":"Next to every paragraph, there is a button that will show you other related paragraphs from your other notes.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8133356545544862},{"content":"There are pros and cons to this approach. The biggest pro is that it generates a static blog. There's no backend to maintain, and it's quite lightweight and loads fast, while also providing the benefit of semantic hyperlinks. The con is that since the index is precomputed, you can't search for arbitrary things like you can in nomad hypertext.","parent":"posts/What is Yurt?.txt","score":0.8128374894218567},{"content":"You're viewing this on a statically generated blog using Yurt!","parent":"posts/What is Yurt?.txt","score":0.8126646478238321},{"content":"It uses neural search to show you how your ideas are connected to each other. This is done offline and privately on your computer, entirely on your machine.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8101879463622033},{"content":"The flexibility and power and power of plaintext matters much more than the meagre aesthetic gains of rich text. I am genuinely convinced that bold, italics and titles add little to nothing to my experience of a notetaking app.","parent":"posts/Plaintext is your best friend.txt","score":0.8011675607717829}],"":[{"content":"Next to every paragraph, there is a button that will show you other related paragraphs from your other notes.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8514450468005932},{"content":"Nomad Hypertext is a writing app built around semantic search.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8455138568311819},{"content":"Plaintext is your best friend.","parent":"posts/Plaintext is your best friend.txt","score":0.8437967333727141},{"content":"You're viewing this on a statically generated blog using Yurt!","parent":"posts/What is Yurt?.txt","score":0.8352868364347527},{"content":"I've been working on notetaking apps for years now. I starting working on the first one on the bus back from my internship. I had an idea for a simple interaction - users should be able to highlight a piece of text, then add tags to that text. I distinctly remember thinking to myself, \"That should be a piece of cake! I should be able to finish it during the 45 minute bus  ride.\"\n\n\nIt ended up taking the rest of the summer. I was 19, naive, and had no idea what a nightmare the contenteditable HTML standard was.","parent":"posts/Plaintext is your best friend.txt","score":0.8349617781702803},{"content":"Yurt is a static site generator, built off the same principles as Nomad Hypertext.","parent":"posts/What is Yurt?.txt","score":0.83147189188003},{"content":"// 1. Section Title","parent":"posts/Plaintext is your best friend.txt","score":0.8310407432809674},{"content":"It does this by dividing your notes up into paragraph-sized blocks and indexing them into a vector database with an AI embedding model.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8308738608102689},{"content":"In any case I wanted to try something new because that's what Recurse is all about, so I tried making a project with just JS and JSDoc for some semblance of type safety.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8289505733587093},{"content":"It uses neural search to show you how your ideas are connected to each other. This is done offline and privately on your computer, entirely on your machine.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8286014862219001},{"content":"At build time, it embeds all your posts into vectors and puts them into a vector database. Then, for each paragraph in a post, it queries the vector database for the 20 most similar paragraphs from all your notes. It stores these in a precomputed index. It then statically generates a blog for you (like Gatsby or any other static site generator), and uses this index so users can see related ideas when they click on a paragraph.","parent":"posts/What is Yurt?.txt","score":0.82507608178487},{"content":"The basic idea here is that semantic search functions better than backlinking, tags, or folders at helping you see connections between your ideas. It is also much simpler to implement. With backlinks and tags, you often need specialized file types, but semantic search works on top of plain text. Semantic search is all you need!","parent":"posts/What is Nomad Hypertext?.txt","score":0.8244515437960355},{"content":"I avoided this IPC-executable approach because I thought it'd be really complicated. To some extent, this was the correct decision - I'm glad I got a MVP of my project out during my time at Recurse.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8238590967309432},{"content":"Of course, if you're looking to raise a billion dollars on your consumer-facing notetaking app, plain text won't cut it. Lucky for us all, Jerome Powell has acted wisely to proscribe this possibility.","parent":"posts/Plaintext is your best friend.txt","score":0.8232601672203171},{"content":"The app is free and open source. Notes are stored as plain text files, which means you are free to use tools like git to sync them across multiple devices, and free to port your notes over to other apps if you wish.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8229781287130151},{"content":"To be frank, I made some regrettable engineering decisions while making Nomad Hypertext. I built this during my Recurse Center batch and was focused on getting a working prototype out, so some shortcuts were taken. Nevertheless, reflecting back, I would say these shortcuts were not worth it. \n\nThe two big shortcuts I took were using Javascript instead of Typescript and using Electron instead of Tauri.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8220398049687068},{"content":"However, when building Yurt, the static site builder for nomad hypertext, I found myself repeating a lot of logic. I found myself wanting to add features to the indexing engine, like being able to use cloud providers instead of local models (because doing all this processing locally can take ages!). In the future, I might want to use multimodal models, so I can see similarity between images, text, and audio. \n\nFactoring out the semantic search element of my app would have been the correct, unix-ey thing to do, and it would allow me to make these extensions in the future. I plan on doing this soon.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8218034323666665},{"content":"The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.","parent":"posts/The AI-first operating system of the future.txt","score":0.8198483747080119},{"content":"The other thing I miss is links. You can still paste urls, however. It's ugly but it works.","parent":"posts/Plaintext is your best friend.txt","score":0.8196808161560437},{"content":"I'll end with a haiku. \n\nNomad Hypertext\nPowered by semantic search\nGives inspiration","parent":"posts/What is Nomad Hypertext?.txt","score":0.8171806181110879}],"None of these thoughts will be very organized. That's kind of the point of [[exegesis]] anyways - to enable non linear, disorganized thinking. ":[{"content":"It does this by dividing your notes up into paragraph-sized blocks and indexing them into a vector database with an AI embedding model.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8181286723914688},{"content":"The flexibility and power and power of plaintext matters much more than the meagre aesthetic gains of rich text. I am genuinely convinced that bold, italics and titles add little to nothing to my experience of a notetaking app.","parent":"posts/Plaintext is your best friend.txt","score":0.8177931827060805},{"content":"The bottom line is with a notetaking app, what I'm really looking for is the ability to see connections between my ideas. I don't care about pretty formatting. Plain text is uglier, but it increases the range of things you can do with your notes - you can pipe it into an LLM, you can pipe it into a summarizer, you can take notes on Apple Notes then paste them into your notes later, you can set up a service that lets you text a number that will then paste your texts into your notes, etc. etc.","parent":"posts/Plaintext is your best friend.txt","score":0.8174480065228138},{"content":"I'll end with a haiku. \n\nNomad Hypertext\nPowered by semantic search\nGives inspiration","parent":"posts/What is Nomad Hypertext?.txt","score":0.8053879361600347},{"content":"It uses neural search to show you how your ideas are connected to each other. This is done offline and privately on your computer, entirely on your machine.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8046287591244445},{"content":"I've been working on notetaking apps for years now. I starting working on the first one on the bus back from my internship. I had an idea for a simple interaction - users should be able to highlight a piece of text, then add tags to that text. I distinctly remember thinking to myself, \"That should be a piece of cake! I should be able to finish it during the 45 minute bus  ride.\"\n\n\nIt ended up taking the rest of the summer. I was 19, naive, and had no idea what a nightmare the contenteditable HTML standard was.","parent":"posts/Plaintext is your best friend.txt","score":0.8040716430355299},{"content":"Next to every paragraph, there is a button that will show you other related paragraphs from your other notes.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8035618193662032},{"content":"I avoided this IPC-executable approach because I thought it'd be really complicated. To some extent, this was the correct decision - I'm glad I got a MVP of my project out during my time at Recurse.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8019434073755929},{"content":"Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?","parent":"posts/The AI-first operating system of the future.txt","score":0.8015419700443932},{"content":"The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people.","parent":"posts/The AI-first operating system of the future.txt","score":0.8010803309583259}],"exegesis as crm [[exegesis]] [[ideas]] ":[],"This morning I was listening to a podcast suggested by [[Linus Lee]] - Changelog. I don't usually listen to podcasts, but I have had good experiences with audiobooks in the past. It was nice being able to absorb information over breakfast without staring at a screen. The subject material was interesting; it was some CMU professor doing research on individual programmers and the myth of the \"10x developer.\" ":[{"content":"I avoided this IPC-executable approach because I thought it'd be really complicated. To some extent, this was the correct decision - I'm glad I got a MVP of my project out during my time at Recurse.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8299596220993631},{"content":"I've been working on notetaking apps for years now. I starting working on the first one on the bus back from my internship. I had an idea for a simple interaction - users should be able to highlight a piece of text, then add tags to that text. I distinctly remember thinking to myself, \"That should be a piece of cake! I should be able to finish it during the 45 minute bus  ride.\"\n\n\nIt ended up taking the rest of the summer. I was 19, naive, and had no idea what a nightmare the contenteditable HTML standard was.","parent":"posts/Plaintext is your best friend.txt","score":0.8194960238975809},{"content":"I opted to use Javascript instead of Typescript out of mix of curiosity and laziness. Like most people, I was introduced to Javascript before I was introduced to Typescript. Like most people, I suffered through many null errors and was relieved when I discovered that the Typescript compiler could save me from many of them. Like most people, though I am grateful for Typescript, I find it occasionally cumbersome.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8136206118104232},{"content":"Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.","parent":"posts/The AI-first operating system of the future.txt","score":0.8106570235313213},{"content":"It uses neural search to show you how your ideas are connected to each other. This is done offline and privately on your computer, entirely on your machine.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8084743351193485},{"content":"Nomad Hypertext is a writing app built around semantic search.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8081549742014309},{"content":"The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.","parent":"posts/The AI-first operating system of the future.txt","score":0.8073505742464457},{"content":"To be frank, I made some regrettable engineering decisions while making Nomad Hypertext. I built this during my Recurse Center batch and was focused on getting a working prototype out, so some shortcuts were taken. Nevertheless, reflecting back, I would say these shortcuts were not worth it. \n\nThe two big shortcuts I took were using Javascript instead of Typescript and using Electron instead of Tauri.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8065402160120928},{"content":"The results were... mixed. I did get to move faster at the start, but started running into more and more type-related bugs as development went on. If I were to do this project again, I'd stick to Typescript.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8044528417790655},{"content":"I read Rich Harris' twitter thread on how Javascript with JSDoc is actually pretty good, and decided to give it a shot. To be clear, I'm not blaming Rich Harris for my choice - he qualified his point, saying JS with JSDoc is preferable to Typescript for library development, because not having an intermediate build step makes it easier to reproduce bugs in a REPL. He still recommends using Typescript for projects (I think), so I was acting against his advice here.","parent":"posts/The making of Nomad Hypertext.txt","score":0.804364799311239},{"content":"In any case I wanted to try something new because that's what Recurse is all about, so I tried making a project with just JS and JSDoc for some semblance of type safety.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8009586233122648},{"content":"The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people.","parent":"posts/The AI-first operating system of the future.txt","score":0.8004111157311519}],"I had some interesting ideas this morning on exegesis. The future of [[tools for thought]] should be social, and maybe people and profiles should be first order features in exegesis. Let me clarify what I mean by this. Right now, exegesis' model is very simple: you have pages, and you have tags that you can apply to pages and parts of pages. If there's a tag that has the same title as a page, clicking the tag will lead you to the page, and the page will show everywhere it's been linked. Simple, basic, backlinking. [[exegesis]] [[ideas]] [[tools for thought]] ":[{"content":"The basic idea here is that semantic search functions better than backlinking, tags, or folders at helping you see connections between your ideas. It is also much simpler to implement. With backlinks and tags, you often need specialized file types, but semantic search works on top of plain text. Semantic search is all you need!","parent":"posts/What is Nomad Hypertext?.txt","score":0.8326247255908904},{"content":"I've been working on notetaking apps for years now. I starting working on the first one on the bus back from my internship. I had an idea for a simple interaction - users should be able to highlight a piece of text, then add tags to that text. I distinctly remember thinking to myself, \"That should be a piece of cake! I should be able to finish it during the 45 minute bus  ride.\"\n\n\nIt ended up taking the rest of the summer. I was 19, naive, and had no idea what a nightmare the contenteditable HTML standard was.","parent":"posts/Plaintext is your best friend.txt","score":0.8248633714778201},{"content":"The bottom line is with a notetaking app, what I'm really looking for is the ability to see connections between my ideas. I don't care about pretty formatting. Plain text is uglier, but it increases the range of things you can do with your notes - you can pipe it into an LLM, you can pipe it into a summarizer, you can take notes on Apple Notes then paste them into your notes later, you can set up a service that lets you text a number that will then paste your texts into your notes, etc. etc.","parent":"posts/Plaintext is your best friend.txt","score":0.8198849891108136},{"content":"I'll end with a haiku. \n\nNomad Hypertext\nPowered by semantic search\nGives inspiration","parent":"posts/What is Nomad Hypertext?.txt","score":0.8180983020050909},{"content":"I think eventually, I might want to deploy a blog with a full fledged backend, so users can query anything they'd like to my blog.","parent":"posts/What is Yurt?.txt","score":0.8170395211486643},{"content":"However, when building Yurt, the static site builder for nomad hypertext, I found myself repeating a lot of logic. I found myself wanting to add features to the indexing engine, like being able to use cloud providers instead of local models (because doing all this processing locally can take ages!). In the future, I might want to use multimodal models, so I can see similarity between images, text, and audio. \n\nFactoring out the semantic search element of my app would have been the correct, unix-ey thing to do, and it would allow me to make these extensions in the future. I plan on doing this soon.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8159801308766307},{"content":"It does this by dividing your notes up into paragraph-sized blocks and indexing them into a vector database with an AI embedding model.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8147274487543198},{"content":"There are pros and cons to this approach. The biggest pro is that it generates a static blog. There's no backend to maintain, and it's quite lightweight and loads fast, while also providing the benefit of semantic hyperlinks. The con is that since the index is precomputed, you can't search for arbitrary things like you can in nomad hypertext.","parent":"posts/What is Yurt?.txt","score":0.8142958321156394},{"content":"Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?","parent":"posts/The AI-first operating system of the future.txt","score":0.8115286897328339},{"content":"It uses neural search to show you how your ideas are connected to each other. This is done offline and privately on your computer, entirely on your machine.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8093086776463765},{"content":"One last thing: There is a solution that combines the flexibility of plaintext with the aesthetics of rich text - Markdown! I don't think I'll support Markdown formatting in nomad hypertext, but for my static site generator Yurt, I will try to do that in the future. The utility would mostly be from having usable links.","parent":"posts/Plaintext is your best friend.txt","score":0.8081202988554751},{"content":"Nomad Hypertext is a writing app built around semantic search.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8080126942095363},{"content":"At build time, it embeds all your posts into vectors and puts them into a vector database. Then, for each paragraph in a post, it queries the vector database for the 20 most similar paragraphs from all your notes. It stores these in a precomputed index. It then statically generates a blog for you (like Gatsby or any other static site generator), and uses this index so users can see related ideas when they click on a paragraph.","parent":"posts/What is Yurt?.txt","score":0.805964679706891},{"content":"Next to every paragraph, there is a button that will show you other related paragraphs from your other notes.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8052679314223342},{"content":"You're viewing this on a statically generated blog using Yurt!","parent":"posts/What is Yurt?.txt","score":0.803352143839029},{"content":"The other thing I miss is links. You can still paste urls, however. It's ugly but it works.","parent":"posts/Plaintext is your best friend.txt","score":0.8014560124473221}],"Eventually I want exegesis to be a social platform - you can already publish notes, but I want social features like profiles, groups, follows, etc. etc. Similar tools like [[roam]] can already be used as CRMs. So can exegesis. But, if I'm going to be building profiles into the app for social features, it may make sense to build additional affordances around managing people and relationships. For example, hovering over a link to a person could show all their social media profiles, in addition to places where you've tagged them in your notes.[[exegesis]] [[ideas]] [[roam]] ":[{"content":"The bottom line is with a notetaking app, what I'm really looking for is the ability to see connections between my ideas. I don't care about pretty formatting. Plain text is uglier, but it increases the range of things you can do with your notes - you can pipe it into an LLM, you can pipe it into a summarizer, you can take notes on Apple Notes then paste them into your notes later, you can set up a service that lets you text a number that will then paste your texts into your notes, etc. etc.","parent":"posts/Plaintext is your best friend.txt","score":0.8402749334119811},{"content":"I've been working on notetaking apps for years now. I starting working on the first one on the bus back from my internship. I had an idea for a simple interaction - users should be able to highlight a piece of text, then add tags to that text. I distinctly remember thinking to myself, \"That should be a piece of cake! I should be able to finish it during the 45 minute bus  ride.\"\n\n\nIt ended up taking the rest of the summer. I was 19, naive, and had no idea what a nightmare the contenteditable HTML standard was.","parent":"posts/Plaintext is your best friend.txt","score":0.8288102790748175},{"content":"I think eventually, I might want to deploy a blog with a full fledged backend, so users can query anything they'd like to my blog.","parent":"posts/What is Yurt?.txt","score":0.8249770662998221},{"content":"Nomad Hypertext is a writing app built around semantic search.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8244788701407143},{"content":"However, when building Yurt, the static site builder for nomad hypertext, I found myself repeating a lot of logic. I found myself wanting to add features to the indexing engine, like being able to use cloud providers instead of local models (because doing all this processing locally can take ages!). In the future, I might want to use multimodal models, so I can see similarity between images, text, and audio. \n\nFactoring out the semantic search element of my app would have been the correct, unix-ey thing to do, and it would allow me to make these extensions in the future. I plan on doing this soon.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8221253450693357},{"content":"The app is free and open source. Notes are stored as plain text files, which means you are free to use tools like git to sync them across multiple devices, and free to port your notes over to other apps if you wish.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8171195023512364},{"content":"There are pros and cons to this approach. The biggest pro is that it generates a static blog. There's no backend to maintain, and it's quite lightweight and loads fast, while also providing the benefit of semantic hyperlinks. The con is that since the index is precomputed, you can't search for arbitrary things like you can in nomad hypertext.","parent":"posts/What is Yurt?.txt","score":0.8149752178462296},{"content":"Of course, if you're looking to raise a billion dollars on your consumer-facing notetaking app, plain text won't cut it. Lucky for us all, Jerome Powell has acted wisely to proscribe this possibility.","parent":"posts/Plaintext is your best friend.txt","score":0.8147243740843483},{"content":"At build time, it embeds all your posts into vectors and puts them into a vector database. Then, for each paragraph in a post, it queries the vector database for the 20 most similar paragraphs from all your notes. It stores these in a precomputed index. It then statically generates a blog for you (like Gatsby or any other static site generator), and uses this index so users can see related ideas when they click on a paragraph.","parent":"posts/What is Yurt?.txt","score":0.8146275780956198},{"content":"It does this by dividing your notes up into paragraph-sized blocks and indexing them into a vector database with an AI embedding model.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8123463553587734},{"content":"The other thing I miss is links. You can still paste urls, however. It's ugly but it works.","parent":"posts/Plaintext is your best friend.txt","score":0.8068974985794584},{"content":"The flexibility and power and power of plaintext matters much more than the meagre aesthetic gains of rich text. I am genuinely convinced that bold, italics and titles add little to nothing to my experience of a notetaking app.","parent":"posts/Plaintext is your best friend.txt","score":0.8065919824326414},{"content":"I'll end with a haiku. \n\nNomad Hypertext\nPowered by semantic search\nGives inspiration","parent":"posts/What is Nomad Hypertext?.txt","score":0.8054464114782831},{"content":"Next to every paragraph, there is a button that will show you other related paragraphs from your other notes.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8035530933867528},{"content":"It uses neural search to show you how your ideas are connected to each other. This is done offline and privately on your computer, entirely on your machine.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8034471505399784},{"content":"Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.","parent":"posts/The AI-first operating system of the future.txt","score":0.8031178689375064},{"content":"One last thing: There is a solution that combines the flexibility of plaintext with the aesthetics of rich text - Markdown! I don't think I'll support Markdown formatting in nomad hypertext, but for my static site generator Yurt, I will try to do that in the future. The utility would mostly be from having usable links.","parent":"posts/Plaintext is your best friend.txt","score":0.8023315304015509},{"content":"In any case I wanted to try something new because that's what Recurse is all about, so I tried making a project with just JS and JSDoc for some semblance of type safety.","parent":"posts/The making of Nomad Hypertext.txt","score":0.801972578906856},{"content":"The basic idea here is that semantic search functions better than backlinking, tags, or folders at helping you see connections between your ideas. It is also much simpler to implement. With backlinks and tags, you often need specialized file types, but semantic search works on top of plain text. Semantic search is all you need!","parent":"posts/What is Nomad Hypertext?.txt","score":0.8007285946075762}],"Finished Capitalist Realism":[],"Finished [[mark-fischer]]'s [[Capitalist-Realism]] today. Incredible read. Since reading (or listening to the audiobook) of [[Fukuyama]]'s End of History, I always found the concept of an \"end of history\" interesting. Fukuyama himself is (roughly) opposite Fischer on the political spectrum, so it was interesting to read an analysis on the same subject (the end of history) from a different perspective.":[],"Adam Curtis and the internet":[{"content":"The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.","parent":"posts/The AI-first operating system of the future.txt","score":0.8270575923013099},{"content":"I've been working on notetaking apps for years now. I starting working on the first one on the bus back from my internship. I had an idea for a simple interaction - users should be able to highlight a piece of text, then add tags to that text. I distinctly remember thinking to myself, \"That should be a piece of cake! I should be able to finish it during the 45 minute bus  ride.\"\n\n\nIt ended up taking the rest of the summer. I was 19, naive, and had no idea what a nightmare the contenteditable HTML standard was.","parent":"posts/Plaintext is your best friend.txt","score":0.8071770597995521},{"content":"Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.","parent":"posts/The AI-first operating system of the future.txt","score":0.8051886552078104},{"content":"The other thing I miss is links. You can still paste urls, however. It's ugly but it works.","parent":"posts/Plaintext is your best friend.txt","score":0.8048023137120137},{"content":"The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people.","parent":"posts/The AI-first operating system of the future.txt","score":0.8025177083831511},{"content":"Nomad Hypertext is a writing app built around semantic search.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8016842627902147},{"content":"Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?","parent":"posts/The AI-first operating system of the future.txt","score":0.8015046132550699},{"content":"It uses neural search to show you how your ideas are connected to each other. This is done offline and privately on your computer, entirely on your machine.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8004757404302374}],"Some incredibly interesting excerpts I want to quote directly (emphases all mine):":[],"\"[Adam] Curtis attacks the internet because in his view it facilitates communities of solipsists, interpassive networks of like-minds who confirm, rather than challenge, each others' assumptions and prejudices.... Curtis' critique has a point, but it misses important dimensions of what is happening on the net. Contrary to Curtis' account of blogging, blogs can generate new discourse networks that have no correlate in the social field outside cyberspace.\" [[exegesis]] [[questions]] [[quotes]] [[Capitalist-Realism]] ":[{"content":"You're viewing this on a statically generated blog using Yurt!","parent":"posts/What is Yurt?.txt","score":0.8258563418167271},{"content":"The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.","parent":"posts/The AI-first operating system of the future.txt","score":0.8247735108021582},{"content":"I think eventually, I might want to deploy a blog with a full fledged backend, so users can query anything they'd like to my blog.","parent":"posts/What is Yurt?.txt","score":0.8231535796408128},{"content":"There are pros and cons to this approach. The biggest pro is that it generates a static blog. There's no backend to maintain, and it's quite lightweight and loads fast, while also providing the benefit of semantic hyperlinks. The con is that since the index is precomputed, you can't search for arbitrary things like you can in nomad hypertext.","parent":"posts/What is Yurt?.txt","score":0.8166909654770501},{"content":"I'll end with a haiku. \n\nNomad Hypertext\nPowered by semantic search\nGives inspiration","parent":"posts/What is Nomad Hypertext?.txt","score":0.8126974701193822},{"content":"The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people.","parent":"posts/The AI-first operating system of the future.txt","score":0.8092552647657282},{"content":"The other thing I miss is links. You can still paste urls, however. It's ugly but it works.","parent":"posts/Plaintext is your best friend.txt","score":0.8055960356403467},{"content":"Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.","parent":"posts/The AI-first operating system of the future.txt","score":0.8052712857867474},{"content":"Nomad Hypertext is a writing app built around semantic search.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8041846288858984},{"content":"Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?","parent":"posts/The AI-first operating system of the future.txt","score":0.8017739315579259}],"Directly relevant to exegesis, I was just speaking earlier about making social [[tools for thought]]. An interesting question to consider while creating this new social [[exegesis]]: How do I avoid making an echo-chamber platform susceptible to Curtis' critique, while fulfilling Fischer's vision for a web that can \"generate new discourse networks that have no correlate in the social field outside cyberspace?\" [[exegesis]] [[questions]] [[quotes]] [[Capitalist-Realism]] [[tools for thought]] ":[{"content":"I'll end with a haiku. \n\nNomad Hypertext\nPowered by semantic search\nGives inspiration","parent":"posts/What is Nomad Hypertext?.txt","score":0.8119106442665696},{"content":"The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.","parent":"posts/The AI-first operating system of the future.txt","score":0.8088165388541523},{"content":"Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?","parent":"posts/The AI-first operating system of the future.txt","score":0.8070143146385774},{"content":"The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people.","parent":"posts/The AI-first operating system of the future.txt","score":0.8032702964090497},{"content":"Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.","parent":"posts/The AI-first operating system of the future.txt","score":0.802430058563129},{"content":"Nomad Hypertext is a writing app built around semantic search.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8019632861594232}],"[[mark-fischer]] argues that capitalism creates boring products because it leads to companies giving people what they want, when really \"the most powerful forms of desire are precisely cravings for the strange, the unexpected, the weird. These can only be supplied by artists and media professionals who are prepared to give people something different from that which already satisfies them... to wager on the strange and our appetite for it. It is another irony that capitalism's society of risk is much less likely to take this kind of risk than was the supposedly stodgy, centralized culture of the postwar social consensus.\" He goes on to argue that some \"innovations are unthinkable now that the public has been displaced by the consumer.\"  [[quotes]] [[Capitalist-Realism]] [[aesthetics]] [[exegesis]]":[{"content":"The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people.","parent":"posts/The AI-first operating system of the future.txt","score":0.8376676812541237},{"content":"The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.","parent":"posts/The AI-first operating system of the future.txt","score":0.818829585193257},{"content":"Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?","parent":"posts/The AI-first operating system of the future.txt","score":0.8024455270236367}],"Fischer on making weird shit":[],"There's almost a Jobsian element to what he's saying here. In fact, you could argue that Steve Jobs, with all his hippie/countercultural heritage, belonged to that \"postwar social consensus.\" Could our capitalist reality today give rise to another innovator like Jobs? Of course, I'm sure Mark Fischer was no fan of Apple or Jobs, but it's still an interesting question to raise.  ":[{"content":"The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people.","parent":"posts/The AI-first operating system of the future.txt","score":0.8263478336867528},{"content":"The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.","parent":"posts/The AI-first operating system of the future.txt","score":0.8125880832741342},{"content":"The AI first operating system of the future already exists - it's called unix. I think the unix philosophy lends itself exceptionally well to the use of AI.","parent":"posts/The AI-first operating system of the future.txt","score":0.8117547280776889},{"content":"Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?","parent":"posts/The AI-first operating system of the future.txt","score":0.8064201437749872}],"Fischer on possibility":[],"\"The tiniest event can tear a hole in the grey curtain of reaction which has marked the horizons of possibility under capitalist realism. From a situation in which nothing can happen, suddenly anything is possible again.\"[[personal-reflection]] [[quotes]] [[Capitalist-Realism]] ":[{"content":"I'll end with a haiku. \n\nNomad Hypertext\nPowered by semantic search\nGives inspiration","parent":"posts/What is Nomad Hypertext?.txt","score":0.8044451332554415},{"content":"The fact that most people interact with computers through web and mobile was not some foregone conclusion. It took serious effort and ingenuity from really smart people to make these platforms accessible to regular people. Once upon a time, filesystems and personal computers were the dominant paradigm of computing, and it was web and mobile that were strange, inaccessible pipe dreams. Increasingly, the opposite is the case.","parent":"posts/The AI-first operating system of the future.txt","score":0.8032037225900295}],"Speaking of which, Fischer has something to say on the social prerequisites for innovation. \"[I]t is now clear that a certain amount of stability is necessary for cultural vibrancy, the question to be asked is: how can this stability be provided, and by what agencies?\" His tentative answer to this is \"a public space that is not reducible to an aggregation of individuals and their interests\" (see the quote above where he says some innovations are impossible because the public has been displaced by the consumer) [[mark-fischer]] [[quotes]] [[Capitalist-Realism]] ":[{"content":"The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people.","parent":"posts/The AI-first operating system of the future.txt","score":0.8069448892497244},{"content":"Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?","parent":"posts/The AI-first operating system of the future.txt","score":0.8015079382561836}],"Building tools":[{"content":"To be frank, I made some regrettable engineering decisions while making Nomad Hypertext. I built this during my Recurse Center batch and was focused on getting a working prototype out, so some shortcuts were taken. Nevertheless, reflecting back, I would say these shortcuts were not worth it. \n\nThe two big shortcuts I took were using Javascript instead of Typescript and using Electron instead of Tauri.","parent":"posts/The making of Nomad Hypertext.txt","score":0.816451906296658},{"content":"At build time, it embeds all your posts into vectors and puts them into a vector database. Then, for each paragraph in a post, it queries the vector database for the 20 most similar paragraphs from all your notes. It stores these in a precomputed index. It then statically generates a blog for you (like Gatsby or any other static site generator), and uses this index so users can see related ideas when they click on a paragraph.","parent":"posts/What is Yurt?.txt","score":0.8069593437190515},{"content":"Yurt is a static site generator, built off the same principles as Nomad Hypertext.","parent":"posts/What is Yurt?.txt","score":0.8066328749171389},{"content":"In any case I wanted to try something new because that's what Recurse is all about, so I tried making a project with just JS and JSDoc for some semblance of type safety.","parent":"posts/The making of Nomad Hypertext.txt","score":0.803208703503913},{"content":"It uses neural search to show you how your ideas are connected to each other. This is done offline and privately on your computer, entirely on your machine.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8021325123795997},{"content":"However, when building Yurt, the static site builder for nomad hypertext, I found myself repeating a lot of logic. I found myself wanting to add features to the indexing engine, like being able to use cloud providers instead of local models (because doing all this processing locally can take ages!). In the future, I might want to use multimodal models, so I can see similarity between images, text, and audio. \n\nFactoring out the semantic search element of my app would have been the correct, unix-ey thing to do, and it would allow me to make these extensions in the future. I plan on doing this soon.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8015554521529139}],"TikTok and [[synesthesia]] ":[{"content":"Of course, if you're looking to raise a billion dollars on your consumer-facing notetaking app, plain text won't cut it. Lucky for us all, Jerome Powell has acted wisely to proscribe this possibility.","parent":"posts/Plaintext is your best friend.txt","score":0.8089616030705024},{"content":"I'll end with a haiku. \n\nNomad Hypertext\nPowered by semantic search\nGives inspiration","parent":"posts/What is Nomad Hypertext?.txt","score":0.8064291921032714},{"content":"The flexibility and power and power of plaintext matters much more than the meagre aesthetic gains of rich text. I am genuinely convinced that bold, italics and titles add little to nothing to my experience of a notetaking app.","parent":"posts/Plaintext is your best friend.txt","score":0.8059061870785394},{"content":"I've been working on notetaking apps for years now. I starting working on the first one on the bus back from my internship. I had an idea for a simple interaction - users should be able to highlight a piece of text, then add tags to that text. I distinctly remember thinking to myself, \"That should be a piece of cake! I should be able to finish it during the 45 minute bus  ride.\"\n\n\nIt ended up taking the rest of the summer. I was 19, naive, and had no idea what a nightmare the contenteditable HTML standard was.","parent":"posts/Plaintext is your best friend.txt","score":0.8032861173318934},{"content":"It uses neural search to show you how your ideas are connected to each other. This is done offline and privately on your computer, entirely on your machine.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8030109332022103},{"content":"The other thing I miss is links. You can still paste urls, however. It's ugly but it works.","parent":"posts/Plaintext is your best friend.txt","score":0.8027152684117366},{"content":"Plaintext is your best friend.","parent":"posts/Plaintext is your best friend.txt","score":0.8013523165751729}],"Reminds me of a quote from [[Nietzsche]] in [[The Gay Science]] - \"Indeed, at hearing the news that 'the old god is dead', we philosophers and 'free spirits' feel illuminated by a new dawn; our heart overflows with gratitude, amazement, forebodings, expectation - finally the horizon seems clear again, even if not bright; finally our ships may set out again, set out to face any danger; every daring of the lover of knowledge is allowed again; the sea, our sea, lies open again; maybe there has never been such an 'open sea'.”[[quotes]] [[Nietzsche]] [[The Gay Science]] ":[{"content":"I'll end with a haiku. \n\nNomad Hypertext\nPowered by semantic search\nGives inspiration","parent":"posts/What is Nomad Hypertext?.txt","score":0.8029441800537339},{"content":"The AI first operating system of the future already exists - it's called unix. I think the unix philosophy lends itself exceptionally well to the use of AI.","parent":"posts/The AI-first operating system of the future.txt","score":0.8023865218624523}],"[[ideas]]: As I've matured as a [[React]] developer, I've found certain standard methods of handling things like state management, routing, styling, and data fetching. Because I've standardized on this approach, I've been writing higher order functions that abstract away a lot of the boilerplate. This has me thinking - it would almost certainly be possible to build some kind of visual tool to help scaffold a react app. Something in between no-code and a developer tool - like the [Nx.dev extension for VSCode](https://marketplace.visualstudio.com/items?itemName=nrwl.angular-console). [[code]] ":[{"content":"In any case I wanted to try something new because that's what Recurse is all about, so I tried making a project with just JS and JSDoc for some semblance of type safety.","parent":"posts/The making of Nomad Hypertext.txt","score":0.846165455149972},{"content":"To be frank, I made some regrettable engineering decisions while making Nomad Hypertext. I built this during my Recurse Center batch and was focused on getting a working prototype out, so some shortcuts were taken. Nevertheless, reflecting back, I would say these shortcuts were not worth it. \n\nThe two big shortcuts I took were using Javascript instead of Typescript and using Electron instead of Tauri.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8425113320047762},{"content":"I opted to use Javascript instead of Typescript out of mix of curiosity and laziness. Like most people, I was introduced to Javascript before I was introduced to Typescript. Like most people, I suffered through many null errors and was relieved when I discovered that the Typescript compiler could save me from many of them. Like most people, though I am grateful for Typescript, I find it occasionally cumbersome.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8338740430133538},{"content":"The results were... mixed. I did get to move faster at the start, but started running into more and more type-related bugs as development went on. If I were to do this project again, I'd stick to Typescript.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8314832972375025},{"content":"You might object: Just because the vector DB and text embedding model are tied to JS doesn't mean your whole application does! You'd be right. I could have rolled the vector DB and text embedding model into a separate executable, compiling a node wrapper around those libraries into their own executables, then calling those executables from my Tauri app with IPC.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8220396262845099},{"content":"Why not Tauri? With Tauri you have to write your backend routes in Rust. Surprisingly, I could not find any in-memory vector databases in Rust. I also have never written Rust in my life, though I would have been happy to pick it up to avoid using Electron. More importantly, I don't think there was a library that would have let me run Hugging Face's text embedding model in Rust. For these reasons, I had to use JS for my backend, which meant I had to use Electron.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8207096479709594},{"content":"Electron really, really, really sucks. For starters, you have to use CommonJS. That itself would be bad enough, but there are a huge pile of other inconveniences that Electron dumps on you: Using window.prompt() doesn't work (because it blocks the main thread apparently) and it generates HUGE executables without making the slightest effort to tree-shake anything (it was literally bundling in sample text files I was using in the repo). Creating my own window.prompt() alternative was an interesting exercise, but I wish I wasn't forced into doing it.","parent":"posts/The making of Nomad Hypertext.txt","score":0.818608615400155},{"content":"I read Rich Harris' twitter thread on how Javascript with JSDoc is actually pretty good, and decided to give it a shot. To be clear, I'm not blaming Rich Harris for my choice - he qualified his point, saying JS with JSDoc is preferable to Typescript for library development, because not having an intermediate build step makes it easier to reproduce bugs in a REPL. He still recommends using Typescript for projects (I think), so I was acting against his advice here.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8166023738755606},{"content":"I've been working on notetaking apps for years now. I starting working on the first one on the bus back from my internship. I had an idea for a simple interaction - users should be able to highlight a piece of text, then add tags to that text. I distinctly remember thinking to myself, \"That should be a piece of cake! I should be able to finish it during the 45 minute bus  ride.\"\n\n\nIt ended up taking the rest of the summer. I was 19, naive, and had no idea what a nightmare the contenteditable HTML standard was.","parent":"posts/Plaintext is your best friend.txt","score":0.8071314802836954},{"content":"One last thing: There is a solution that combines the flexibility of plaintext with the aesthetics of rich text - Markdown! I don't think I'll support Markdown formatting in nomad hypertext, but for my static site generator Yurt, I will try to do that in the future. The utility would mostly be from having usable links.","parent":"posts/Plaintext is your best friend.txt","score":0.8036924061944543}]," [[ideas]]: A tool that analyzes a react project and shows your component structure for you in a nice and visual way. Probably already exists, idk":[{"content":"In any case I wanted to try something new because that's what Recurse is all about, so I tried making a project with just JS and JSDoc for some semblance of type safety.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8434137024162389},{"content":"It uses neural search to show you how your ideas are connected to each other. This is done offline and privately on your computer, entirely on your machine.","parent":"posts/What is Nomad Hypertext?.txt","score":0.839541132381683},{"content":"To be frank, I made some regrettable engineering decisions while making Nomad Hypertext. I built this during my Recurse Center batch and was focused on getting a working prototype out, so some shortcuts were taken. Nevertheless, reflecting back, I would say these shortcuts were not worth it. \n\nThe two big shortcuts I took were using Javascript instead of Typescript and using Electron instead of Tauri.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8348073091310788},{"content":"The results were... mixed. I did get to move faster at the start, but started running into more and more type-related bugs as development went on. If I were to do this project again, I'd stick to Typescript.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8310618475982},{"content":"At build time, it embeds all your posts into vectors and puts them into a vector database. Then, for each paragraph in a post, it queries the vector database for the 20 most similar paragraphs from all your notes. It stores these in a precomputed index. It then statically generates a blog for you (like Gatsby or any other static site generator), and uses this index so users can see related ideas when they click on a paragraph.","parent":"posts/What is Yurt?.txt","score":0.8297771282165065},{"content":"However, when building Yurt, the static site builder for nomad hypertext, I found myself repeating a lot of logic. I found myself wanting to add features to the indexing engine, like being able to use cloud providers instead of local models (because doing all this processing locally can take ages!). In the future, I might want to use multimodal models, so I can see similarity between images, text, and audio. \n\nFactoring out the semantic search element of my app would have been the correct, unix-ey thing to do, and it would allow me to make these extensions in the future. I plan on doing this soon.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8280903939625919},{"content":"You're viewing this on a statically generated blog using Yurt!","parent":"posts/What is Yurt?.txt","score":0.8278597899846841},{"content":"Why not Tauri? With Tauri you have to write your backend routes in Rust. Surprisingly, I could not find any in-memory vector databases in Rust. I also have never written Rust in my life, though I would have been happy to pick it up to avoid using Electron. More importantly, I don't think there was a library that would have let me run Hugging Face's text embedding model in Rust. For these reasons, I had to use JS for my backend, which meant I had to use Electron.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8264579864151181},{"content":"Electron really, really, really sucks. For starters, you have to use CommonJS. That itself would be bad enough, but there are a huge pile of other inconveniences that Electron dumps on you: Using window.prompt() doesn't work (because it blocks the main thread apparently) and it generates HUGE executables without making the slightest effort to tree-shake anything (it was literally bundling in sample text files I was using in the repo). Creating my own window.prompt() alternative was an interesting exercise, but I wish I wasn't forced into doing it.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8246616064317839},{"content":"I've been working on notetaking apps for years now. I starting working on the first one on the bus back from my internship. I had an idea for a simple interaction - users should be able to highlight a piece of text, then add tags to that text. I distinctly remember thinking to myself, \"That should be a piece of cake! I should be able to finish it during the 45 minute bus  ride.\"\n\n\nIt ended up taking the rest of the summer. I was 19, naive, and had no idea what a nightmare the contenteditable HTML standard was.","parent":"posts/Plaintext is your best friend.txt","score":0.8202918501863122},{"content":"I think eventually, I might want to deploy a blog with a full fledged backend, so users can query anything they'd like to my blog.","parent":"posts/What is Yurt?.txt","score":0.8149607804574406},{"content":"It does this by dividing your notes up into paragraph-sized blocks and indexing them into a vector database with an AI embedding model.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8142921154033422},{"content":"Yurt is a static site generator, built off the same principles as Nomad Hypertext.","parent":"posts/What is Yurt?.txt","score":0.812802206971829},{"content":"Nomad Hypertext is a writing app built around semantic search.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8115761823378411},{"content":"You might object: Just because the vector DB and text embedding model are tied to JS doesn't mean your whole application does! You'd be right. I could have rolled the vector DB and text embedding model into a separate executable, compiling a node wrapper around those libraries into their own executables, then calling those executables from my Tauri app with IPC.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8113605023922508},{"content":"Next to every paragraph, there is a button that will show you other related paragraphs from your other notes.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8111557030191708},{"content":"I opted to use Javascript instead of Typescript out of mix of curiosity and laziness. Like most people, I was introduced to Javascript before I was introduced to Typescript. Like most people, I suffered through many null errors and was relieved when I discovered that the Typescript compiler could save me from many of them. Like most people, though I am grateful for Typescript, I find it occasionally cumbersome.","parent":"posts/The making of Nomad Hypertext.txt","score":0.810401594183074},{"content":"The bottom line is with a notetaking app, what I'm really looking for is the ability to see connections between my ideas. I don't care about pretty formatting. Plain text is uglier, but it increases the range of things you can do with your notes - you can pipe it into an LLM, you can pipe it into a summarizer, you can take notes on Apple Notes then paste them into your notes later, you can set up a service that lets you text a number that will then paste your texts into your notes, etc. etc.","parent":"posts/Plaintext is your best friend.txt","score":0.8097745850725792},{"content":"One last thing: There is a solution that combines the flexibility of plaintext with the aesthetics of rich text - Markdown! I don't think I'll support Markdown formatting in nomad hypertext, but for my static site generator Yurt, I will try to do that in the future. The utility would mostly be from having usable links.","parent":"posts/Plaintext is your best friend.txt","score":0.8028965517104726},{"content":"I avoided this IPC-executable approach because I thought it'd be really complicated. To some extent, this was the correct decision - I'm glad I got a MVP of my project out during my time at Recurse.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8012088920236357}],"TikTok has normalized tying music to everything - political messages, dances, jokes, short videos, etc. etc. Aiming to help do something similar with [[synesthesia]], but focused more on explicitly creative output. ":[{"content":"The bottom line is with a notetaking app, what I'm really looking for is the ability to see connections between my ideas. I don't care about pretty formatting. Plain text is uglier, but it increases the range of things you can do with your notes - you can pipe it into an LLM, you can pipe it into a summarizer, you can take notes on Apple Notes then paste them into your notes later, you can set up a service that lets you text a number that will then paste your texts into your notes, etc. etc.","parent":"posts/Plaintext is your best friend.txt","score":0.8286858481979914},{"content":"I'll end with a haiku. \n\nNomad Hypertext\nPowered by semantic search\nGives inspiration","parent":"posts/What is Nomad Hypertext?.txt","score":0.8176480046918485},{"content":"I've been working on notetaking apps for years now. I starting working on the first one on the bus back from my internship. I had an idea for a simple interaction - users should be able to highlight a piece of text, then add tags to that text. I distinctly remember thinking to myself, \"That should be a piece of cake! I should be able to finish it during the 45 minute bus  ride.\"\n\n\nIt ended up taking the rest of the summer. I was 19, naive, and had no idea what a nightmare the contenteditable HTML standard was.","parent":"posts/Plaintext is your best friend.txt","score":0.8166870301589246},{"content":"It uses neural search to show you how your ideas are connected to each other. This is done offline and privately on your computer, entirely on your machine.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8161050863775049},{"content":"It does this by dividing your notes up into paragraph-sized blocks and indexing them into a vector database with an AI embedding model.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8159510697901258},{"content":"Of course, if you're looking to raise a billion dollars on your consumer-facing notetaking app, plain text won't cut it. Lucky for us all, Jerome Powell has acted wisely to proscribe this possibility.","parent":"posts/Plaintext is your best friend.txt","score":0.8158300934469432},{"content":"The flexibility and power and power of plaintext matters much more than the meagre aesthetic gains of rich text. I am genuinely convinced that bold, italics and titles add little to nothing to my experience of a notetaking app.","parent":"posts/Plaintext is your best friend.txt","score":0.8130865796733264},{"content":"Nomad Hypertext is a writing app built around semantic search.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8110439012826185},{"content":"However, when building Yurt, the static site builder for nomad hypertext, I found myself repeating a lot of logic. I found myself wanting to add features to the indexing engine, like being able to use cloud providers instead of local models (because doing all this processing locally can take ages!). In the future, I might want to use multimodal models, so I can see similarity between images, text, and audio. \n\nFactoring out the semantic search element of my app would have been the correct, unix-ey thing to do, and it would allow me to make these extensions in the future. I plan on doing this soon.","parent":"posts/The making of Nomad Hypertext.txt","score":0.8081184396354076},{"content":"Plaintext is your best friend.","parent":"posts/Plaintext is your best friend.txt","score":0.8071379156361462},{"content":"Next to every paragraph, there is a button that will show you other related paragraphs from your other notes.","parent":"posts/What is Nomad Hypertext?.txt","score":0.8010834126130415}]}