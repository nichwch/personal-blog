{"exegesis has taken about a year to make. Including the development of its predecessor, YANA, it's taken about a year and a half. When I started making YANA the summer after my freshman year, I thought it'd be a small project; just a little utility for me to track my thoughts. I had no idea it'd balloon into such a large endeavor.": [{"content": "exegesis has taken about a year to make. Including the development of its predecessor, YANA, it's taken about a year and a half. When I started making YANA the summer after my freshman year, I thought it'd be a small project; just a little utility for me to track my thoughts. I had no idea it'd balloon into such a large endeavor.", "parent": "Reflections on exegesis.txt", "score": -2.384185791015625e-07}, {"content": "Why did it take so long? Part of it is just a lack of experience. While making exegesis, I changed the database schema countless times, wrote dozens of migrations, accidentally wiped my database once (thank God for RDS backups), and rewrote the backend from scratch 2 months before release. There was also a good amount of feature creep. Whenever I thought I was close to finished, something unexpected would pop up - I started writing this essay 3 months before I actually released exegesis. Whatever the reason, if you count development time on the predecessor to exegesis, I've spent almost a tenth of my life building this. The entire project clocks in at a couple thousand lines of code. It is the largest, most complex, and most difficult thing I have built so far in my life.  [The last time I worked on a project this long, it was the first video game I made back in my senior year of high school.](https://medium.com/@nichwch/machine-gods-devlog-1-166dff474366) Even then, it was really about 6 months of development total, with a huge gap in between because of school, and it was all made with no-code game development tools, because back then the idea of using actual code terrified me. [[exegesis]] [[personal-reflection]] ", "parent": "Reflections on exegesis.txt", "score": 0.34380215406417847}, {"content": "I want to continue working on [[exegesis]]. There are still a plethora of features I want to build into the app. I have wanted to build something like this for a long time - I sort of did with my last project [YANA](https://yananotes.com/), but the core text engine was so limited that I had to start over from scratch (the product of which is exegesis). I want to sort out a formal list of features before a beta release, and an eventual public release. I will probably use exegesis as a devlog of sorts as well.", "parent": "Reflections for the New Year.txt", "score": 0.3747406601905823}, {"content": "Working on exegesis was a grueling affair at times. I rewrote the schema multiple times, rewrote the backend from scratch 2 months before release, chased countless UI bugs, and manually patched abandoned NPM packages. Part of it may have been due to my inexperience, but [working with ](https://nichwch.medium.com/making-yana-e3fade3f56e7)[rich text](https://medium.engineering/why-contenteditable-is-terrible-122d8a40e480) is just a [difficult task](https://twitter.com/thesephist/status/1360298464349999108), period. At one point, I considered giving up after finding a rival writing app I thought I simply couldn't compete with - I have a copy of an unfinished essay I started writing on why I had given up tucked away somewhere. ", "parent": "Prometheus.txt", "score": 0.38444817066192627}, {"content": "The first year of this strange new decade is over. Personally, however, the end of the this year is less significant to me than the release of [[exegesis]]. A lot of my time was spent developing this project over the last year, and now that it's finished, I have a lot more time to spend on other activities. I'm not really big on resolutions, but I do want to reflect a little on everything. Of course, I anticipate [[exegesis]] will help me organize my new endeavors.", "parent": "Reflections for the New Year.txt", "score": 0.45322680473327637}, {"content": "I originally thought of [[exegesis]] as a tool for rational thought as well - I wanted to use it to organize my notes, and hoped it would make me better at retaining information at school. After more than a year of using it, it turns out I almost never use it for either of those things.", "parent": "On tools for thought: knowledge management vs creativity.txt", "score": 0.49604833126068115}, {"content": "Continue working on exegesis (and maybe some other personal projects)", "parent": "Goals for Spring Quarter.txt", "score": 0.5114957690238953}, {"content": "In some sense exegesis gave birth to itself, because I used it to organize my ideas about exegesis. On days where exegesis was not working because I had broken something while coding it, I noticed that I could not think as clearly. Its absence was felt.", "parent": "Second Brains.txt", "score": 0.5139355659484863}, {"content": "Also encouraging was the fact that I started hearing about similar notetaking apps a couple months into developing exegesis. Apps like Roam Research, and Obsidian were making waves on Twitter, and were taking a similar approach to nonlinear writing that I wanted to take exegesis in. This proved that I wasn't alone in needing this kind of product. ", "parent": "Second Brains.txt", "score": 0.5161769390106201}, {"content": "This was reassuring, because it meant I had made something genuinely useful. In the past, I have made things I simply had no desire to use - one example is [JAFT](https://nichwch.medium.com/what-is-jaft-f543a4fad9d7), a time tracking app I made after making YANA (the predecessor to exegesis). I stopped using it after a bit, and didn't bother renewing the domain. I don't miss JAFT at all. The fact that I did miss exegesis on the days where it wasn't operational was a good sign.", "parent": "Second Brains.txt", "score": 0.5273229479789734}], "": [{"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 0.6012784242630005}, {"content": "~", "parent": "The making of Nomad Hypertext.txt", "score": 0.6012927889823914}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 0.6012927889823914}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 0.6012927889823914}, {"content": "~", "parent": "Fragments.txt", "score": 0.6012939214706421}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 0.6012951544163957}, {"content": "~", "parent": "Second Brains.txt", "score": 0.601299524307251}, {"content": "~", "parent": "Fragments.txt", "score": 0.601325273513794}, {"content": "~", "parent": "untitled-1-4-2022.txt", "score": 0.601325273513794}, {"content": "~", "parent": "The making of Nomad Hypertext.txt", "score": 0.601325273513794}], "Why did it take so long? Part of it is just a lack of experience. While making exegesis, I changed the database schema countless times, wrote dozens of migrations, accidentally wiped my database once (thank God for RDS backups), and rewrote the backend from scratch 2 months before release. There was also a good amount of feature creep. Whenever I thought I was close to finished, something unexpected would pop up - I started writing this essay 3 months before I actually released exegesis. Whatever the reason, if you count development time on the predecessor to exegesis, I've spent almost a tenth of my life building this. The entire project clocks in at a couple thousand lines of code. It is the largest, most complex, and most difficult thing I have built so far in my life.  [The last time I worked on a project this long, it was the first video game I made back in my senior year of high school.](https://medium.com/@nichwch/machine-gods-devlog-1-166dff474366) Even then, it was really about 6 months of development total, with a huge gap in between because of school, and it was all made with no-code game development tools, because back then the idea of using actual code terrified me. [[exegesis]] [[personal-reflection]] ": [{"content": "Why did it take so long? Part of it is just a lack of experience. While making exegesis, I changed the database schema countless times, wrote dozens of migrations, accidentally wiped my database once (thank God for RDS backups), and rewrote the backend from scratch 2 months before release. There was also a good amount of feature creep. Whenever I thought I was close to finished, something unexpected would pop up - I started writing this essay 3 months before I actually released exegesis. Whatever the reason, if you count development time on the predecessor to exegesis, I've spent almost a tenth of my life building this. The entire project clocks in at a couple thousand lines of code. It is the largest, most complex, and most difficult thing I have built so far in my life.  [The last time I worked on a project this long, it was the first video game I made back in my senior year of high school.](https://medium.com/@nichwch/machine-gods-devlog-1-166dff474366) Even then, it was really about 6 months of development total, with a huge gap in between because of school, and it was all made with no-code game development tools, because back then the idea of using actual code terrified me. [[exegesis]] [[personal-reflection]] ", "parent": "Reflections on exegesis.txt", "score": 8.940696716308594e-07}, {"content": "Working on exegesis was a grueling affair at times. I rewrote the schema multiple times, rewrote the backend from scratch 2 months before release, chased countless UI bugs, and manually patched abandoned NPM packages. Part of it may have been due to my inexperience, but [working with ](https://nichwch.medium.com/making-yana-e3fade3f56e7)[rich text](https://medium.engineering/why-contenteditable-is-terrible-122d8a40e480) is just a [difficult task](https://twitter.com/thesephist/status/1360298464349999108), period. At one point, I considered giving up after finding a rival writing app I thought I simply couldn't compete with - I have a copy of an unfinished essay I started writing on why I had given up tucked away somewhere. ", "parent": "Prometheus.txt", "score": 0.2820497155189514}, {"content": "I want to continue working on [[exegesis]]. There are still a plethora of features I want to build into the app. I have wanted to build something like this for a long time - I sort of did with my last project [YANA](https://yananotes.com/), but the core text engine was so limited that I had to start over from scratch (the product of which is exegesis). I want to sort out a formal list of features before a beta release, and an eventual public release. I will probably use exegesis as a devlog of sorts as well.", "parent": "Reflections for the New Year.txt", "score": 0.36815589666366577}, {"content": "It is this property that allows programmers to cheat the Gods, and achieve divine levels of creative output thought forbidden to mortals. A programmer can create abstractions than enable them to create in days what previously took months. I myself rewrote a good part of exegesis 2 months before I released it, and the new abstractions I picked enabled me to redo in those 2 months what took me almost a year at first. Moreover, programmers can share their abstractions, and borrow the inventions of others as well.", "parent": "Prometheus.txt", "score": 0.39095252752304077}, {"content": "I fell into this kind of thinking while building exegesis, and it put an enormous amount of pressure on me, because it made me feel as if it wasn't just a notetaking app I was building, but a shrine for the mind. I would look at other notetaking systems like Roam Research and feel threatened - my notetaking app wasn't as powerful as theirs, therefore my mind would be weaker than theirs. Every little imperfection, every unimplemented feature, every bug felt sacrilegious - this was my second brain I was building after all. Needless to say, this led to a lot of feature creep, because my second brain had to be perfect.", "parent": "Second Brains.txt", "score": 0.41078007221221924}, {"content": "The first year of this strange new decade is over. Personally, however, the end of the this year is less significant to me than the release of [[exegesis]]. A lot of my time was spent developing this project over the last year, and now that it's finished, I have a lot more time to spend on other activities. I'm not really big on resolutions, but I do want to reflect a little on everything. Of course, I anticipate [[exegesis]] will help me organize my new endeavors.", "parent": "Reflections for the New Year.txt", "score": 0.4351634979248047}, {"content": "Working on a refactor for [[exegesis]] and [[synesthesia]], thinking about how to budget time. Working strategy is to take estimate for each feature, and double the time for each to account for stupid roadblocks (wifi not working, interrupted by something, bad documentation, etc. etc.) [[code]] [[devlog]] ", "parent": "untitled-9-21-2021.txt", "score": 0.4363292455673218}, {"content": "I want to learn more code. Working on [[exegesis]] over the course of a year, I saw my coding ability improve substantially. Towards the last 2 months, while rewriting a part of the codebase, I found myself dumbfounded by some of the decisions and patterns I had used a year earlier. The code I wrote towards the end was noticeably cleaner and more maintainable, mostly because I had familiarized myself with [[React]] hooks. Learning NextJS and GraphQL was also very rewarding, and both technologies were used extensively in the final version of exegesis. Looking forwards, I am thinking about learning Go, Clojure and maybe Rust. Go is the most practical one of all these for my purposes, and could open up a lot of job offers. Clojure is the most interesting from a theoretical standpoint, since I've never used a lisp or functional language. Rust is interesting because I hate systems/low-level programming, but I suspect that might only be because I hate C, and maybe Rust's more modern features will sell me on it. ", "parent": "Reflections for the New Year.txt", "score": 0.4495930075645447}, {"content": "The main focus here is personal projects - learning more code and writing more are auxiliary activities that help this end. First among these personal projects is [[exegesis]], but I have a number of other personal projects that I want to work on as well. ", "parent": "Goals for Spring Quarter.txt", "score": 0.46663373708724976}, {"content": "If this sounds silly, that's because it is. Reality check: note taking apps are just note taking apps; it is supremely arrogant to think that you think you can replicate with a couple KLOCs of javascript code what took evolution thousands of years to perfect. I have stopped thinking about exegesis as a personal knowledge management system or a notetaking app. For me it is the mental equivalent of [perpetual stew](https://en.wikipedia.org/wiki/Perpetual_stew) - I leave it on the stove and toss ideas in whenever its convenient. The effortlessness is the point; if I ever find myself drawing a diagram to have to figure out how to use it, that defeats the purpose of the whole thing.", "parent": "Second Brains.txt", "score": 0.4670700430870056}], "That last project had a significant effect on me. Back in high school, I was heavily involved in Model UN and other political clubs. Making the [game](https://nichwch.itch.io/machinegods) made me realize it was making things and not winning arguments that really made me happier. It was also what convinced me that programming could be something more than rote problem solving, and even be a genuine creative medium. It was why I switched my major from Economics to Computer Science in college.[[personal-reflection]] ": [{"content": "That last project had a significant effect on me. Back in high school, I was heavily involved in Model UN and other political clubs. Making the [game](https://nichwch.itch.io/machinegods) made me realize it was making things and not winning arguments that really made me happier. It was also what convinced me that programming could be something more than rote problem solving, and even be a genuine creative medium. It was why I switched my major from Economics to Computer Science in college.[[personal-reflection]] ", "parent": "Reflections on exegesis.txt", "score": 2.980232238769531e-07}, {"content": "This project, too, has had a large effect on me - you can't work on something for a year and not have it affect you. I started this project sitting in a coffee shop; now I haven't sat in one for months. I know this sounds like navel gazing, but I've worked on this project through a pandemic, civil unrest, and statewide wildfires. Now it's finished, and I almost feel a little bittersweet releasing it. ", "parent": "Reflections on exegesis.txt", "score": 0.4648308753967285}, {"content": "Why did it take so long? Part of it is just a lack of experience. While making exegesis, I changed the database schema countless times, wrote dozens of migrations, accidentally wiped my database once (thank God for RDS backups), and rewrote the backend from scratch 2 months before release. There was also a good amount of feature creep. Whenever I thought I was close to finished, something unexpected would pop up - I started writing this essay 3 months before I actually released exegesis. Whatever the reason, if you count development time on the predecessor to exegesis, I've spent almost a tenth of my life building this. The entire project clocks in at a couple thousand lines of code. It is the largest, most complex, and most difficult thing I have built so far in my life.  [The last time I worked on a project this long, it was the first video game I made back in my senior year of high school.](https://medium.com/@nichwch/machine-gods-devlog-1-166dff474366) Even then, it was really about 6 months of development total, with a huge gap in between because of school, and it was all made with no-code game development tools, because back then the idea of using actual code terrified me. [[exegesis]] [[personal-reflection]] ", "parent": "Reflections on exegesis.txt", "score": 0.47977977991104126}, {"content": "In my teen years, I found programming and videogame development, and that became my creative outlet for a while. I found a way to scan my drawings into digital files, and for a while that was my way of combining art and programming.", "parent": "Fragments.txt", "score": 0.49317628145217896}, {"content": "I want to learn more code. Working on [[exegesis]] over the course of a year, I saw my coding ability improve substantially. Towards the last 2 months, while rewriting a part of the codebase, I found myself dumbfounded by some of the decisions and patterns I had used a year earlier. The code I wrote towards the end was noticeably cleaner and more maintainable, mostly because I had familiarized myself with [[React]] hooks. Learning NextJS and GraphQL was also very rewarding, and both technologies were used extensively in the final version of exegesis. Looking forwards, I am thinking about learning Go, Clojure and maybe Rust. Go is the most practical one of all these for my purposes, and could open up a lot of job offers. Clojure is the most interesting from a theoretical standpoint, since I've never used a lisp or functional language. Rust is interesting because I hate systems/low-level programming, but I suspect that might only be because I hate C, and maybe Rust's more modern features will sell me on it. ", "parent": "Reflections for the New Year.txt", "score": 0.5075027346611023}, {"content": "My goal in life right now is to focus more on programming, while keeping music as a hobby. I want to improve at both, and someday I'd like to unite these two interests - not in some surface level way like getting really into digital signal processing or generative music, but by making the process of writing software more like the process of making music (intuitive, embodied, modular, composable).", "parent": "NOW PAGE.txt", "score": 0.5106512308120728}, {"content": "This was reassuring, because it meant I had made something genuinely useful. In the past, I have made things I simply had no desire to use - one example is [JAFT](https://nichwch.medium.com/what-is-jaft-f543a4fad9d7), a time tracking app I made after making YANA (the predecessor to exegesis). I stopped using it after a bit, and didn't bother renewing the domain. I don't miss JAFT at all. The fact that I did miss exegesis on the days where it wasn't operational was a good sign.", "parent": "Second Brains.txt", "score": 0.5146987438201904}, {"content": "This is not groundbreaking news, but it's groundbreaking for me. I started my software engineering career writing code with cloud applications in mind, and the idea that you can ship cool projects without running database migrations or doing extensive backtesting against your monolith *is* groundbreaking to me. In college I wanted my own blog and instead of getting a static site generator I built out a cloud application with NextJS, PostgreSQL and Heroku. I did learn a lot and it helped me land my first internship, but now it strikes me as an incredibly wrong minded approach. ", "parent": "NOW PAGE.txt", "score": 0.516154408454895}, {"content": "I might not really care for making music, but learning how to play the guitar showed me what I'm looking for from a creative process. If I can form a creative process that feels like playing the guitar and outputs software, that would be very rewarding.", "parent": "NOW PAGE.txt", "score": 0.5166688561439514}, {"content": "I have not had as much time to work on programming side projects. In general, I've been spending more spare time on music rather than programming. There's nothing intrinsically wrong with that, but I feel like it's less a reflection of what I want than it is a reflection of my environment. ", "parent": "NOW PAGE.txt", "score": 0.5350641012191772}], "This project, too, has had a large effect on me - you can't work on something for a year and not have it affect you. I started this project sitting in a coffee shop; now I haven't sat in one for months. I know this sounds like navel gazing, but I've worked on this project through a pandemic, civil unrest, and statewide wildfires. Now it's finished, and I almost feel a little bittersweet releasing it. ": [{"content": "This project, too, has had a large effect on me - you can't work on something for a year and not have it affect you. I started this project sitting in a coffee shop; now I haven't sat in one for months. I know this sounds like navel gazing, but I've worked on this project through a pandemic, civil unrest, and statewide wildfires. Now it's finished, and I almost feel a little bittersweet releasing it. ", "parent": "Reflections on exegesis.txt", "score": 5.960464477539063e-08}, {"content": "That last project had a significant effect on me. Back in high school, I was heavily involved in Model UN and other political clubs. Making the [game](https://nichwch.itch.io/machinegods) made me realize it was making things and not winning arguments that really made me happier. It was also what convinced me that programming could be something more than rote problem solving, and even be a genuine creative medium. It was why I switched my major from Economics to Computer Science in college.[[personal-reflection]] ", "parent": "Reflections on exegesis.txt", "score": 0.4648197293281555}, {"content": "The first year of this strange new decade is over. Personally, however, the end of the this year is less significant to me than the release of [[exegesis]]. A lot of my time was spent developing this project over the last year, and now that it's finished, I have a lot more time to spend on other activities. I'm not really big on resolutions, but I do want to reflect a little on everything. Of course, I anticipate [[exegesis]] will help me organize my new endeavors.", "parent": "Reflections for the New Year.txt", "score": 0.5159258246421814}, {"content": "Working on exegesis was a grueling affair at times. I rewrote the schema multiple times, rewrote the backend from scratch 2 months before release, chased countless UI bugs, and manually patched abandoned NPM packages. Part of it may have been due to my inexperience, but [working with ](https://nichwch.medium.com/making-yana-e3fade3f56e7)[rich text](https://medium.engineering/why-contenteditable-is-terrible-122d8a40e480) is just a [difficult task](https://twitter.com/thesephist/status/1360298464349999108), period. At one point, I considered giving up after finding a rival writing app I thought I simply couldn't compete with - I have a copy of an unfinished essay I started writing on why I had given up tucked away somewhere. ", "parent": "Prometheus.txt", "score": 0.5330637693405151}, {"content": "Why did it take so long? Part of it is just a lack of experience. While making exegesis, I changed the database schema countless times, wrote dozens of migrations, accidentally wiped my database once (thank God for RDS backups), and rewrote the backend from scratch 2 months before release. There was also a good amount of feature creep. Whenever I thought I was close to finished, something unexpected would pop up - I started writing this essay 3 months before I actually released exegesis. Whatever the reason, if you count development time on the predecessor to exegesis, I've spent almost a tenth of my life building this. The entire project clocks in at a couple thousand lines of code. It is the largest, most complex, and most difficult thing I have built so far in my life.  [The last time I worked on a project this long, it was the first video game I made back in my senior year of high school.](https://medium.com/@nichwch/machine-gods-devlog-1-166dff474366) Even then, it was really about 6 months of development total, with a huge gap in between because of school, and it was all made with no-code game development tools, because back then the idea of using actual code terrified me. [[exegesis]] [[personal-reflection]] ", "parent": "Reflections on exegesis.txt", "score": 0.5386111736297607}, {"content": "This was reassuring, because it meant I had made something genuinely useful. In the past, I have made things I simply had no desire to use - one example is [JAFT](https://nichwch.medium.com/what-is-jaft-f543a4fad9d7), a time tracking app I made after making YANA (the predecessor to exegesis). I stopped using it after a bit, and didn't bother renewing the domain. I don't miss JAFT at all. The fact that I did miss exegesis on the days where it wasn't operational was a good sign.", "parent": "Second Brains.txt", "score": 0.5535099506378174}, {"content": "I stopped working on little projects. The voice in my head that would get excited by little hints of an idea was drowned out by demands that everything be in the service of something ambitious, something legible, something monetizable. I let my ambition trap me.", "parent": "Fragments.txt", "score": 0.5610833168029785}, {"content": "This is not groundbreaking news, but it's groundbreaking for me. I started my software engineering career writing code with cloud applications in mind, and the idea that you can ship cool projects without running database migrations or doing extensive backtesting against your monolith *is* groundbreaking to me. In college I wanted my own blog and instead of getting a static site generator I built out a cloud application with NextJS, PostgreSQL and Heroku. I did learn a lot and it helped me land my first internship, but now it strikes me as an incredibly wrong minded approach. ", "parent": "NOW PAGE.txt", "score": 0.577194094657898}, {"content": "For a while, I exclusively worked on a long, serious projects. I wanted to build a billion dollar product. I wanted to be the founder of a successful startup. I wanted to write, but I wanted to write on my own platform that everybody else would also write on, that would have all the features I wanted that everybody else would love.", "parent": "Fragments.txt", "score": 0.5832771062850952}, {"content": "I have not had as much time to work on programming side projects. In general, I've been spending more spare time on music rather than programming. There's nothing intrinsically wrong with that, but I feel like it's less a reflection of what I want than it is a reflection of my environment. ", "parent": "NOW PAGE.txt", "score": 0.5869241952896118}]}