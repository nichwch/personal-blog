{" ": [{"content": " ", "parent": "NOW PAGE.txt", "score": 0.0}, {"content": " ", "parent": "Plaintext is your best friend.txt", "score": 0.0}, {"content": " ", "parent": "untitled-10-11-2021.txt", "score": 1.3416855608738842e-06}, {"content": "  ", "parent": "The making of Nomad Hypertext.txt", "score": 0.1724659502506256}, {"content": "~", "parent": "The making of Nomad Hypertext.txt", "score": 1.4249026775360107}, {"content": "~", "parent": "Fragments.txt", "score": 1.4249837398529053}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 1.4249838862382762}, {"content": "~", "parent": "Fragments.txt", "score": 1.425052523612976}, {"content": "~", "parent": "Fragments.txt", "score": 1.425052523612976}, {"content": "~", "parent": "Fragments.txt", "score": 1.425052523612976}], "I have a job now! I work at Guardrails AI as a software engineer, working on an open source library that provides AI with guardrails to prevent undesirable behavior. ": [{"content": "I have a job now! I work at Guardrails AI as a software engineer, working on an open source library that provides AI with guardrails to prevent undesirable behavior. ", "parent": "NOW PAGE.txt", "score": 0.0}, {"content": "As far as learning more code goes, I want to branch out beyond full-stack web development. The two \"trendy\" technologies I'd like to learn more about are blockchain and AI/ML. For the former, I want to learn more about Ethereum development, and for the latter, I want to review some basic linear algebra before adventuring further. I've heard good things about [huggingface](https://huggingface.co/), and want to explore that further. I want to spend some time learning about these technologies around 3 times a week, maybe for an hour or two a session. ", "parent": "Goals for Spring Quarter.txt", "score": 1.178002119064331}, {"content": "This is not groundbreaking news, but it's groundbreaking for me. I started my software engineering career writing code with cloud applications in mind, and the idea that you can ship cool projects without running database migrations or doing extensive backtesting against your monolith *is* groundbreaking to me. In college I wanted my own blog and instead of getting a static site generator I built out a cloud application with NextJS, PostgreSQL and Heroku. I did learn a lot and it helped me land my first internship, but now it strikes me as an incredibly wrong minded approach. ", "parent": "NOW PAGE.txt", "score": 1.201401611257174}, {"content": "I want to learn more code. Working on [[exegesis]] over the course of a year, I saw my coding ability improve substantially. Towards the last 2 months, while rewriting a part of the codebase, I found myself dumbfounded by some of the decisions and patterns I had used a year earlier. The code I wrote towards the end was noticeably cleaner and more maintainable, mostly because I had familiarized myself with [[React]] hooks. Learning NextJS and GraphQL was also very rewarding, and both technologies were used extensively in the final version of exegesis. Looking forwards, I am thinking about learning Go, Clojure and maybe Rust. Go is the most practical one of all these for my purposes, and could open up a lot of job offers. Clojure is the most interesting from a theoretical standpoint, since I've never used a lisp or functional language. Rust is interesting because I hate systems/low-level programming, but I suspect that might only be because I hate C, and maybe Rust's more modern features will sell me on it. ", "parent": "Reflections for the New Year.txt", "score": 1.2219749689102173}, {"content": "Learn AI/ML 3 times a week", "parent": "Goals for Spring Quarter.txt", "score": 1.2346713542938232}, {"content": "Fortunately, it looks like there's progress being made here, with projects like [https://github.com/blocks/blocks.](https://github.com/blocks/blocks.) I want to build my own solutions, maybe borrowing from current projects.[[code]] [[ideas]] [[tools for thought]] ", "parent": "untitled-9-24-2021.txt", "score": 1.2387694120407104}, {"content": "That last project had a significant effect on me. Back in high school, I was heavily involved in Model UN and other political clubs. Making the [game](https://nichwch.itch.io/machinegods) made me realize it was making things and not winning arguments that really made me happier. It was also what convinced me that programming could be something more than rote problem solving, and even be a genuine creative medium. It was why I switched my major from Economics to Computer Science in college.[[personal-reflection]] ", "parent": "Reflections on exegesis.txt", "score": 1.2762120962142944}, {"content": "This morning I was listening to a podcast suggested by [[Linus Lee]] - Changelog. I don't usually listen to podcasts, but I have had good experiences with audiobooks in the past. It was nice being able to absorb information over breakfast without staring at a screen. The subject material was interesting; it was some CMU professor doing research on individual programmers and the myth of the \"10x developer.\" ", "parent": "untitled-9-20-2021.txt", "score": 1.3167433738708496}, {"content": "I rewrote the indexing software for this blog in Python. The general philosophy of keeping things as modular as possible, storing content in interoperable, plain formats whenever possible, has been paying off. I'm realizing slowly how many other possibilities are opened up by keeping content in plaintext/markdown - I can write a weekend project mapping my blog posts by topic and time, I can create a word cloud visualization of my blog, I can build a game of pong where the blocks are paragraphs of my blogposts, all without touching any existing code. ", "parent": "NOW PAGE.txt", "score": 1.324066783121021}, {"content": "As I looked further into these tools, I found that some had taken to calling them [Second Brains](https://fortelabs.co/blog/basboverview/). I thought this was incredibly exciting. The term sounds cyberpunk; building a \"second brain\" sounds way cooler than building a \"note taking app.\" At the same time, something about it unsettled me. ", "parent": "Second Brains.txt", "score": 1.3252333402633667}], "": [{"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 1.2026228078123622}, {"content": "~", "parent": "Fragments.txt", "score": 1.202622890472412}, {"content": "~", "parent": "The making of Nomad Hypertext.txt", "score": 1.202627182006836}, {"content": "~", "parent": "The making of Nomad Hypertext.txt", "score": 1.2026363611221313}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 1.2026889059926669}, {"content": "~", "parent": "NOW PAGE.txt", "score": 1.2026889059926669}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 1.2026889059926669}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 1.2026889059926669}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 1.2026889059926669}, {"content": "~", "parent": "NOW PAGE.txt", "score": 1.2026889059926669}], "I'm playing guitar in two bands (one is a cover band, the other is an indie rock band). I'm glad I'm no longer a bedroom guitarist and it feels good to play music with other people, for other people.": [{"content": "I'm playing guitar in two bands (one is a cover band, the other is an indie rock band). I'm glad I'm no longer a bedroom guitarist and it feels good to play music with other people, for other people.", "parent": "NOW PAGE.txt", "score": 0.0}, {"content": "I might not really care for making music, but learning how to play the guitar showed me what I'm looking for from a creative process. If I can form a creative process that feels like playing the guitar and outputs software, that would be very rewarding.", "parent": "NOW PAGE.txt", "score": 1.0162365554861092}, {"content": "I have not really settled into a good practice schedule for either piano or guitar. For the past couple of weeks, I've neglected guitar after moving my electric keyboard into my room, though my piano progress has hardly been good either - I have spent the past couple months playing the same pentatonic licks over Autumn Leaves. My goal for both instruments is to learn a couple of jazz standards with my housemates so we can jam together more. ", "parent": "Goals for Spring Quarter.txt", "score": 1.042667269706726}, {"content": "I don't actually find music to be more fulfilling than programming. I got into playing the guitar mostly by accident and to be honest I am much better at the guitar than I am at programming, but playing the guitar was never my dream growing up. There are software ideas that I am excited about and obsessed with. I don't really feel the same way about music.", "parent": "NOW PAGE.txt", "score": 1.0548749535806625}, {"content": "I love how physical playing the guitar is. I love the tactile sensation of steel strings digging into my fingers. I love how it requires me to coordinate all of my senses together. I love being able to experiment with small, self contained ideas with looper pedal. I love how it lets you map musical ideas into your head into concrete muscle memory, and I love that this muscle memory is *portable* between different keys and different songs.  ", "parent": "NOW PAGE.txt", "score": 1.0648886846047119}, {"content": "I want to get better at music. I went to [[piano]] classes as a kid and never really enjoyed them or took them seriously. Now I regret it. I also picked up guitar over quarantine, and want to get into a regular practice regimen for both of these instruments. For piano, I want to learn jazz, and how to improvise - I can't say I have much interest in building up my classical repertoire. For guitar, my current plan is to learn the blues, because I hear that's the root of many musical genres, and maybe branch off into rock or jazz later. A short term goal for both instruments is to familiarize myself with their scales. ", "parent": "Reflections for the New Year.txt", "score": 1.0737028121948242}, {"content": "I fell in love with playing the guitar because it rewards this lack of an attention span. You can copy a riff in minutes. You can create a new riff in minutes. Picking up a guitar puts me in an instant flow state, because I can just screw around and play with ideas instantly. It feels like a REPL for musical ideas.", "parent": "Fragments.txt", "score": 1.0828911066055298}, {"content": "Here's an anecdote to illustrate my point: I picked up guitar at the start of quarantine. What inspired this? Was it a childhood dream of mine? Maybe I wanted to be like my favorite rock stars? Or was it just the boredom?", "parent": "Giant Robots.txt", "score": 1.1315224170684814}, {"content": "Get good at guitar", "parent": "Goals for Spring Quarter.txt", "score": 1.1566418409347534}, {"content": "I enjoy the process of sitting with my guitar, generating riff ideas on the fly, soloing over 8 bar progressions on my looper, but I'm not excited at all about creating a song. In many ways, my feelings about software are kind of the opposite. I have mixed, love/hate feelings about the process of writing software (reading documentation, chasing down bugs, writing tests, etc), but I feel incredibly excited about the end product. ", "parent": "NOW PAGE.txt", "score": 1.1807449845776783}], "It's really hot in New York City, which lends itself to late night walks and spontaneous plans.  ": [{"content": "It's really hot in New York City, which lends itself to late night walks and spontaneous plans.  ", "parent": "NOW PAGE.txt", "score": 0.0}, {"content": "I think it's important to have free time to just mess around and be bored, and explore dumb things that might turn out to be not so dumb - after all, \"boredom is that disagreeable 'windless calm' of the soul that precedes a happy voyage and cheerful winds.\" Every activity I eventually took seriously - Model UN in high school, programming in college - started out as an casual hobby I never planned to take seriously. So, I'd rather have slow progress towards my goals and a sizeable chunk of time to mess around, than to fill my days to the point where I have no time to explore at all.", "parent": "Goals for Spring Quarter.txt", "score": 1.461153507232666}, {"content": "School being in session seems to change time itself, which now flows in hour-long increments marked by the streets flooding with bikes carrying students to their next classes. Even when I'm finished with classes, this hourly event event when the bike circles fill and students file in and out of the library leaves the aftertaste of school on everything.", "parent": "untitled-9-30-2021.txt", "score": 1.4772908687591553}, {"content": "Reminds me of a quote from [[Nietzsche]] in [[The Gay Science]] - \"Indeed, at hearing the news that 'the old god is dead', we philosophers and 'free spirits' feel illuminated by a new dawn; our heart overflows with gratitude, amazement, forebodings, expectation - finally the horizon seems clear again, even if not bright; finally our ships may set out again, set out to face any danger; every daring of the lover of knowledge is allowed again; the sea, our sea, lies open again; maybe there has never been such an 'open sea'.\u201d[[quotes]] [[Nietzsche]] [[The Gay Science]] ", "parent": "untitled-9-20-2021.txt", "score": 1.5010257959365845}, {"content": "I've noticed a strange tradeoff, where the more things I pile into my morning routine (getting in a run, doing hw, etc. etc.) the freer I feel for the rest of the day, but the harder it makes it to actually get out of bed and face these mundane tasks. If I just do what I want in the morning - code side projects - I jump out of bed easily, but then I feel the weight of obligations over me. If I handle obligations in the morning, then the thought of doing boring things makes it hard to get out of bed [[focus]] [[focus-machine]] [[ideas]] ", "parent": "untitled-9-24-2021.txt", "score": 1.5203208923339844}, {"content": "Felt good to be back at university, surrounded by other students. Just enjoying the feeling of walking across the quad, enjoying the morning sun, avoiding eye contact with people marketing their clubs, spotting a familiar face in a crowd, etc. etc.", "parent": "untitled-9-22-2021.txt", "score": 1.5431842803955078}, {"content": "The steady rhythm of school and myriad 30-minute break periods it produces throughout the day have a good effect on my productivity, which is surprising. There's that famous [Paul Graham essay](http://www.paulgraham.com/makersschedule.html) where he talks about hacker schedules, or how programmers/creators prefer long periods of focused time over short fragmented work periods (that managers tend to prefer) because there's an overhead cost to loading a project into your head. [[focus]] [[personal-reflection]] ", "parent": "untitled-10-1-2021.txt", "score": 1.5470410585403442}, {"content": "\"The tiniest event can tear a hole in the grey curtain of reaction which has marked the horizons of possibility under capitalist realism. From a situation in which nothing can happen, suddenly anything is possible again.\"[[personal-reflection]] [[quotes]] [[Capitalist-Realism]] ", "parent": "untitled-9-20-2021.txt", "score": 1.5471750497817993}, {"content": "projects are cool!", "parent": "Small Projects.txt", "score": 1.5475401878356934}, {"content": "That's why I picked the name nomad hypertext. ", "parent": "What is Nomad Hypertext.txt", "score": 1.5495136696680232}], "~": [{"content": "~", "parent": "NOW PAGE.txt", "score": 0.0}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 0.0}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 0.0}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 0.0}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 0.0}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 0.0}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 0.0}, {"content": "~", "parent": "What is Nomad Hypertext.txt", "score": 0.0}, {"content": "~", "parent": "NOW PAGE.txt", "score": 0.0}, {"content": "~", "parent": "Fragments.txt", "score": 0.0}], "I have not had as much time to work on programming side projects. In general, I've been spending more spare time on music rather than programming. There's nothing intrinsically wrong with that, but I feel like it's less a reflection of what I want than it is a reflection of my environment. ": [{"content": "I have not had as much time to work on programming side projects. In general, I've been spending more spare time on music rather than programming. There's nothing intrinsically wrong with that, but I feel like it's less a reflection of what I want than it is a reflection of my environment. ", "parent": "NOW PAGE.txt", "score": 0.0}, {"content": "I don't actually find music to be more fulfilling than programming. I got into playing the guitar mostly by accident and to be honest I am much better at the guitar than I am at programming, but playing the guitar was never my dream growing up. There are software ideas that I am excited about and obsessed with. I don't really feel the same way about music.", "parent": "NOW PAGE.txt", "score": 0.7549663048641038}, {"content": "My goal in life right now is to focus more on programming, while keeping music as a hobby. I want to improve at both, and someday I'd like to unite these two interests - not in some surface level way like getting really into digital signal processing or generative music, but by making the process of writing software more like the process of making music (intuitive, embodied, modular, composable).", "parent": "NOW PAGE.txt", "score": 0.7794865168582017}, {"content": "I have not really settled into a good practice schedule for either piano or guitar. For the past couple of weeks, I've neglected guitar after moving my electric keyboard into my room, though my piano progress has hardly been good either - I have spent the past couple months playing the same pentatonic licks over Autumn Leaves. My goal for both instruments is to learn a couple of jazz standards with my housemates so we can jam together more. ", "parent": "Goals for Spring Quarter.txt", "score": 0.9561110734939575}, {"content": "In short, I like the process of making music but don't care much about music. I have a love/hate relationship with the process of making software, but really want to write software.", "parent": "NOW PAGE.txt", "score": 0.9598645010829775}, {"content": "The main focus here is personal projects - learning more code and writing more are auxiliary activities that help this end. First among these personal projects is [[exegesis]], but I have a number of other personal projects that I want to work on as well. ", "parent": "Goals for Spring Quarter.txt", "score": 0.9678598642349243}, {"content": "This is a lot. I doubt I'll be able to do all of this, and if I fall short on time, I'll have to cut back on some of these activities. They are not listed in order of importance, I plan on figuring that out at a later date. What is important to me is that I actually think about what I want to do, and the priorities for them. It's all to easy to spend a day noodling on guitar, wanting to get better solely because I saw some guy play a fancy solo on Youtube, or to spend a day learning a programming language I'll never use because someone on Twitter praised it. This is a recipe for mediocrity, because progress takes sustained practice, and I can't sustain these sorts of \"inspirations.\" Instead, I want to think slowly and deliberately about what I want to get better at, and stick to a slow and steady plan to improve at it. That is my \"big-picture\" goal for this year. ", "parent": "Reflections for the New Year.txt", "score": 0.9852783679962158}, {"content": "I enjoy the process of sitting with my guitar, generating riff ideas on the fly, soloing over 8 bar progressions on my looper, but I'm not excited at all about creating a song. In many ways, my feelings about software are kind of the opposite. I have mixed, love/hate feelings about the process of writing software (reading documentation, chasing down bugs, writing tests, etc), but I feel incredibly excited about the end product. ", "parent": "NOW PAGE.txt", "score": 0.9947786963467761}, {"content": "I'm not really sure how to square this. One idea I've been obsessed with is how I can make the process of writing software more like the process of making music. ", "parent": "NOW PAGE.txt", "score": 1.0020936107795355}, {"content": "The steady rhythm of school and myriad 30-minute break periods it produces throughout the day have a good effect on my productivity, which is surprising. There's that famous [Paul Graham essay](http://www.paulgraham.com/makersschedule.html) where he talks about hacker schedules, or how programmers/creators prefer long periods of focused time over short fragmented work periods (that managers tend to prefer) because there's an overhead cost to loading a project into your head. [[focus]] [[personal-reflection]] ", "parent": "untitled-10-1-2021.txt", "score": 1.0228195190429688}], "I don't actually find music to be more fulfilling than programming. I got into playing the guitar mostly by accident and to be honest I am much better at the guitar than I am at programming, but playing the guitar was never my dream growing up. There are software ideas that I am excited about and obsessed with. I don't really feel the same way about music.": [{"content": "I don't actually find music to be more fulfilling than programming. I got into playing the guitar mostly by accident and to be honest I am much better at the guitar than I am at programming, but playing the guitar was never my dream growing up. There are software ideas that I am excited about and obsessed with. I don't really feel the same way about music.", "parent": "NOW PAGE.txt", "score": 0.0}, {"content": "I might not really care for making music, but learning how to play the guitar showed me what I'm looking for from a creative process. If I can form a creative process that feels like playing the guitar and outputs software, that would be very rewarding.", "parent": "NOW PAGE.txt", "score": 0.6074190188759513}, {"content": "I enjoy the process of sitting with my guitar, generating riff ideas on the fly, soloing over 8 bar progressions on my looper, but I'm not excited at all about creating a song. In many ways, my feelings about software are kind of the opposite. I have mixed, love/hate feelings about the process of writing software (reading documentation, chasing down bugs, writing tests, etc), but I feel incredibly excited about the end product. ", "parent": "NOW PAGE.txt", "score": 0.6447066909660801}, {"content": "My goal in life right now is to focus more on programming, while keeping music as a hobby. I want to improve at both, and someday I'd like to unite these two interests - not in some surface level way like getting really into digital signal processing or generative music, but by making the process of writing software more like the process of making music (intuitive, embodied, modular, composable).", "parent": "NOW PAGE.txt", "score": 0.6960534020658209}, {"content": "In short, I like the process of making music but don't care much about music. I have a love/hate relationship with the process of making software, but really want to write software.", "parent": "NOW PAGE.txt", "score": 0.7111310250816634}, {"content": "I have not had as much time to work on programming side projects. In general, I've been spending more spare time on music rather than programming. There's nothing intrinsically wrong with that, but I feel like it's less a reflection of what I want than it is a reflection of my environment. ", "parent": "NOW PAGE.txt", "score": 0.7549663048641038}, {"content": "I'm not really sure how to square this. One idea I've been obsessed with is how I can make the process of writing software more like the process of making music. ", "parent": "NOW PAGE.txt", "score": 0.825125237192579}, {"content": "I fell in love with playing the guitar because it rewards this lack of an attention span. You can copy a riff in minutes. You can create a new riff in minutes. Picking up a guitar puts me in an instant flow state, because I can just screw around and play with ideas instantly. It feels like a REPL for musical ideas.", "parent": "Fragments.txt", "score": 0.8735747337341309}, {"content": "There is at least one creative medium for which this is not true, however, and that is programming. Here is a unique and strange property of programming: Making tools to program better itself involves programming. This is not true for music or art - the process of making a guitar is not the art of playing the guitar, the process of making paints is not the art of painting, and while luthiers and paint-makers are certainly artists in their own right (and are often good at playing the guitar and painting, respectively), they practice an art that is distinct from the art that they enable. ", "parent": "Prometheus.txt", "score": 0.8786498308181763}, {"content": "This is not the case for programming. Making better tools for programming (new languages, new frameworks, new libraries) itself requires programming, and while making programming tools is different in important respects from writing regular programs, it is still programming. Making guitars is not playing guitars, making paints is not painting, but making better programming tools is programming. Programming, then, is an, intrinsically recursive creative medium. ", "parent": "Prometheus.txt", "score": 0.8930405378341675}], "I enjoy the process of sitting with my guitar, generating riff ideas on the fly, soloing over 8 bar progressions on my looper, but I'm not excited at all about creating a song. In many ways, my feelings about software are kind of the opposite. I have mixed, love/hate feelings about the process of writing software (reading documentation, chasing down bugs, writing tests, etc), but I feel incredibly excited about the end product. ": [{"content": "I enjoy the process of sitting with my guitar, generating riff ideas on the fly, soloing over 8 bar progressions on my looper, but I'm not excited at all about creating a song. In many ways, my feelings about software are kind of the opposite. I have mixed, love/hate feelings about the process of writing software (reading documentation, chasing down bugs, writing tests, etc), but I feel incredibly excited about the end product. ", "parent": "NOW PAGE.txt", "score": 0.0}, {"content": "In short, I like the process of making music but don't care much about music. I have a love/hate relationship with the process of making software, but really want to write software.", "parent": "NOW PAGE.txt", "score": 0.4460655901809111}, {"content": "I don't actually find music to be more fulfilling than programming. I got into playing the guitar mostly by accident and to be honest I am much better at the guitar than I am at programming, but playing the guitar was never my dream growing up. There are software ideas that I am excited about and obsessed with. I don't really feel the same way about music.", "parent": "NOW PAGE.txt", "score": 0.6447066909660801}, {"content": "I'm not really sure how to square this. One idea I've been obsessed with is how I can make the process of writing software more like the process of making music. ", "parent": "NOW PAGE.txt", "score": 0.6482010895824326}, {"content": "I might not really care for making music, but learning how to play the guitar showed me what I'm looking for from a creative process. If I can form a creative process that feels like playing the guitar and outputs software, that would be very rewarding.", "parent": "NOW PAGE.txt", "score": 0.6538030032088292}, {"content": "I love how physical playing the guitar is. I love the tactile sensation of steel strings digging into my fingers. I love how it requires me to coordinate all of my senses together. I love being able to experiment with small, self contained ideas with looper pedal. I love how it lets you map musical ideas into your head into concrete muscle memory, and I love that this muscle memory is *portable* between different keys and different songs.  ", "parent": "NOW PAGE.txt", "score": 0.7969460912901272}, {"content": "My goal in life right now is to focus more on programming, while keeping music as a hobby. I want to improve at both, and someday I'd like to unite these two interests - not in some surface level way like getting really into digital signal processing or generative music, but by making the process of writing software more like the process of making music (intuitive, embodied, modular, composable).", "parent": "NOW PAGE.txt", "score": 0.8908169280917139}, {"content": "I fell in love with playing the guitar because it rewards this lack of an attention span. You can copy a riff in minutes. You can create a new riff in minutes. Picking up a guitar puts me in an instant flow state, because I can just screw around and play with ideas instantly. It feels like a REPL for musical ideas.", "parent": "Fragments.txt", "score": 0.8974448442459106}, {"content": "I have not had as much time to work on programming side projects. In general, I've been spending more spare time on music rather than programming. There's nothing intrinsically wrong with that, but I feel like it's less a reflection of what I want than it is a reflection of my environment. ", "parent": "NOW PAGE.txt", "score": 0.9947786963467761}, {"content": "I hate how flat computer interfaces are. I hate how disembodied sitting in front of a screen makes me feel. I hate straining my eyes to dig through a mountain of text, while my other senses lay unused and completely idle. I hate gigantic codebases with massive piles of dependencies and hour long build processes, where you must test every little idea you have against a mountain of assumptions to make sure it doesn't break anything.", "parent": "NOW PAGE.txt", "score": 1.0240898001476773}], "In short, I like the process of making music but don't care much about music. I have a love/hate relationship with the process of making software, but really want to write software.": [{"content": "In short, I like the process of making music but don't care much about music. I have a love/hate relationship with the process of making software, but really want to write software.", "parent": "NOW PAGE.txt", "score": 0.0}, {"content": "I enjoy the process of sitting with my guitar, generating riff ideas on the fly, soloing over 8 bar progressions on my looper, but I'm not excited at all about creating a song. In many ways, my feelings about software are kind of the opposite. I have mixed, love/hate feelings about the process of writing software (reading documentation, chasing down bugs, writing tests, etc), but I feel incredibly excited about the end product. ", "parent": "NOW PAGE.txt", "score": 0.4460655901809111}, {"content": "I'm not really sure how to square this. One idea I've been obsessed with is how I can make the process of writing software more like the process of making music. ", "parent": "NOW PAGE.txt", "score": 0.6005967000919348}, {"content": "I might not really care for making music, but learning how to play the guitar showed me what I'm looking for from a creative process. If I can form a creative process that feels like playing the guitar and outputs software, that would be very rewarding.", "parent": "NOW PAGE.txt", "score": 0.6850083763332996}, {"content": "I don't actually find music to be more fulfilling than programming. I got into playing the guitar mostly by accident and to be honest I am much better at the guitar than I am at programming, but playing the guitar was never my dream growing up. There are software ideas that I am excited about and obsessed with. I don't really feel the same way about music.", "parent": "NOW PAGE.txt", "score": 0.7111310250816634}, {"content": "My goal in life right now is to focus more on programming, while keeping music as a hobby. I want to improve at both, and someday I'd like to unite these two interests - not in some surface level way like getting really into digital signal processing or generative music, but by making the process of writing software more like the process of making music (intuitive, embodied, modular, composable).", "parent": "NOW PAGE.txt", "score": 0.7402004488660322}, {"content": "I have not had as much time to work on programming side projects. In general, I've been spending more spare time on music rather than programming. There's nothing intrinsically wrong with that, but I feel like it's less a reflection of what I want than it is a reflection of my environment. ", "parent": "NOW PAGE.txt", "score": 0.9598645010829775}, {"content": "I love how physical playing the guitar is. I love the tactile sensation of steel strings digging into my fingers. I love how it requires me to coordinate all of my senses together. I love being able to experiment with small, self contained ideas with looper pedal. I love how it lets you map musical ideas into your head into concrete muscle memory, and I love that this muscle memory is *portable* between different keys and different songs.  ", "parent": "NOW PAGE.txt", "score": 1.0452750942888018}, {"content": "I hate how flat computer interfaces are. I hate how disembodied sitting in front of a screen makes me feel. I hate straining my eyes to dig through a mountain of text, while my other senses lay unused and completely idle. I hate gigantic codebases with massive piles of dependencies and hour long build processes, where you must test every little idea you have against a mountain of assumptions to make sure it doesn't break anything.", "parent": "NOW PAGE.txt", "score": 1.0640449772624707}, {"content": "This is not the case for programming. Making better tools for programming (new languages, new frameworks, new libraries) itself requires programming, and while making programming tools is different in important respects from writing regular programs, it is still programming. Making guitars is not playing guitars, making paints is not painting, but making better programming tools is programming. Programming, then, is an, intrinsically recursive creative medium. ", "parent": "Prometheus.txt", "score": 1.1269257068634033}], "I'm not really sure how to square this. One idea I've been obsessed with is how I can make the process of writing software more like the process of making music. ": [{"content": "I'm not really sure how to square this. One idea I've been obsessed with is how I can make the process of writing software more like the process of making music. ", "parent": "NOW PAGE.txt", "score": 0.0}, {"content": "In short, I like the process of making music but don't care much about music. I have a love/hate relationship with the process of making software, but really want to write software.", "parent": "NOW PAGE.txt", "score": 0.6005967000919348}, {"content": "My goal in life right now is to focus more on programming, while keeping music as a hobby. I want to improve at both, and someday I'd like to unite these two interests - not in some surface level way like getting really into digital signal processing or generative music, but by making the process of writing software more like the process of making music (intuitive, embodied, modular, composable).", "parent": "NOW PAGE.txt", "score": 0.6473562524319221}, {"content": "I enjoy the process of sitting with my guitar, generating riff ideas on the fly, soloing over 8 bar progressions on my looper, but I'm not excited at all about creating a song. In many ways, my feelings about software are kind of the opposite. I have mixed, love/hate feelings about the process of writing software (reading documentation, chasing down bugs, writing tests, etc), but I feel incredibly excited about the end product. ", "parent": "NOW PAGE.txt", "score": 0.6482010895824326}, {"content": "I might not really care for making music, but learning how to play the guitar showed me what I'm looking for from a creative process. If I can form a creative process that feels like playing the guitar and outputs software, that would be very rewarding.", "parent": "NOW PAGE.txt", "score": 0.7228316267056475}, {"content": "I don't actually find music to be more fulfilling than programming. I got into playing the guitar mostly by accident and to be honest I am much better at the guitar than I am at programming, but playing the guitar was never my dream growing up. There are software ideas that I am excited about and obsessed with. I don't really feel the same way about music.", "parent": "NOW PAGE.txt", "score": 0.825125237192579}, {"content": "My dream is to enable something I term \"generational computing.\" I want my kids and my grandkids to someday be able to interface with the artifacts of my digital life. I want them to be able to read my notes and ask an LLM about what I've learned over my life. I want them to be able to chat with a replica of me trained on my writings. I want them to be able to look through the music I made and the music I listened to, and see the connections between the two. I want them to be able to upload their own musical ideas or writings, and see the connections between what they've made and what I've made. ", "parent": "Generational Computing.txt", "score": 0.9170365929603577}, {"content": "I've found writing down tasks and decomposing them into smaller ones helps. Right now, I do this in [[exegesis]], which honestly feels somewhat suboptimal. I also have another side project called [https://focusmachine.app/](https://focusmachine.app/) to remind me of what I'm currently supposed to be focusing - it's really stupid, it just asks you what you want to work on and then spams you with a reminder to focus on that at user-inputted interval. [[focus]] [[focus-machine]] [[ideas]] [[exegesis]] ", "parent": "untitled-9-24-2021.txt", "score": 0.9206479787826538}, {"content": "Right now I'm listening to [Something About Us by Daft Punk](https://open.spotify.com/track/1NeLwFETswx8Fzxl2AFl91?si=bc9f206d498e4fdd), which might have something to do with how I'm feeling. What if words aren't enough to express a certain feeling? What if it's only the conjunction of words, images, videos and music, combined not in a determinate order like a moving picture or video, but presented indeterminately, in some form resembling a moodboard? That's the thesis behind [[synesthesia]] (a project I'm working on that will be closely integrated with [[exegesis]]).", "parent": "untitled-9-30-2021.txt", "score": 0.9207106828689575}, {"content": "Many of my ideas are in service of a singular dream: having the ability to combine incoherent fragments of creative inspiration into a cohesive organized whole. exegesis is about enabling that with writing. I hope the design of this site will help me do that with interface ideas.", "parent": "Fragments.txt", "score": 0.9646024703979492}], "I love how physical playing the guitar is. I love the tactile sensation of steel strings digging into my fingers. I love how it requires me to coordinate all of my senses together. I love being able to experiment with small, self contained ideas with looper pedal. I love how it lets you map musical ideas into your head into concrete muscle memory, and I love that this muscle memory is *portable* between different keys and different songs.  ": [{"content": "I love how physical playing the guitar is. I love the tactile sensation of steel strings digging into my fingers. I love how it requires me to coordinate all of my senses together. I love being able to experiment with small, self contained ideas with looper pedal. I love how it lets you map musical ideas into your head into concrete muscle memory, and I love that this muscle memory is *portable* between different keys and different songs.  ", "parent": "NOW PAGE.txt", "score": 0.0}, {"content": "I fell in love with playing the guitar because it rewards this lack of an attention span. You can copy a riff in minutes. You can create a new riff in minutes. Picking up a guitar puts me in an instant flow state, because I can just screw around and play with ideas instantly. It feels like a REPL for musical ideas.", "parent": "Fragments.txt", "score": 0.6558935642242432}, {"content": "I might not really care for making music, but learning how to play the guitar showed me what I'm looking for from a creative process. If I can form a creative process that feels like playing the guitar and outputs software, that would be very rewarding.", "parent": "NOW PAGE.txt", "score": 0.7888080723163756}, {"content": "I enjoy the process of sitting with my guitar, generating riff ideas on the fly, soloing over 8 bar progressions on my looper, but I'm not excited at all about creating a song. In many ways, my feelings about software are kind of the opposite. I have mixed, love/hate feelings about the process of writing software (reading documentation, chasing down bugs, writing tests, etc), but I feel incredibly excited about the end product. ", "parent": "NOW PAGE.txt", "score": 0.7969460912901272}, {"content": "I don't actually find music to be more fulfilling than programming. I got into playing the guitar mostly by accident and to be honest I am much better at the guitar than I am at programming, but playing the guitar was never my dream growing up. There are software ideas that I am excited about and obsessed with. I don't really feel the same way about music.", "parent": "NOW PAGE.txt", "score": 0.9210690108239455}, {"content": "I'm not really sure how to square this. One idea I've been obsessed with is how I can make the process of writing software more like the process of making music. ", "parent": "NOW PAGE.txt", "score": 1.0311488260825898}, {"content": "In short, I like the process of making music but don't care much about music. I have a love/hate relationship with the process of making software, but really want to write software.", "parent": "NOW PAGE.txt", "score": 1.0452750942888018}, {"content": "Here's an anecdote to illustrate my point: I picked up guitar at the start of quarantine. What inspired this? Was it a childhood dream of mine? Maybe I wanted to be like my favorite rock stars? Or was it just the boredom?", "parent": "Giant Robots.txt", "score": 1.0464959144592285}, {"content": "I'm playing guitar in two bands (one is a cover band, the other is an indie rock band). I'm glad I'm no longer a bedroom guitarist and it feels good to play music with other people, for other people.", "parent": "NOW PAGE.txt", "score": 1.0648886846047119}, {"content": "I want to get better at music. I went to [[piano]] classes as a kid and never really enjoyed them or took them seriously. Now I regret it. I also picked up guitar over quarantine, and want to get into a regular practice regimen for both of these instruments. For piano, I want to learn jazz, and how to improvise - I can't say I have much interest in building up my classical repertoire. For guitar, my current plan is to learn the blues, because I hear that's the root of many musical genres, and maybe branch off into rock or jazz later. A short term goal for both instruments is to familiarize myself with their scales. ", "parent": "Reflections for the New Year.txt", "score": 1.0962634086608887}], "I hate how flat computer interfaces are. I hate how disembodied sitting in front of a screen makes me feel. I hate straining my eyes to dig through a mountain of text, while my other senses lay unused and completely idle. I hate gigantic codebases with massive piles of dependencies and hour long build processes, where you must test every little idea you have against a mountain of assumptions to make sure it doesn't break anything.": [{"content": "I hate how flat computer interfaces are. I hate how disembodied sitting in front of a screen makes me feel. I hate straining my eyes to dig through a mountain of text, while my other senses lay unused and completely idle. I hate gigantic codebases with massive piles of dependencies and hour long build processes, where you must test every little idea you have against a mountain of assumptions to make sure it doesn't break anything.", "parent": "NOW PAGE.txt", "score": 0.0}, {"content": "Front end development should be way more visual. A great deal of front-end development pain points cannot be fixed with fancier libraries and languages, because the fundamental mismatch is trying to create something visual with a text-based tool.[[code]] [[ideas]] [[tools for thought]] ", "parent": "untitled-9-24-2021.txt", "score": 0.9313787221908569}, {"content": "Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.", "parent": "The AI-first operating system of the future.txt", "score": 1.0065816640853882}, {"content": "I enjoy the process of sitting with my guitar, generating riff ideas on the fly, soloing over 8 bar progressions on my looper, but I'm not excited at all about creating a song. In many ways, my feelings about software are kind of the opposite. I have mixed, love/hate feelings about the process of writing software (reading documentation, chasing down bugs, writing tests, etc), but I feel incredibly excited about the end product. ", "parent": "NOW PAGE.txt", "score": 1.0240898001476773}, {"content": "For example, I'm starting to suspect that no styling library is going to provide a good experience, because the fundamental pain point is trying to express a visual idea with a text-based set of rules. A styling library can provide some affordances that make things easier - easy theming, dark mode, conditional styles, etc. etc - but the fundamental painful experience of trying to express a visual idea in code cannot be ameliorated with better code tools.[[code]] [[ideas]] [[tools for thought]] ", "parent": "untitled-9-24-2021.txt", "score": 1.033433437347412}, {"content": "Electron really, really, really sucks. For starters, you have to use CommonJS. That itself would be bad enough, but there are a huge pile of other inconveniences that Electron dumps on you: Using window.prompt() doesn't work (because it blocks the main thread apparently) and it generates HUGE executables without making the slightest effort to tree-shake anything (it was literally bundling in sample text files I was using in the repo). Creating my own window.prompt() alternative was an interesting exercise, but I wish I wasn't forced into doing it.", "parent": "The making of Nomad Hypertext.txt", "score": 1.055046558380127}, {"content": "I fell into this kind of thinking while building exegesis, and it put an enormous amount of pressure on me, because it made me feel as if it wasn't just a notetaking app I was building, but a shrine for the mind. I would look at other notetaking systems like Roam Research and feel threatened - my notetaking app wasn't as powerful as theirs, therefore my mind would be weaker than theirs. Every little imperfection, every unimplemented feature, every bug felt sacrilegious - this was my second brain I was building after all. Needless to say, this led to a lot of feature creep, because my second brain had to be perfect.", "parent": "Second Brains.txt", "score": 1.0551276206970215}, {"content": "The counter argument here is that people don't want to use files, and they don't want to manage their own systems. I don't think this is a forgone conclusion. Think about how much effort has been poured into making new technologies like touchscreens and AI legible to ordinary people. ", "parent": "The AI-first operating system of the future.txt", "score": 1.0621496438980103}, {"content": "In short, I like the process of making music but don't care much about music. I have a love/hate relationship with the process of making software, but really want to write software.", "parent": "NOW PAGE.txt", "score": 1.0640449772624707}, {"content": "This is not groundbreaking news, but it's groundbreaking for me. I started my software engineering career writing code with cloud applications in mind, and the idea that you can ship cool projects without running database migrations or doing extensive backtesting against your monolith *is* groundbreaking to me. In college I wanted my own blog and instead of getting a static site generator I built out a cloud application with NextJS, PostgreSQL and Heroku. I did learn a lot and it helped me land my first internship, but now it strikes me as an incredibly wrong minded approach. ", "parent": "NOW PAGE.txt", "score": 1.0885259283931434}], "I might not really care for making music, but learning how to play the guitar showed me what I'm looking for from a creative process. If I can form a creative process that feels like playing the guitar and outputs software, that would be very rewarding.": [{"content": "I might not really care for making music, but learning how to play the guitar showed me what I'm looking for from a creative process. If I can form a creative process that feels like playing the guitar and outputs software, that would be very rewarding.", "parent": "NOW PAGE.txt", "score": 0.0}, {"content": "I don't actually find music to be more fulfilling than programming. I got into playing the guitar mostly by accident and to be honest I am much better at the guitar than I am at programming, but playing the guitar was never my dream growing up. There are software ideas that I am excited about and obsessed with. I don't really feel the same way about music.", "parent": "NOW PAGE.txt", "score": 0.6074190188759513}, {"content": "I enjoy the process of sitting with my guitar, generating riff ideas on the fly, soloing over 8 bar progressions on my looper, but I'm not excited at all about creating a song. In many ways, my feelings about software are kind of the opposite. I have mixed, love/hate feelings about the process of writing software (reading documentation, chasing down bugs, writing tests, etc), but I feel incredibly excited about the end product. ", "parent": "NOW PAGE.txt", "score": 0.6538030032088292}, {"content": "In short, I like the process of making music but don't care much about music. I have a love/hate relationship with the process of making software, but really want to write software.", "parent": "NOW PAGE.txt", "score": 0.6850083763332996}, {"content": "I'm not really sure how to square this. One idea I've been obsessed with is how I can make the process of writing software more like the process of making music. ", "parent": "NOW PAGE.txt", "score": 0.7228316267056475}, {"content": "I fell in love with playing the guitar because it rewards this lack of an attention span. You can copy a riff in minutes. You can create a new riff in minutes. Picking up a guitar puts me in an instant flow state, because I can just screw around and play with ideas instantly. It feels like a REPL for musical ideas.", "parent": "Fragments.txt", "score": 0.7566155791282654}, {"content": "I love how physical playing the guitar is. I love the tactile sensation of steel strings digging into my fingers. I love how it requires me to coordinate all of my senses together. I love being able to experiment with small, self contained ideas with looper pedal. I love how it lets you map musical ideas into your head into concrete muscle memory, and I love that this muscle memory is *portable* between different keys and different songs.  ", "parent": "NOW PAGE.txt", "score": 0.7888080723163756}, {"content": "My goal in life right now is to focus more on programming, while keeping music as a hobby. I want to improve at both, and someday I'd like to unite these two interests - not in some surface level way like getting really into digital signal processing or generative music, but by making the process of writing software more like the process of making music (intuitive, embodied, modular, composable).", "parent": "NOW PAGE.txt", "score": 0.8276194376247588}, {"content": "There is at least one creative medium for which this is not true, however, and that is programming. Here is a unique and strange property of programming: Making tools to program better itself involves programming. This is not true for music or art - the process of making a guitar is not the art of playing the guitar, the process of making paints is not the art of painting, and while luthiers and paint-makers are certainly artists in their own right (and are often good at playing the guitar and painting, respectively), they practice an art that is distinct from the art that they enable. ", "parent": "Prometheus.txt", "score": 0.9425116181373596}, {"content": "I want to get better at music. I went to [[piano]] classes as a kid and never really enjoyed them or took them seriously. Now I regret it. I also picked up guitar over quarantine, and want to get into a regular practice regimen for both of these instruments. For piano, I want to learn jazz, and how to improvise - I can't say I have much interest in building up my classical repertoire. For guitar, my current plan is to learn the blues, because I hear that's the root of many musical genres, and maybe branch off into rock or jazz later. A short term goal for both instruments is to familiarize myself with their scales. ", "parent": "Reflections for the New Year.txt", "score": 0.9476152658462524}], "My goal in life right now is to focus more on programming, while keeping music as a hobby. I want to improve at both, and someday I'd like to unite these two interests - not in some surface level way like getting really into digital signal processing or generative music, but by making the process of writing software more like the process of making music (intuitive, embodied, modular, composable).": [{"content": "My goal in life right now is to focus more on programming, while keeping music as a hobby. I want to improve at both, and someday I'd like to unite these two interests - not in some surface level way like getting really into digital signal processing or generative music, but by making the process of writing software more like the process of making music (intuitive, embodied, modular, composable).", "parent": "NOW PAGE.txt", "score": 7.998845266242203e-07}, {"content": "I'm not really sure how to square this. One idea I've been obsessed with is how I can make the process of writing software more like the process of making music. ", "parent": "NOW PAGE.txt", "score": 0.6473103894612107}, {"content": "I don't actually find music to be more fulfilling than programming. I got into playing the guitar mostly by accident and to be honest I am much better at the guitar than I am at programming, but playing the guitar was never my dream growing up. There are software ideas that I am excited about and obsessed with. I don't really feel the same way about music.", "parent": "NOW PAGE.txt", "score": 0.6959638056306477}, {"content": "In short, I like the process of making music but don't care much about music. I have a love/hate relationship with the process of making software, but really want to write software.", "parent": "NOW PAGE.txt", "score": 0.7401409507303952}, {"content": "I have not had as much time to work on programming side projects. In general, I've been spending more spare time on music rather than programming. There's nothing intrinsically wrong with that, but I feel like it's less a reflection of what I want than it is a reflection of my environment. ", "parent": "NOW PAGE.txt", "score": 0.7793985417352767}, {"content": "This is a lot. I doubt I'll be able to do all of this, and if I fall short on time, I'll have to cut back on some of these activities. They are not listed in order of importance, I plan on figuring that out at a later date. What is important to me is that I actually think about what I want to do, and the priorities for them. It's all to easy to spend a day noodling on guitar, wanting to get better solely because I saw some guy play a fancy solo on Youtube, or to spend a day learning a programming language I'll never use because someone on Twitter praised it. This is a recipe for mediocrity, because progress takes sustained practice, and I can't sustain these sorts of \"inspirations.\" Instead, I want to think slowly and deliberately about what I want to get better at, and stick to a slow and steady plan to improve at it. That is my \"big-picture\" goal for this year. ", "parent": "Reflections for the New Year.txt", "score": 0.7882977724075317}, {"content": "I want to get better at music. I went to [[piano]] classes as a kid and never really enjoyed them or took them seriously. Now I regret it. I also picked up guitar over quarantine, and want to get into a regular practice regimen for both of these instruments. For piano, I want to learn jazz, and how to improvise - I can't say I have much interest in building up my classical repertoire. For guitar, my current plan is to learn the blues, because I hear that's the root of many musical genres, and maybe branch off into rock or jazz later. A short term goal for both instruments is to familiarize myself with their scales. ", "parent": "Reflections for the New Year.txt", "score": 0.8160947561264038}, {"content": "I might not really care for making music, but learning how to play the guitar showed me what I'm looking for from a creative process. If I can form a creative process that feels like playing the guitar and outputs software, that would be very rewarding.", "parent": "NOW PAGE.txt", "score": 0.8275316744701708}, {"content": "I enjoy the process of sitting with my guitar, generating riff ideas on the fly, soloing over 8 bar progressions on my looper, but I'm not excited at all about creating a song. In many ways, my feelings about software are kind of the opposite. I have mixed, love/hate feelings about the process of writing software (reading documentation, chasing down bugs, writing tests, etc), but I feel incredibly excited about the end product. ", "parent": "NOW PAGE.txt", "score": 0.8907936733711075}, {"content": "My dream is to enable something I term \"generational computing.\" I want my kids and my grandkids to someday be able to interface with the artifacts of my digital life. I want them to be able to read my notes and ask an LLM about what I've learned over my life. I want them to be able to chat with a replica of me trained on my writings. I want them to be able to look through the music I made and the music I listened to, and see the connections between the two. I want them to be able to upload their own musical ideas or writings, and see the connections between what they've made and what I've made. ", "parent": "Generational Computing.txt", "score": 0.9216040372848511}], "My reading life has been totally fragmented. I am still obsessed with The Medium is the Massage and the idea of sensory ratios, but I haven't found reading more media theory to be particularly rewarding. I've reread bits and pieces of Underground Man and some Milan Kundera, and I've been reading a bit of Montaigne. All of it has been interesting, but none of the ideas have really stuck with me to the level of obsession.": [{"content": "My reading life has been totally fragmented. I am still obsessed with The Medium is the Massage and the idea of sensory ratios, but I haven't found reading more media theory to be particularly rewarding. I've reread bits and pieces of Underground Man and some Milan Kundera, and I've been reading a bit of Montaigne. All of it has been interesting, but none of the ideas have really stuck with me to the level of obsession.", "parent": "NOW PAGE.txt", "score": 0.0}, {"content": "I haven't enjoyed reading something this much in a while. Usually I struggle to read more than 10 pages of something at a time, but I found this really engaging. Feels like the right level of philosophical sophistication for me right now - the concepts are comprehensible but still challenging and novel, and the biographical element adds a level of allure as well. ", "parent": "untitled-2-6-2022.txt", "score": 0.9760347604751587}, {"content": "My aim in reading [[philosophy]] is more for general intellectual enrichment and to provide insights into my work, not philosophy for its own sake, so I feel fine with reading summaries as opposed to heavy primary literature (except where the primary literature interests me). For thinkers who are influential that don't interest me very much (like Kant), I've found summaries from the very short series and the Stanford Encyclopedia of Philosophy to be very helpful. ", "parent": "untitled-9-21-2021.txt", "score": 1.0244474411010742}, {"content": "I want to read more. I started reading a lot more in quarantine, but slowed down towards the end of 2020 because I was spending a lot more time on [[exegesis]]. Now that I have more time, I want to start a steady reading habit. The particular corner of [[twitter]] I hang around is fond of citing various philosophers and ideas, many of which I'm interested in, but have never taken the time to study closely. This year, I want to dig deeper into these ideas, go beyond surface-level Twitter philosophy memes and Youtube philosophy videos and read some proper primary sources. Around this time last year, I read Roger Scruton's A very short introduction to Kant. I want to tackle the Critique of Pure Reason sometime this year. I may live-blog my notes on exegesis (though I can't guarantee they'll be very good).", "parent": "Reflections for the New Year.txt", "score": 1.058363676071167}, {"content": "It's been rewarding seeing how the more [[philosophy]] I read, the more complex texts I'm able to understand. I think the [[metaphysics]] class I'm taking right now has helped illuminate some of the concepts as well.", "parent": "untitled-2-6-2022.txt", "score": 1.0779777765274048}, {"content": "I could not help but find this extraordinarily similar to what the protagonist and narrator of [[Zen and the Art of Motorcycle Repair]] goes through - he starts as a scientist, looks for justifications for science in philosophy, becomes frustrated with philosophy and eventually embraces esotericism before going insane. The instrumental rationality that the Critical Theorists disliked seems roughly equivalent to the \"classical rationality\" Phaedrus talks about in [[Zen and the Art of Motorcycle Repair]] as well. ", "parent": "untitled-9-21-2021.txt", "score": 1.0926952362060547}, {"content": "Read more (both fiction and non-fiction)", "parent": "Goals for Spring Quarter.txt", "score": 1.120530128479004}, {"content": "I've been reading Betraying Spinoza by Rebecca Goldstein. It's really good so far, an interesting combination of describing Spinoza the person biographically, describing his philosophy, and describing the tensions between those two aims. ", "parent": "untitled-2-6-2022.txt", "score": 1.1582024097442627}, {"content": "There is a time and place for minimalism, and all in all I don't think it is an intrinsically bad thing. I should also point out that I like all three writers mentioned above. However, I do think it's overused as an aesthetic philosophy, and that this overuse is a symptom of a deeper cultural illness: a general lack of conviction and courage. ", "parent": "Minimalism.txt", "score": 1.1609264612197876}, {"content": "For reading, I read whatever I want, whenever I want. I do think setting a goal of reading at least 5 times a week wouldn't hurt, however. ", "parent": "Goals for Spring Quarter.txt", "score": 1.1614435911178589}], "I rewrote the indexing software for this blog in Python. The general philosophy of keeping things as modular as possible, storing content in interoperable, plain formats whenever possible, has been paying off. I'm realizing slowly how many other possibilities are opened up by keeping content in plaintext/markdown - I can write a weekend project mapping my blog posts by topic and time, I can create a word cloud visualization of my blog, I can build a game of pong where the blocks are paragraphs of my blogposts, all without touching any existing code. ": [{"content": "I rewrote the indexing software for this blog in Python. The general philosophy of keeping things as modular as possible, storing content in interoperable, plain formats whenever possible, has been paying off. I'm realizing slowly how many other possibilities are opened up by keeping content in plaintext/markdown - I can write a weekend project mapping my blog posts by topic and time, I can create a word cloud visualization of my blog, I can build a game of pong where the blocks are paragraphs of my blogposts, all without touching any existing code. ", "parent": "NOW PAGE.txt", "score": 0.0}, {"content": "Since the content is in an interoperable format, I can build software on top of my content without touching or modifying existing code. ", "parent": "NOW PAGE.txt", "score": 0.8925896378115323}, {"content": "This is not groundbreaking news, but it's groundbreaking for me. I started my software engineering career writing code with cloud applications in mind, and the idea that you can ship cool projects without running database migrations or doing extensive backtesting against your monolith *is* groundbreaking to me. In college I wanted my own blog and instead of getting a static site generator I built out a cloud application with NextJS, PostgreSQL and Heroku. I did learn a lot and it helped me land my first internship, but now it strikes me as an incredibly wrong minded approach. ", "parent": "NOW PAGE.txt", "score": 0.8948984678327201}, {"content": "There are pros and cons to this approach. The biggest pro is that it generates a static blog. There's no backend to maintain, and it's quite lightweight and loads fast, while also providing the benefit of semantic hyperlinks. The con is that since the index is precomputed, you can't search for arbitrary things like you can in nomad hypertext. ", "parent": "What is Yurt.txt", "score": 0.898754358291626}, {"content": "I think eventually, I might want to deploy a blog with a full fledged backend, so users can query anything they'd like to my blog. ", "parent": "What is Yurt.txt", "score": 0.9306619167327881}, {"content": "I want to learn more code. Working on [[exegesis]] over the course of a year, I saw my coding ability improve substantially. Towards the last 2 months, while rewriting a part of the codebase, I found myself dumbfounded by some of the decisions and patterns I had used a year earlier. The code I wrote towards the end was noticeably cleaner and more maintainable, mostly because I had familiarized myself with [[React]] hooks. Learning NextJS and GraphQL was also very rewarding, and both technologies were used extensively in the final version of exegesis. Looking forwards, I am thinking about learning Go, Clojure and maybe Rust. Go is the most practical one of all these for my purposes, and could open up a lot of job offers. Clojure is the most interesting from a theoretical standpoint, since I've never used a lisp or functional language. Rust is interesting because I hate systems/low-level programming, but I suspect that might only be because I hate C, and maybe Rust's more modern features will sell me on it. ", "parent": "Reflections for the New Year.txt", "score": 0.9547902345657349}, {"content": "However, when building Yurt, the static site builder for nomad hypertext, I found myself repeating a lot of logic. I found myself wanting to add features to the indexing engine, like being able to use cloud providers instead of local models (because doing all this processing locally can take ages!). In the future, I might want to use multimodal models, so I can see similarity between images, text, and audio. ", "parent": "The making of Nomad Hypertext.txt", "score": 0.9719362258911133}, {"content": "I was greatly inspired by two blogposts. The first, [Hyperlink Maximalism](https://thesephist.com/posts/hyperlink/) by Linus Lee talks about generating hyperlinks automatically between documents, and comes with a [demo](https://notation.app) that made a deep impression on me. To be honest, nomad hypertext is just Linus' demo using semantic search instead of full text search.", "parent": "What is Nomad Hypertext.txt", "score": 0.9738028238566906}, {"content": "Fortunately, it looks like there's progress being made here, with projects like [https://github.com/blocks/blocks.](https://github.com/blocks/blocks.) I want to build my own solutions, maybe borrowing from current projects.[[code]] [[ideas]] [[tools for thought]] ", "parent": "untitled-9-24-2021.txt", "score": 0.9868117570877075}, {"content": "One last thing: There is a solution that combines the flexibility of plaintext with the aesthetics of rich text - Markdown! I don't think I'll support Markdown formatting in nomad hypertext, but for my static site generator Yurt, I will try to do that in the future. The utility would mostly be from having usable links. ", "parent": "Plaintext is your best friend.txt", "score": 0.9950040578842163}], "Since the content is in an interoperable format, I can build software on top of my content without touching or modifying existing code. ": [{"content": "Since the content is in an interoperable format, I can build software on top of my content without touching or modifying existing code. ", "parent": "NOW PAGE.txt", "score": 0.0}, {"content": "I rewrote the indexing software for this blog in Python. The general philosophy of keeping things as modular as possible, storing content in interoperable, plain formats whenever possible, has been paying off. I'm realizing slowly how many other possibilities are opened up by keeping content in plaintext/markdown - I can write a weekend project mapping my blog posts by topic and time, I can create a word cloud visualization of my blog, I can build a game of pong where the blocks are paragraphs of my blogposts, all without touching any existing code. ", "parent": "NOW PAGE.txt", "score": 0.8925896378115323}, {"content": "It is this property that allows programmers to cheat the Gods, and achieve divine levels of creative output thought forbidden to mortals. A programmer can create abstractions than enable them to create in days what previously took months. I myself rewrote a good part of exegesis 2 months before I released it, and the new abstractions I picked enabled me to redo in those 2 months what took me almost a year at first. Moreover, programmers can share their abstractions, and borrow the inventions of others as well.", "parent": "Prometheus.txt", "score": 1.1369881629943848}, {"content": "This is not groundbreaking news, but it's groundbreaking for me. I started my software engineering career writing code with cloud applications in mind, and the idea that you can ship cool projects without running database migrations or doing extensive backtesting against your monolith *is* groundbreaking to me. In college I wanted my own blog and instead of getting a static site generator I built out a cloud application with NextJS, PostgreSQL and Heroku. I did learn a lot and it helped me land my first internship, but now it strikes me as an incredibly wrong minded approach. ", "parent": "NOW PAGE.txt", "score": 1.143766727109899}, {"content": "My dream is to enable something I term \"generational computing.\" I want my kids and my grandkids to someday be able to interface with the artifacts of my digital life. I want them to be able to read my notes and ask an LLM about what I've learned over my life. I want them to be able to chat with a replica of me trained on my writings. I want them to be able to look through the music I made and the music I listened to, and see the connections between the two. I want them to be able to upload their own musical ideas or writings, and see the connections between what they've made and what I've made. ", "parent": "Generational Computing.txt", "score": 1.161102294921875}, {"content": "Fortunately, it looks like there's progress being made here, with projects like [https://github.com/blocks/blocks.](https://github.com/blocks/blocks.) I want to build my own solutions, maybe borrowing from current projects.[[code]] [[ideas]] [[tools for thought]] ", "parent": "untitled-9-24-2021.txt", "score": 1.1682389974594116}, {"content": "Most software today is written for mobile or web. Both of these embody the opposite of the unix philosophy of small, simple, composable programs. At the same time, an entire generation (myself included) has grown up interacting with computers primarily through web browsers and cell phones, interacting less and less with the native filesystem.", "parent": "The AI-first operating system of the future.txt", "score": 1.1805815696716309}, {"content": "However, when building Yurt, the static site builder for nomad hypertext, I found myself repeating a lot of logic. I found myself wanting to add features to the indexing engine, like being able to use cloud providers instead of local models (because doing all this processing locally can take ages!). In the future, I might want to use multimodal models, so I can see similarity between images, text, and audio. ", "parent": "The making of Nomad Hypertext.txt", "score": 1.188135027885437}, {"content": "I want to learn more code. Working on [[exegesis]] over the course of a year, I saw my coding ability improve substantially. Towards the last 2 months, while rewriting a part of the codebase, I found myself dumbfounded by some of the decisions and patterns I had used a year earlier. The code I wrote towards the end was noticeably cleaner and more maintainable, mostly because I had familiarized myself with [[React]] hooks. Learning NextJS and GraphQL was also very rewarding, and both technologies were used extensively in the final version of exegesis. Looking forwards, I am thinking about learning Go, Clojure and maybe Rust. Go is the most practical one of all these for my purposes, and could open up a lot of job offers. Clojure is the most interesting from a theoretical standpoint, since I've never used a lisp or functional language. Rust is interesting because I hate systems/low-level programming, but I suspect that might only be because I hate C, and maybe Rust's more modern features will sell me on it. ", "parent": "Reflections for the New Year.txt", "score": 1.1965395212173462}, {"content": "I want to clarify that I'm not bullish at all on no-code. I think \"no-code\" and \"low-code\" are the wrong way to frame things. There is a place for tools like this, but it's more productive to think of them as \"visual developer tools.\"[[code]] [[ideas]] [[tools for thought]] ", "parent": "untitled-9-24-2021.txt", "score": 1.1994967460632324}], "This is not groundbreaking news, but it's groundbreaking for me. I started my software engineering career writing code with cloud applications in mind, and the idea that you can ship cool projects without running database migrations or doing extensive backtesting against your monolith *is* groundbreaking to me. In college I wanted my own blog and instead of getting a static site generator I built out a cloud application with NextJS, PostgreSQL and Heroku. I did learn a lot and it helped me land my first internship, but now it strikes me as an incredibly wrong minded approach. ": [{"content": "This is not groundbreaking news, but it's groundbreaking for me. I started my software engineering career writing code with cloud applications in mind, and the idea that you can ship cool projects without running database migrations or doing extensive backtesting against your monolith *is* groundbreaking to me. In college I wanted my own blog and instead of getting a static site generator I built out a cloud application with NextJS, PostgreSQL and Heroku. I did learn a lot and it helped me land my first internship, but now it strikes me as an incredibly wrong minded approach. ", "parent": "NOW PAGE.txt", "score": 0.0}, {"content": "I rewrote the indexing software for this blog in Python. The general philosophy of keeping things as modular as possible, storing content in interoperable, plain formats whenever possible, has been paying off. I'm realizing slowly how many other possibilities are opened up by keeping content in plaintext/markdown - I can write a weekend project mapping my blog posts by topic and time, I can create a word cloud visualization of my blog, I can build a game of pong where the blocks are paragraphs of my blogposts, all without touching any existing code. ", "parent": "NOW PAGE.txt", "score": 0.8948984678327201}, {"content": "I want to learn more code. Working on [[exegesis]] over the course of a year, I saw my coding ability improve substantially. Towards the last 2 months, while rewriting a part of the codebase, I found myself dumbfounded by some of the decisions and patterns I had used a year earlier. The code I wrote towards the end was noticeably cleaner and more maintainable, mostly because I had familiarized myself with [[React]] hooks. Learning NextJS and GraphQL was also very rewarding, and both technologies were used extensively in the final version of exegesis. Looking forwards, I am thinking about learning Go, Clojure and maybe Rust. Go is the most practical one of all these for my purposes, and could open up a lot of job offers. Clojure is the most interesting from a theoretical standpoint, since I've never used a lisp or functional language. Rust is interesting because I hate systems/low-level programming, but I suspect that might only be because I hate C, and maybe Rust's more modern features will sell me on it. ", "parent": "Reflections for the New Year.txt", "score": 0.9412151575088501}, {"content": "Local-first AI presents a huge opportunity to change this. Like the now-dominant paradigms of web and mobile computing, a local-first future is not a forgone conclusion - but it is possible. What if we tried really hard to make filesystems and composable, small, programs usable for ordinary people? What if we designed software in a way that allowed people to take control of their own data? What if we made a bet on increasing computer literacy, rather than surrendering ourselves to infantilizing users?  ", "parent": "The AI-first operating system of the future.txt", "score": 0.9459065198898315}, {"content": "My hope is that local-first AI and CRDTs enable us to create decentralized, local first software that will stand the tests of time. This is why I'm so bullish on local first applications, plain text, file systems, and unix - they have already stood the tests of time, and will likely continue to. They are deeply lindy in a way that mobile and cloud computing are not. ", "parent": "Generational Computing.txt", "score": 0.9748523235321045}, {"content": "[[ideas]]: As I've matured as a [[React]] developer, I've found certain standard methods of handling things like state management, routing, styling, and data fetching. Because I've standardized on this approach, I've been writing higher order functions that abstract away a lot of the boilerplate. This has me thinking - it would almost certainly be possible to build some kind of visual tool to help scaffold a react app. Something in between no-code and a developer tool - like the [Nx.dev extension for VSCode](https://marketplace.visualstudio.com/items?itemName=nrwl.angular-console). [[code]] ", "parent": "untitled-9-20-2021.txt", "score": 0.9896843433380127}, {"content": "Working on exegesis was a grueling affair at times. I rewrote the schema multiple times, rewrote the backend from scratch 2 months before release, chased countless UI bugs, and manually patched abandoned NPM packages. Part of it may have been due to my inexperience, but [working with ](https://nichwch.medium.com/making-yana-e3fade3f56e7)[rich text](https://medium.engineering/why-contenteditable-is-terrible-122d8a40e480) is just a [difficult task](https://twitter.com/thesephist/status/1360298464349999108), period. At one point, I considered giving up after finding a rival writing app I thought I simply couldn't compete with - I have a copy of an unfinished essay I started writing on why I had given up tucked away somewhere. ", "parent": "Prometheus.txt", "score": 0.996286153793335}, {"content": "With cloud software, our digital lives lack this permanence. Startups shut down left and right, products get split into multiple products or merged together, interfaces get redesigned and their redesigns get redesigned, all at the whims of the markets or feuding product managers. This is not a stable foundation to build anything lasting on top of.", "parent": "Generational Computing.txt", "score": 0.997665524482727}, {"content": "For a while, I exclusively worked on a long, serious projects. I wanted to build a billion dollar product. I wanted to be the founder of a successful startup. I wanted to write, but I wanted to write on my own platform that everybody else would also write on, that would have all the features I wanted that everybody else would love.", "parent": "Fragments.txt", "score": 1.0106699466705322}, {"content": "I want to clarify that I'm not bullish at all on no-code. I think \"no-code\" and \"low-code\" are the wrong way to frame things. There is a place for tools like this, but it's more productive to think of them as \"visual developer tools.\"[[code]] [[ideas]] [[tools for thought]] ", "parent": "untitled-9-24-2021.txt", "score": 1.0250916481018066}]}